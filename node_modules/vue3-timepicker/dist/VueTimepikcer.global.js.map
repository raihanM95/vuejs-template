{"version":3,"file":"VueTimepikcer.global.js","sources":["../src/VueTimepicker.vue"],"sourcesContent":["<script>\nimport { nextTick } from 'vue'\n\nconst CONFIG = {\n  HOUR_TOKENS: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n  MINUTE_TOKENS: ['mm', 'm'],\n  SECOND_TOKENS: ['ss', 's'],\n  APM_TOKENS: ['A', 'a'],\n  BASIC_TYPES: ['hour', 'minute', 'second', 'apm']\n}\n\nconst DEFAULT_OPTIONS = {\n  format: 'HH:mm',\n  minuteInterval: 1,\n  secondInterval: 1,\n  hourRange: null,\n  minuteRange: null,\n  secondRange: null,\n  hideDisabledHours: false,\n  hideDisabledMinutes: false,\n  hideDisabledSeconds: false,\n  hideDisabledItems: false,\n  advancedKeyboard: false,\n  hideDropdown: false,\n  blurDelay: 300,\n  manualInputTimeout: 1000,\n  dropOffsetHeight: 160\n}\n\nexport default {\n  name: 'VueTimepicker',\n\n  props: {\n    modelValue: { type: [ Object, String ] },\n    format: { type: String },\n    minuteInterval: { type: [ Number, String ] },\n    secondInterval: { type: [ Number, String ] },\n\n    hourRange: { type: Array },\n    minuteRange: { type: Array },\n    secondRange: { type: Array },\n\n    hideDisabledHours: { type: Boolean, default: false },\n    hideDisabledMinutes: { type: Boolean, default: false },\n    hideDisabledSeconds: { type: Boolean, default: false },\n    hideDisabledItems: { type: Boolean, default: false },\n\n    hideClearButton: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    closeOnComplete: { type: Boolean, default: false },\n\n    id: { type: String },\n    name: { type: String },\n    inputClass: { type: [ String, Object, Array ] },\n    placeholder: { type: String },\n    tabindex: { type: [ Number, String ], default: 0 },\n    inputWidth: { type: String },\n    autocomplete: { type: String, default: 'off' },\n\n    hourLabel: { type: String },\n    minuteLabel: { type: String },\n    secondLabel: { type: String },\n    apmLabel: { type: String },\n    amText: { type: String },\n    pmText: { type: String },\n\n    blurDelay: { type: [ Number, String ] },\n    advancedKeyboard: { type: Boolean, default: false },\n\n    lazy: { type: Boolean, default: false },\n    autoScroll: { type: Boolean, default: false },\n\n    dropDirection: { type: String, default: 'down' },\n    dropOffsetHeight: { type: [ Number, String ] },\n    containerId: { type: String },\n\n    manualInput: { type: Boolean, default: false },\n    manualInputTimeout: { type: [ Number, String ] },\n    hideDropdown: { type: Boolean, default: false },\n    fixedDropdownButton: { type: Boolean, default: false },\n\n    debugMode: { type: Boolean, default: false }\n  },\n\n  data () {\n    return {\n      timeValue: {},\n\n      hours: [],\n      minutes: [],\n      seconds: [],\n      apms: [],\n\n      isActive: false,\n      showDropdown: false,\n      isFocusing: false,\n      debounceTimer: undefined,\n\n      hourType: 'HH',\n      minuteType: 'mm',\n      secondType: '',\n      apmType: '',\n      hour: '',\n      minute: '',\n      second: '',\n      apm: '',\n      fullValues: undefined,\n      bakDisplayTime: undefined,\n      doClearApmChecking: false,\n\n      selectionTimer: undefined,\n      kbInputTimer: undefined,\n      kbInputLog: '',\n      bakCurrentPos: undefined,\n      forceDropOnTop: false\n    }\n  },\n\n  emits: ['update:modelValue', 'change', 'open', 'close', 'focus', 'blur', 'error'],\n\n  computed: {\n    opts () {\n      const options = Object.assign({}, DEFAULT_OPTIONS)\n\n      if (this.format && this.format.length) {\n        options.format = String(this.format)\n      }\n\n      if (this.isNumber(this.minuteInterval)) {\n        options.minuteInterval = +this.minuteInterval\n      }\n      // minuteInterval failsafe\n      if (!options.minuteInterval || options.minuteInterval < 1 || options.minuteInterval > 60) {\n        if (this.debugMode) {\n          if (options.minuteInterval > 60) {\n            this.debugLog(`\"minute-interval\" should be less than 60. Current value is ${this.minuteInterval}`)\n          } else if (options.minuteInterval === 0 || options.minuteInterval < 1) {\n            this.debugLog(`\"minute-interval\" should be NO less than 1. Current value is ${this.minuteInterval}`)\n          }\n        }\n        if (options.minuteInterval === 0) {\n          options.minuteInterval = 60\n        } else {\n          options.minuteInterval = 1\n        }\n      }\n\n      if (this.isNumber(this.secondInterval)) {\n        options.secondInterval = +this.secondInterval\n      }\n      // secondInterval failsafe\n      if (!options.secondInterval || options.secondInterval < 1 || options.secondInterval > 60) {\n        if (this.debugMode) {\n          if (options.secondInterval > 60) {\n            this.debugLog(`\"second-interval\" should be less than 60. Current value is ${this.secondInterval}`)\n          } else if (options.secondInterval === 0 || options.secondInterval < 1) {\n            this.debugLog(`\"second-interval\" should be NO less than 1. Current value is ${this.secondInterval}`)\n          }\n        }\n        if (options.secondInterval === 0) {\n          options.secondInterval = 60\n        } else {\n          options.secondInterval = 1\n        }\n      }\n\n      if (this.hourRange && Array.isArray(this.hourRange)) {\n        options.hourRange = JSON.parse(JSON.stringify(this.hourRange))\n        if (!this.hourRange.length && this.debugMode) {\n          this.debugLog('The \"hour-range\" array is empty (length === 0)')\n        }\n      }\n\n      if (this.minuteRange && Array.isArray(this.minuteRange)) {\n        options.minuteRange = JSON.parse(JSON.stringify(this.minuteRange))\n        if (!this.minuteRange.length && this.debugMode) {\n          this.debugLog('The \"minute-range\" array is empty (length === 0)')\n        }\n      }\n\n      if (this.secondRange && Array.isArray(this.secondRange)) {\n        options.secondRange = JSON.parse(JSON.stringify(this.secondRange))\n        if (!this.secondRange.length && this.debugMode) {\n          this.debugLog('The \"second-range\" array is empty (length === 0)')\n        }\n      }\n\n      if (this.hideDisabledItems) {\n        options.hideDisabledItems = true\n      }\n\n      if (this.hideDisabledHours || this.hideDisabledItems) {\n        options.hideDisabledHours = true\n      }\n      if (this.hideDisabledMinutes || this.hideDisabledItems) {\n        options.hideDisabledMinutes = true\n      }\n      if (this.hideDisabledSeconds || this.hideDisabledItems) {\n        options.hideDisabledSeconds = true\n      }\n\n      if (this.hideDropdown) {\n        if (this.manualInput) {\n          options.hideDropdown = true\n        } else if (this.debugMode) {\n          this.debugLog('\"hide-dropdown\" only works with \"manual-input\" mode')\n        }\n      }\n\n      if (this.blurDelay && +this.blurDelay > 0) {\n        options.blurDelay = +this.blurDelay\n      }\n\n      if (this.manualInputTimeout && +this.manualInputTimeout > 0) {\n        options.manualInputTimeout = +this.manualInputTimeout\n      }\n\n      if (this.dropOffsetHeight && +this.dropOffsetHeight > 0) {\n        options.dropOffsetHeight = +this.dropOffsetHeight\n      }\n\n      return options\n    },\n\n    useStringValue () {\n      return typeof this.modelValue === 'string'\n    },\n\n    formatString () {\n      return this.opts.format || DEFAULT_OPTIONS.format\n    },\n\n    inUse () {\n      const typesInUse = CONFIG.BASIC_TYPES.filter(type => this.getTokenByType(type))\n      // Sort types and tokens by their sequence in the \"format\" string\n      typesInUse.sort((l, r) => {\n        return this.formatString.indexOf(this.getTokenByType(l) || null) - this.formatString.indexOf(this.getTokenByType(r) || null)\n      })\n      const tokensInUse = typesInUse.map(type => this.getTokenByType(type))\n      return {\n        hour: !!this.hourType,\n        minute: !!this.minuteType,\n        second: !!this.secondType,\n        apm: !!this.apmType,\n        types: typesInUse || [],\n        tokens: tokensInUse || []\n      }\n    },\n\n    displayTime () {\n      let formatString = String(this.formatString)\n      if (this.hour) {\n        formatString = formatString.replace(new RegExp(this.hourType, 'g'), this.hour)\n      }\n      if (this.minute) {\n        formatString = formatString.replace(new RegExp(this.minuteType, 'g'), this.minute)\n      }\n      if (this.second && this.secondType) {\n        formatString = formatString.replace(new RegExp(this.secondType, 'g'), this.second)\n      }\n      if (this.apm && this.apmType) {\n        formatString = formatString.replace(new RegExp(this.apmType, 'g'), this.apm)\n      }\n      return formatString\n    },\n\n    customDisplayTime () {\n      if (!this.amText && !this.pmText) {\n        return this.displayTime\n      }\n      return this.displayTime.replace(new RegExp(this.apm, 'g'), this.apmDisplayText(this.apm))\n    },\n\n    inputIsEmpty () {\n      return this.formatString === this.displayTime\n    },\n\n    allValueSelected () {\n      if (\n        (this.inUse.hour && !this.hour) ||\n        (this.inUse.minute && !this.minute) ||\n        (this.inUse.second && !this.second) ||\n        (this.inUse.apm && !this.apm)\n      ) {\n        return false\n      }\n      return true\n    },\n\n    columnsSequence () {\n      return this.inUse.types.map(type => type) || []\n    },\n\n    showClearBtn () {\n      if (this.hideClearButton || this.disabled) {\n        return false\n      }\n      return !this.inputIsEmpty\n    },\n\n    showDropdownBtn () {\n      if (this.fixedDropdownButton) { return true }\n      if (this.opts.hideDropdown && this.isActive && !this.showDropdown) {\n        return true\n      }\n      return false\n    },\n\n    baseOn12Hours () {\n      return this.hourType === 'h' || this.hourType === 'hh'\n    },\n\n    hourRangeIn24HrFormat () {\n      if (!this.hourType || !this.opts.hourRange) { return false }\n      if (!this.opts.hourRange.length) { return [] }\n\n      const range = []\n      this.opts.hourRange.forEach(value => {\n        if (value instanceof Array) {\n          if (value.length > 2 && this.debugMode) {\n            this.debugLog(`Nested array within \"hour-range\" must contain no more than two items. Only the first two items of ${JSON.stringify(value)} will be taken into account.`)\n          }\n\n          let start = value[0]\n          let end = value[1] || value[0]\n\n          if (this.is12hRange(start)) {\n            start = this.translate12hRange(start)\n          }\n          if (this.is12hRange(end)) {\n            end = this.translate12hRange(end)\n          }\n\n          for (let i = +start; i <= +end; i++) {\n            if (i < 0 || i > 24) { continue }\n            if (!range.includes(i)) {\n              range.push(i)\n            }\n          }\n        } else {\n          if (this.is12hRange(value)) {\n            value = this.translate12hRange(value)\n          } else {\n            value = +value\n          }\n          if (value < 0 || value > 24) { return }\n          if (!range.includes(value)) {\n            range.push(value)\n          }\n        }\n      })\n      range.sort((l, r) => { return l - r })\n      return range\n    },\n\n    restrictedHourRange () {\n      // No restriction\n      if (!this.hourRangeIn24HrFormat) { return false }\n      // 12-Hour\n      if (this.baseOn12Hours) {\n        const range = this.hourRangeIn24HrFormat.map((value) => {\n          if (value === 12) {\n            return '12p'\n          } else if (value === 24 || value === 0) {\n            return '12a'\n          }\n          return value > 12 ? `${value % 12}p` : `${value}a`\n        })\n        return range\n      }\n      // 24-Hour\n      return this.hourRangeIn24HrFormat\n    },\n\n    validHoursList () {\n      if (!this.manualInput) { return false }\n      if (this.restrictedHourRange) {\n        let list = []\n        if (this.baseOn12Hours) {\n          list = this.restrictedHourRange.map(hr => {\n            const l = hr.substr(0, hr.length - 1)\n            const r = hr.substr(-1)\n            return `${this.formatValue(this.hourType, l)}${r}`\n          })\n          const am12Index = list.indexOf('12a')\n          if (am12Index > 0) {\n            // Make '12a' the first item in h/hh\n            list.unshift(list.splice(am12Index, 1)[0])\n          }\n          return list\n        }\n        list = this.restrictedHourRange.map(hr => {\n          return this.formatValue(this.hourType, hr)\n        })\n        if (list.length > 1 && list[0] && list[0] === '24') {\n          // Make '24' the last item in k/kk\n          list.push(list.shift())\n        }\n        return list\n      }\n      if (this.baseOn12Hours) {\n        return [].concat([], this.hours.map(hr => `${hr}a`), this.hours.map(hr => `${hr}p`))\n      }\n      return this.hours\n    },\n\n    has () {\n      const result = {\n        customApmText: false\n      }\n      const apmEnabled = !!this.apmType\n\n      if (apmEnabled && this.hourRangeIn24HrFormat && this.hourRangeIn24HrFormat.length) {\n        const range = [].concat([], this.hourRangeIn24HrFormat)\n        result.am = range.some(value => value < 12 || value === 24)\n        result.pm = range.some(value => value >= 12 && value < 24)\n      } else {\n        result.am = apmEnabled\n        result.pm = apmEnabled\n      }\n      if ((this.amText && this.amText.length) || (this.pmText && this.pmText.length)) {\n        result.customApmText = true\n      }\n      return result\n    },\n\n    minuteRangeList () {\n      if (!this.minuteType || !this.opts.minuteRange) { return false }\n      if (!this.opts.minuteRange.length) { return [] }\n      return this.renderRangeList(this.opts.minuteRange, 'minute')\n    },\n\n    secondRangeList () {\n      if (!this.secondType || !this.opts.secondRange) { return false }\n      if (!this.opts.secondRange.length) { return [] }\n      return this.renderRangeList(this.opts.secondRange, 'second')\n    },\n    \n    hourLabelText () {\n      return this.hourLabel || this.hourType\n    },\n    minuteLabelText () {\n      return this.minuteLabel || this.minuteType\n    },\n    secondLabelText() {\n      return this.secondLabel || this.secondType\n    },\n    apmLabelText () {\n      return this.apmLabel || this.apmType\n    },\n\n    inputWidthStyle () {\n      if (!this.inputWidth || !this.inputWidth.length) { return }\n      return {\n        width: this.inputWidth\n      }\n    },\n\n    tokenRegexBase () {\n      return this.inUse.tokens.join('|')\n    },\n\n    tokenChunks () {\n      if (!this.manualInput && !this.useStringValue) { return false }\n\n      const formatString = String(this.formatString)\n      const tokensRegxStr = `(${this.tokenRegexBase})+?`\n      const tokensMatchAll = this.getMatchAllByRegex(formatString, tokensRegxStr)\n\n      const tokenChunks = []\n      for (let tkMatch of tokensMatchAll) {\n        const rawToken = tkMatch[0]\n        const tokenMatchItem = {\n          index: tkMatch.index,\n          token: rawToken,\n          type: this.getTokenType(rawToken),\n          needsCalibrate: rawToken.length < 2,\n          len: (rawToken || '').length\n        }\n        tokenChunks.push(tokenMatchItem)\n      }\n      return tokenChunks\n    },\n\n    needsPosCalibrate () {\n      if (!this.manualInput) { return false }\n      return this.tokenChunks.some(chk => chk.needsCalibrate)\n    },\n\n    tokenChunksPos () {\n      if (!this.manualInput) { return false }\n      if (!this.needsPosCalibrate) {\n        return this.tokenChunks.map(chk => {\n          return {\n            token: chk.token,\n            type: chk.type,\n            start: chk.index,\n            end: chk.index + chk.len\n          }\n        })\n      }\n      const list = []\n      let calibrateLen = 0\n      this.tokenChunks.forEach(chk => {\n        let chunkCurrentLen\n        // Adjust for customized AM/PM text\n        if (chk.type === 'apm' && this.has.customApmText) {\n          if (this.apm && this.apm.length) {\n            const customApmText = this.apm.toLowerCase() === 'am' ? this.amText : this.pmText\n            chunkCurrentLen = (customApmText && customApmText.length) ? customApmText.length : chk.len\n          } else {\n            chunkCurrentLen = chk.len\n          }\n        // Others\n        } else {\n          chunkCurrentLen = this[chk.type] && this[chk.type].length ? this[chk.type].length : chk.len\n        }\n        list.push({\n          token: chk.token,\n          type: chk.type,\n          start: chk.index + calibrateLen,\n          end: chk.index + calibrateLen + chunkCurrentLen\n        })\n        if (chk.needsCalibrate && chunkCurrentLen > chk.len) {\n          calibrateLen += (chunkCurrentLen - chk.len)\n        }\n      })\n      return list\n    },\n\n    invalidValues () {\n      if (this.inputIsEmpty) { return [] }\n      if (!this.restrictedHourRange && !this.minuteRangeList && !this.secondRangeList && this.opts.minuteInterval === 1 && this.opts.secondInterval === 1) { return [] }\n\n      const result = []\n      if (this.inUse.hour && !this.isEmptyValue(this.hourType, this.hour) && (!this.isValidValue(this.hourType, this.hour) || this.isDisabled('hour', this.hour))) {\n        result.push('hour')\n      }\n      if (this.inUse.minute && !this.isEmptyValue(this.minuteType, this.minute) && (!this.isValidValue(this.minuteType, this.minute) || this.isDisabled('minute', this.minute) || this.notInInterval('minute', this.minute))) {\n        result.push('minute')\n      }\n      if (this.inUse.second && !this.isEmptyValue(this.secondType, this.second) && (!this.isValidValue(this.secondType, this.second) || this.isDisabled('second', this.second) || this.notInInterval('second', this.second))) {\n        result.push('second')\n      }\n      if (this.inUse.apm && !this.isEmptyValue(this.apmType, this.apm) && (!this.isValidValue(this.apmType, this.apm) || this.isDisabled('apm', this.apm))) {\n        result.push('apm')\n      }\n      if (result.length) {\n        return result\n      }\n      return []\n    },\n\n    hasInvalidInput () {\n      return Boolean(this.invalidValues && this.invalidValues.length)\n    },\n\n    autoDirectionEnabled () {\n      return this.dropDirection === 'auto'\n    },\n\n    dropdownDirClass () {\n      if (this.autoDirectionEnabled) {\n        return this.forceDropOnTop ? 'drop-up' : 'drop-down'\n      }\n      return this.dropDirection === 'up' ? 'drop-up' : 'drop-down'      \n    }\n  },\n\n  watch: {\n    'opts.format' (newValue) {\n      this.renderFormat(newValue)\n    },\n    'opts.minuteInterval' (newInteval) {\n      this.renderList('minute', newInteval)\n    },\n    'opts.secondInterval' (newInteval) {\n      this.renderList('second', newInteval)\n    },\n    value: {\n      deep: true,\n      handler () {\n        this.readValues()\n      }\n    },\n    displayTime () {\n      this.fillValues()\n    },\n    disabled (toDisabled) {\n      if (toDisabled) {\n        // Force close dropdown and reset status when disabled\n        if (this.isActive) {\n          this.isActive = false\n        }\n        if (this.showDropdown) {\n          this.showDropdown = false\n        }\n      }\n    },\n    'invalidValues.length' (newLength, oldLength) {\n      if (newLength && newLength >= 1) {\n        this.$emit('error', this.invalidValues)\n      } else if (oldLength && oldLength >= 1) {\n        this.$emit('error', [])\n      }\n    }\n  },\n\n  methods: {\n    formatValue (token, i) {\n      if (!this.isNumber(i)) { return '' }\n      i = +i\n      switch (token) {\n        case 'H':\n        case 'h':\n        case 'k':\n        case 'm':\n        case 's':\n          if (['h', 'k'].includes(token) && i === 0) {\n            return token === 'k' ? '24' : '12'\n          }\n          return String(i)\n        case 'HH':\n        case 'mm':\n        case 'ss':\n        case 'hh':\n        case 'kk':\n          if (['hh', 'kk'].includes(token) && i === 0) {\n            return token === 'kk' ? '24' : '12'\n          }\n          return i < 10 ? `0${i}` : String(i)\n        default:\n          return ''\n      }\n    },\n\n    checkAcceptingType (validValues, formatString) {\n      if (!validValues || !formatString || !formatString.length) { return '' }\n      for (let i = 0; i < validValues.length; i++) {\n        if (formatString.indexOf(validValues[i]) > -1) {\n          return validValues[i]\n        }\n      }\n      return ''\n    },\n\n    renderFormat (newFormat) {\n      newFormat = newFormat || this.opts.format || DEFAULT_OPTIONS.format\n\n      let hourType = this.checkAcceptingType(CONFIG.HOUR_TOKENS, newFormat)\n      let minuteType = this.checkAcceptingType(CONFIG.MINUTE_TOKENS, newFormat)\n      this.secondType = this.checkAcceptingType(CONFIG.SECOND_TOKENS, newFormat)\n      this.apmType = this.checkAcceptingType(CONFIG.APM_TOKENS, newFormat)\n\n      // Failsafe checking\n      if (!hourType && !minuteType && !this.secondType && !this.apmType) {\n        if (this.debugMode && this.format) {\n          this.debugLog(`No valid tokens found in your defined \"format\" string \"${this.format}\". Fallback to the default \"HH:mm\" format.`)\n        }\n        hourType = 'HH'\n        minuteType = 'mm'\n      }\n      this.hourType = hourType\n      this.minuteType = minuteType\n\n      this.hourType ? this.renderHoursList() : this.hours = []\n      this.minuteType ? this.renderList('minute') : this.minutes = []\n      this.secondType ? this.renderList('second') : this.seconds = []\n      this.apmType ? this.renderApmList() : this.apms = []\n\n      nextTick(() => {\n        this.readValues()\n      })\n    },\n\n    renderHoursList () {\n      const hoursCount = this.baseOn12Hours ? 12 : 24\n      const hours = []\n      for (let i = 0; i < hoursCount; i++) {\n        if (this.hourType === 'k' || this.hourType === 'kk') {\n          hours.push(this.formatValue(this.hourType, i + 1))\n        } else {\n          hours.push(this.formatValue(this.hourType, i))\n        }\n      }\n      this.hours = hours\n    },\n\n    renderList (listType, interval) {\n      if (!this.isMinuteOrSecond(listType)) { return }\n\n      const isMinute = listType === 'minute'\n      interval = interval || (isMinute ? (this.opts.minuteInterval || DEFAULT_OPTIONS.minuteInterval) : (this.opts.secondInterval || DEFAULT_OPTIONS.secondInterval))\n\n      const result = []\n      for (let i = 0; i < 60; i += interval) {\n        result.push(this.formatValue(isMinute ? this.minuteType : this.secondType, i))\n      }\n      isMinute ? this.minutes = result : this.seconds = result\n    },\n\n    renderApmList () {\n      this.apms = this.apmType === 'A' ? ['AM', 'PM'] : ['am', 'pm']\n    },\n\n    readValues () {\n      if (this.useStringValue) {\n        if (this.debugMode) {\n          this.debugLog(`Received a string value: \"${this.modelValue}\"`)\n        }\n        this.readStringValues(this.modelValue)\n      } else {\n        if (this.debugMode) {\n          this.debugLog(`Received an object value: \"${JSON.stringify(this.modelValue || {})}\"`)\n        }\n        this.readObjectValues(this.modelValue)\n      }\n    },\n\n    readObjectValues (objValue) {\n      const timeValue = JSON.parse(JSON.stringify(objValue || {}))\n      const values = Object.keys(timeValue)\n\n      // Failsafe for empty `v-model` object\n      if (values.length === 0) {\n        this.addFallbackValues()\n        return\n      }\n\n      CONFIG.BASIC_TYPES.forEach(type => {\n        const token = this.getTokenByType(type)\n        if (values.indexOf(token) > -1) {\n          const sanitizedValue = this.sanitizedValue(token, timeValue[token])\n          this[type] = sanitizedValue\n          timeValue[token] = sanitizedValue\n        } else {\n          this[type] = ''\n        }\n      })\n      this.timeValue = timeValue\n    },\n\n    getMatchAllByRegex (testString, regexString) {\n      const str = 'polyfillTest'\n      const needsPolyfill = Boolean(!str.matchAll || typeof str.matchAll !== 'function')\n      return needsPolyfill ? this.polyfillMatchAll(testString, regexString) : testString.matchAll(new RegExp(regexString, 'g'))\n    },\n\n    readStringValues (stringValue) {\n      // Failsafe for empty `v-model` string\n      if (!stringValue || !stringValue.length) {\n        this.addFallbackValues()\n        return\n      }\n\n      const formatString = String(this.formatString)\n      const tokensRegxStr = `(${this.tokenRegexBase})+?`\n      const othersRegxStr = `[^(${this.tokenRegexBase})]+`\n\n      const tokensMatchAll = this.getMatchAllByRegex(formatString, tokensRegxStr)\n      const othersMatchAll = this.getMatchAllByRegex(formatString, othersRegxStr)\n\n      const chunks = []\n      const tokenChunks = []\n\n      for (let tkMatch of tokensMatchAll) {\n        const tokenMatchItem = {\n          index: tkMatch.index,\n          token: tkMatch[0],\n          isValueToken: true\n        }\n        chunks.push(tokenMatchItem)\n        tokenChunks.push(tokenMatchItem)\n      }\n\n      for (let otMatch of othersMatchAll) {\n        chunks.push({\n          index: otMatch.index,\n          token: otMatch[0]\n        })\n      }\n\n      chunks.sort((l, r) => l.index < r.index ? -1 : 1)\n\n      let regexCombo = ''\n      chunks.forEach(chunk => {\n        if (chunk.isValueToken) {\n          const tokenRegex = this.getTokenRegex(chunk.token) || ''\n          regexCombo += tokenRegex\n        } else {\n          const safeChars = chunk.token.replace(/\\\\{0}(\\*|\\?|\\.|\\+)/g, '\\\\$1')\n          regexCombo += `(?:${safeChars})`\n        }\n      })\n\n      const comboReg = new RegExp(regexCombo)\n\n      // Do test before match\n      if (comboReg.test(stringValue)) {\n        const matchResults = stringValue.match(new RegExp(regexCombo))\n        const valueResults = matchResults.slice(1, tokenChunks.length + 1)\n        const timeValue = {}\n        valueResults.forEach((value, vrIndex) => {\n          if (tokenChunks[vrIndex]) {\n            const targetToken = tokenChunks[vrIndex].token\n            timeValue[targetToken] = this.setValueFromString(value, targetToken)\n          }\n        })\n        this.timeValue = timeValue\n\n        if (this.debugMode) {\n          const tokenChunksForLog = tokenChunks.map(tChunk => tChunk && tChunk.token)\n          this.debugLog(`Successfully parsed values ${JSON.stringify(valueResults)}\\nfor ${JSON.stringify(tokenChunksForLog)}\\nin format pattern '${this.formatString}'`)\n        }\n      } else {\n        if (this.debugMode) {\n          this.debugLog(`The input string in \"v-model\" does NOT match the \"format\" pattern\\nformat: ${this.formatString}\\nv-model: ${stringValue}`)\n        }\n      }\n    },\n\n    polyfillMatchAll (targetString, regxStr) {\n      const matchesList = targetString.match(new RegExp(regxStr, 'g'))\n      const result = []\n      const indicesReg = []\n      if (matchesList && matchesList.length) {\n        matchesList.forEach(matchedItem => {\n          const existIndex = indicesReg.findIndex(idxItem => idxItem.str === matchedItem)\n          let index\n          if (existIndex >= 0) {\n            if (indicesReg[existIndex] && indicesReg[existIndex].regex) {\n              index = indicesReg[existIndex].regex.exec(targetString).index\n            }\n          } else {\n            const itemIndicesRegex = new RegExp(matchedItem, 'g')\n            index = itemIndicesRegex.exec(targetString).index\n            indicesReg.push({\n              str: String(matchedItem),\n              regex: itemIndicesRegex\n            })\n          }\n          result.push({\n            0: String(matchedItem),\n            index: index\n          })\n        })\n      }\n      return result\n    },\n\n    addFallbackValues () {\n      const timeValue = {}\n      this.inUse.types.forEach(type => {\n        timeValue[this.getTokenByType(type)] = ''\n      })\n      this.timeValue = timeValue\n    },\n\n    setValueFromString (parsedValue, token) {\n      if (!token || !parsedValue) { return '' }\n      const tokenType = this.getTokenType(token)\n      if (!tokenType || !tokenType.length) { return '' }\n      const stdValue = (parsedValue !== this.getTokenByType(tokenType)) ? parsedValue : ''\n      this[tokenType] = stdValue\n      return stdValue\n    },\n\n    fillValues (forceEmit) {\n      const fullValues = {}\n\n      const baseHour = this.hour\n      const baseHourType = this.hourType\n\n      let apmValue\n\n      // Hour type or hour value is NOT set in the \"format\" string\n      if (!baseHourType || !this.isNumber(baseHour)) {\n        CONFIG.HOUR_TOKENS.forEach(token => fullValues[token] = '')\n        apmValue = this.lowerCasedApm(this.apm || '')\n        fullValues.a = apmValue\n        fullValues.A = apmValue.toUpperCase()\n\n      // Both Hour type and value are set\n      } else {\n        const hourValue = +baseHour\n        const apmValue = (this.baseOn12Hours && this.apm) ? this.lowerCasedApm(this.apm) : false\n\n        CONFIG.HOUR_TOKENS.forEach((token) => {\n          if (token === baseHourType) {\n            fullValues[token] = baseHour\n            return\n          }\n\n          let value\n          let apm\n          switch (token) {\n            case 'H':\n            case 'HH':\n            case 'k':\n            case 'kk':\n              if (this.baseOn12Hours) {\n                if (apmValue === 'pm') {\n                  value = hourValue < 12 ? hourValue + 12 : hourValue\n                } else if (['k', 'kk'].includes(token)) {\n                  value = hourValue === 12 ? 24 : hourValue\n                } else {\n                  value = hourValue % 12\n                }\n              } else {\n                if (['k', 'kk'].includes(token)) {\n                  value = hourValue === 0 ? 24 : hourValue\n                } else {\n                  value = hourValue % 24\n                }\n              }\n              fullValues[token] = this.formatValue(token, value)\n              break\n            case 'h':\n            case 'hh':\n              // h <-> hh\n              if (this.baseOn12Hours) {\n                value = hourValue\n                apm = apmValue || ''\n              // Read from other hour formats\n              } else {\n                if (hourValue > 11 && hourValue < 24) {\n                  apm = 'pm'\n                  value = hourValue === 12 ? 12 : hourValue % 12\n                } else {\n                  apm = 'am'\n                  value = hourValue % 12 === 0 ? 12 : hourValue\n                }\n              }\n              fullValues[token] = this.formatValue(token, value)\n              fullValues.a = apm\n              fullValues.A = apm.toUpperCase()\n              break\n          }\n        })\n      }\n\n      fullValues.m = this.formatValue('m', this.minute)\n      fullValues.mm = this.formatValue('mm', this.minute)\n      fullValues.s = this.formatValue('s', this.second)\n      fullValues.ss = this.formatValue('ss', this.second)\n\n      this.fullValues = fullValues\n\n      // On lazy mode, emit `input` and `change` events only when:\n      // - The user pick a new value and then close the dropdown\n      // - The user click the (\"x\") clear button\n      if (!this.lazy || forceEmit) {\n        this.emitTimeValue()\n      }\n\n      if (this.closeOnComplete && this.allValueSelected && this.showDropdown) {\n        this.toggleActive()\n      }\n    },\n\n    emitTimeValue () {\n      if (!this.fullValues) { return }\n\n      if (this.lazy && this.bakDisplayTime === this.displayTime) {\n        if (this.debugMode) {\n          this.debugLog('The value does not change on `lazy` mode. Skip the emitting `input` and `change` event.')\n        }\n        return\n      }\n\n      const fullValues = JSON.parse(JSON.stringify(this.fullValues))\n\n      if (this.useStringValue) {\n        this.$emit('update:modelValue', this.inputIsEmpty ? '' : String(this.displayTime))\n      } else {\n        const tokensInUse = this.inUse.tokens || []\n        const timeValue = {}\n        tokensInUse.forEach((token) => {\n          timeValue[token] = fullValues[token] || ''\n        })\n        this.$emit('update:modelValue', JSON.parse(JSON.stringify(timeValue)))\n      }\n\n      this.$emit('change', {\n        data: fullValues,\n        displayTime: this.inputIsEmpty ? '' : String(this.displayTime)\n      })\n    },\n\n    translate12hRange (value) {\n      const valueT = this.match12hRange(value)\n      if (+valueT[1] === 12) {\n        return +valueT[1] + (valueT[2].toLowerCase() === 'p' ? 0 : 12)\n      }\n      return +valueT[1] + (valueT[2].toLowerCase() === 'p' ? 12 : 0)\n    },\n\n    isDisabled (type, value) {\n      if (!this.isBasicType(type) || !this.inUse[type]) { return true }\n      switch (type) {\n        case 'hour':\n          return this.isDisabledHour(value)\n        case 'minute':\n        case 'second':\n          if (!this[`${type}RangeList`]) {\n            return false\n          }\n          return !this[`${type}RangeList`].includes(value)\n        case 'apm':\n          if (!this.restrictedHourRange) {\n            return false\n          }\n          return !this.has[this.lowerCasedApm(value)]\n        default:\n          return true\n      }\n    },\n\n    isDisabledHour (value) {\n      if (!this.restrictedHourRange) { return false }\n      if (this.baseOn12Hours) {\n        if (!this.apm || !this.apm.length) {\n          return false\n        } else {\n          const token = this.apm.toLowerCase() === 'am' ? 'a' : 'p'\n          return !this.restrictedHourRange.includes(`${+value}${token}`)\n        }\n      }\n      // Fallback for 'HH' and 'H hour format with a `hour-range` in a 12-hour form\n      if (\n        (this.hourType === 'HH' || this.hourType === 'H') &&\n        +value === 0 && this.restrictedHourRange.includes(24)\n      ) {\n        return false\n      }\n      return !this.restrictedHourRange.includes(+value)\n    },\n\n    notInInterval (section, value) {\n      if (!section || !this.isMinuteOrSecond(section)) { return }\n      if (this.opts[`${section}Interval`] === 1) { return false }\n      return +value % this.opts[`${section}Interval`] !== 0\n    },\n\n    renderRangeList (rawRange, section) {\n      if (!rawRange || !section || !this.isMinuteOrSecond(section)) { return [] }\n      const range = []\n      let formatedValue\n      rawRange.forEach(value => {\n        if (value instanceof Array) {\n          if (value.length > 2 && this.debugMode) {\n            this.debugLog(`Nested array within \"${section}-range\" must contain no more than two items. Only the first two items of ${JSON.stringify(value)} will be taken into account.`)\n          }\n          const start = value[0]\n          const end = value[1] || value[0]\n          for (let i = +start; i <= +end; i++) {\n            if (i < 0 || i > 59) { continue }\n            formatedValue = this.formatValue(this.getTokenByType(section), i)\n            if (!range.includes(formatedValue)) {\n              range.push(formatedValue)\n            }\n          }\n        } else {\n          if (+value < 0 || +value > 59) { return }\n          formatedValue = this.formatValue(this.getTokenByType(section), value)\n          if (!range.includes(formatedValue)) {\n            range.push(formatedValue)\n          }\n        }\n      })\n      range.sort((l, r) => { return l - r })\n      // Debug Mode\n      if (this.debugMode) {\n        const fullList = (section === 'minute' ? this.minutes : this.seconds) || []\n        const validItems = fullList.filter(item => range.includes(item))\n        if (!validItems || !validItems.length) {\n          if (section === 'minute') {\n            this.debugLog(`The minute list is empty due to the \"minute-range\" config\\nminute-range: ${JSON.stringify(this.minuteRange)}\\nminute-interval: ${this.opts.minuteInterval}`)\n          } else {\n            this.debugLog(`The second list is empty due to the \"second-range\" config\\nsecond-range: ${JSON.stringify(this.secondRange)}\\nsecond-interval: ${this.opts.secondInterval}`)\n          }\n        }\n      }\n      return range\n    },\n\n    forceApmSelection () {\n      if (this.manualInput) {\n        // Skip this to allow users to paste a string value from the clipboard in Manual Input mode\n        return\n      }\n      if (this.apmType && !this.apm) {\n        if (this.has.am || this.has.pm) {\n          this.doClearApmChecking = true\n          const apmValue = this.has.am ? 'am' : 'pm'\n          this.apm = this.apmType === 'A' ? apmValue.toUpperCase() : apmValue\n        }\n      }\n    },\n\n    emptyApmSelection () {\n      if (this.doClearApmChecking && this.hour === '' && this.minute === '' && this.second === '') {\n        this.apm = ''\n      }\n      this.doClearApmChecking = false\n    },\n\n    apmDisplayText (apmValue) {\n      if (this.amText && this.lowerCasedApm(apmValue) === 'am') {\n        return this.amText\n      }\n      if (this.pmText && this.lowerCasedApm(apmValue) === 'pm') {\n        return this.pmText\n      }\n      return apmValue\n    },\n\n    toggleActive () {\n      if (this.disabled) { return }\n      this.isActive = !this.isActive\n\n      if (this.isActive) {\n        this.isFocusing = true\n        if (this.manualInput) {\n          this.$emit('focus')\n        }\n        if (!this.opts.hideDropdown) {\n          this.setDropdownState(true)\n        }\n        // Record to check if value did change in the later phase\n        if (this.lazy) {\n          this.bakDisplayTime = String(this.displayTime || '')\n        }\n        if (this.manualInput && !this.inputIsEmpty) {\n          nextTick(() => {\n            if (this.$refs.input && this.$refs.input.selectionStart === 0 && this.$refs.input.selectionEnd === this.displayTime.length) {\n              // Select the first slot instead of the whole value string when tabbed in\n              this.selectFirstSlot()\n            }\n          })\n        }\n      } else {\n        if (this.showDropdown) {\n          this.setDropdownState(false)\n        } else if (this.manualInput) {\n          this.$emit('blur')\n        }\n        this.isFocusing = false\n        if (this.lazy) {\n          this.fillValues(true)\n          this.bakDisplayTime = undefined\n        }\n      }\n\n      if (this.restrictedHourRange && this.baseOn12Hours) {\n        this.showDropdown ? this.forceApmSelection() : this.emptyApmSelection()\n      }\n      if (this.showDropdown) {\n        this.checkForAutoScroll()\n      }\n    },\n\n    setDropdownState (toShow, fromUserClick = false) {\n      if (toShow) {\n        this.keepFocusing()\n        if (this.autoDirectionEnabled) {\n          this.checkDropDirection()\n        }\n        this.showDropdown = true\n        this.$emit('open') \n        if (fromUserClick) {\n          if (this.fixedDropdownButton) {\n            this.isActive = true\n          }\n          this.$emit('blur')\n          this.checkForAutoScroll()\n        }\n      } else {\n        this.showDropdown = false\n        this.$emit('close')\n      }\n    },\n\n    blurEvent () {\n      if (this.manualInput && !this.opts.hideDropdown) {\n        // hideDropdown's `blur` event is handled somewhere else\n        this.$emit('blur')\n      }\n    },\n\n    select (type, value) {\n      if (this.isBasicType(type) && !this.isDisabled(type, value)) {\n        this[type] = value\n        if (this.doClearApmChecking) {\n          this.doClearApmChecking = false\n        }\n      }\n    },\n\n    clearTime () {\n      if (this.disabled) { return }\n      this.hour = ''\n      this.minute = ''\n      this.second = ''\n      this.apm = ''\n\n      if (this.manualInput && this.$refs && this.$refs.input && this.$refs.input.value.length) {\n        this.$refs.input.value = ''\n      }\n\n      if (this.lazy) {\n        this.fillValues(true)\n      }\n    },\n\n    //\n    // Auto-Scroll\n    //\n\n    checkForAutoScroll () {\n      if (this.inputIsEmpty) { return }\n      if (this.autoScroll) {\n        nextTick(() => {\n          this.scrollToSelectedValues()\n        })\n      } else if (this.advancedKeyboard) {\n        // Auto-focus on selected value in the first column for advanced-keyboard\n        nextTick(() => {\n          const firstColumn = this.inUse.types[0]\n          this.scrollToSelected(firstColumn, true)\n        })\n      }\n    },\n\n    scrollToSelected (column, allowFallback = false) {\n      if (!this.timeValue || this.inputIsEmpty) { return }\n      const targetList = this.$el.querySelectorAll(`ul.${column}s`)[0]\n      let targetValue = this.activeItemInCol(column)[0]\n      if (!targetValue && allowFallback) {\n        // No value selected in the target column, fallback to the first found valid item\n        targetValue = this.validItemsInCol(column)[0]\n      }\n      if (targetList && targetValue) {\n        targetList.scrollTop = targetValue.offsetTop || 0\n        if (this.advancedKeyboard) {\n          targetValue.focus()\n        }\n      }\n    },\n\n    scrollToSelectedValues () {\n      if (!this.timeValue || this.inputIsEmpty) { return }\n      this.inUse.types.forEach(section => {\n        this.scrollToSelected(section)\n      })\n    },\n\n    //\n    // Additional Keyboard Navigation\n    //\n\n    onFocus () {\n      if (this.disabled) { return }\n      if (!this.isFocusing) {\n        this.isFocusing = true\n      }\n      if (!this.isActive) {\n        this.toggleActive()\n      }\n    },\n\n    escBlur () {\n      if (this.disabled) { return }\n      window.clearTimeout(this.debounceTimer)\n      this.isFocusing = false\n      const inputBox = this.$el.querySelectorAll('input.vue__time-picker-input')[0]\n      if (inputBox) {\n        inputBox.blur()\n      }\n    },\n\n    debounceBlur () {\n      if (this.disabled) { return }\n      this.isFocusing = false\n      window.clearTimeout(this.debounceTimer)\n      this.debounceTimer = window.setTimeout(() => {\n        window.clearTimeout(this.debounceTimer)\n        this.onBlur()\n      }, this.opts.blurDelay)\n    },\n\n    onBlur () {\n      if (!this.disabled && !this.isFocusing && this.isActive) {\n        this.toggleActive()\n      }\n    },\n\n    keepFocusing () {\n      if (this.disabled) { return }\n      window.clearTimeout(this.debounceTimer)\n      if (!this.isFocusing) {\n        this.isFocusing = true\n      }\n    },\n\n    validItemsInCol (column) {\n      const columnClass = `${column}s`\n      return this.$el.querySelectorAll(`ul.${columnClass} > li:not(.hint):not([disabled])`)\n    },\n\n    activeItemInCol (column) {\n      const columnClass = `${column}s`\n      return this.$el.querySelectorAll(`ul.${columnClass} > li.active:not(.hint)`)\n    },\n\n    getClosestSibling (column, dataKey, getPrevious = false) {\n      const siblingsInCol = this.validItemsInCol(column)\n      const selfIndex = Array.prototype.findIndex.call(siblingsInCol, (sbl) => {\n        return sbl.getAttribute('data-key') === dataKey\n      })\n\n      // Already the first item\n      if (getPrevious && selfIndex === 0) {\n        return siblingsInCol[siblingsInCol.length - 1]\n      }\n      // Already the last item\n      if (!getPrevious && selfIndex === siblingsInCol.length - 1) {\n        return siblingsInCol[0]\n      }\n      // Selected value not in the valid values list\n      if (selfIndex < 0) {\n        return siblingsInCol[0]\n      }\n\n      if (getPrevious) {\n        return siblingsInCol[selfIndex - 1]\n      }\n      return siblingsInCol[selfIndex + 1]\n    },\n\n    prevItem (column, dataKey, isManualInput = false) {\n      const targetItem = this.getClosestSibling(column, dataKey, true)\n      if (targetItem) {\n        return isManualInput ? targetItem : targetItem.focus()\n      }\n    },\n\n    nextItem (column, dataKey, isManualInput = false) {\n      const targetItem = this.getClosestSibling(column, dataKey, false)\n      if (targetItem) {\n        return isManualInput ? targetItem : targetItem.focus()\n      }\n    },\n\n    getSideColumnName (currentColumn, toLeft = false) {\n      const currentColumnIndex = this.inUse.types.indexOf(currentColumn)\n      if (toLeft && currentColumnIndex <= 0) {\n        if (this.debugMode) {\n          this.debugLog('You\\'re in the leftmost list already')\n        }\n        return\n      } else if (!toLeft && currentColumnIndex === (this.inUse.types.length - 1)) {\n        if (this.debugMode) {\n          this.debugLog('You\\'re in the rightmost list already')\n        }\n        return\n      }\n      return this.inUse.types[toLeft ? currentColumnIndex - 1 : currentColumnIndex + 1]\n    },\n\n    getFirstItemInSideColumn (currentColumn, toLeft = false) {\n      const targetColumn = this.getSideColumnName(currentColumn, toLeft)\n      if (!targetColumn) { return }\n      const listItems = this.validItemsInCol(targetColumn)\n      if (listItems && listItems[0]) {\n        return listItems[0]\n      }\n    },\n\n    getActiveItemInSideColumn (currentColumn, toLeft = false) {\n      const targetColumn = this.getSideColumnName(currentColumn, toLeft)\n      if (!targetColumn) { return }\n      const activeItems = this.activeItemInCol(targetColumn)\n      if (activeItems && activeItems[0]) {\n        return activeItems[0]\n      }\n    },\n\n    toLeftColumn (currentColumn) {\n      const targetItem = this.getActiveItemInSideColumn(currentColumn, true) || this.getFirstItemInSideColumn(currentColumn, true)\n      if (targetItem) {\n        targetItem.focus()\n      }\n    },\n\n    toRightColumn (currentColumn) {\n      const targetItem = this.getActiveItemInSideColumn(currentColumn, false) || this.getFirstItemInSideColumn(currentColumn, false)\n      if (targetItem) {\n        targetItem.focus()\n      }\n    },\n\n    //\n    // Manual Input\n    //\n\n    onMouseDown () {\n      if (!this.manualInput) { return }\n      window.clearTimeout(this.selectionTimer)\n      this.selectionTimer = window.setTimeout(() => {\n        window.clearTimeout(this.selectionTimer)\n        if (this.$refs && this.$refs.input) {\n          const nearestSlot = this.getNearestChunkByPos(this.$refs.input.selectionStart || 0)\n          this.debounceSetInputSelection(nearestSlot)\n        }\n      }, 50)\n    },\n\n    keyDownHandler (evt) {\n      if (evt.isComposing || evt.keyCode === 229) {\n        // Skip IME inputs\n        evt.preventDefault()\n        evt.stopPropagation()\n        return false\n      }\n      // Numbers\n      if ((evt.keyCode >= 48 && evt.keyCode <= 57) || (evt.keyCode >= 96 && evt.keyCode <= 105)) {\n        evt.preventDefault()\n        this.keyboardInput(evt.key)\n      // A|P|M\n      } else if ([65, 80, 77].includes(evt.keyCode)) {\n        evt.preventDefault()\n        this.keyboardInput(evt.key, true)\n      // Arrow keys\n      } else if (evt.keyCode >= 37 && evt.keyCode <= 40) {\n        evt.preventDefault()\n        this.clearKbInputLog()\n        this.arrowHandler(evt)\n      // Delete|Backspace\n      } else if (evt.keyCode === 8 || evt.keyCode === 46) {\n        evt.preventDefault()\n        this.clearKbInputLog()\n        this.clearTime()\n      // Tab\n      } else if (evt.keyCode === 9) {\n        this.clearKbInputLog()\n        this.tabHandler(evt)\n      // Prevent any Non-ESC and non-pasting inputs\n      } else if (evt.keyCode !== 27 && !(evt.metaKey || evt.ctrlKey)) {\n        evt.preventDefault()\n      }\n    },\n\n    onCompostionStart (evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n      this.bakCurrentPos = this.getCurrentTokenChunk()\n      return false\n    },\n\n    onCompostionEnd (evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      const cpsData = evt.data\n      let inputIsCustomApmText = false\n      if (this.has.customApmText) {\n        inputIsCustomApmText = this.isCustomApmText(cpsData)\n      }\n      if (inputIsCustomApmText) {\n        this.setSanitizedValueToSection('apm', inputIsCustomApmText)\n      }\n\n      this.$refs.input.value = this.has.customApmText ? this.customDisplayTime : this.displayTime\n\n      nextTick(() => {\n        if (this.bakCurrentPos) {\n          const bakPos = JSON.parse(JSON.stringify(this.bakCurrentPos))\n          if (inputIsCustomApmText) {\n            bakPos.end = (bakPos.start + cpsData.length)\n          }\n          this.debounceSetInputSelection(bakPos)\n          this.bakCurrentPos = null\n        }\n      })\n      return false\n    },\n\n    pasteHandler (evt) {\n      evt.preventDefault()\n      let pastingText = (evt.clipboardData || window.clipboardData).getData('text')\n      if (this.debugMode) {\n        this.debugLog(`Pasting value \"${pastingText}\" from clipboard`)\n      }\n      if (!pastingText || !pastingText.length) { return }\n\n      // Replace custom AM/PM text (if any)\n      if (this.has.customApmText) {\n        pastingText = this.replaceCustomApmText(pastingText)\n      }\n\n      if (this.inputIsEmpty) {\n        this.readStringValues(pastingText)\n      } else {\n        this.kbInputLog = pastingText.substr(-2, 2)\n        this.setKbInput()\n        this.debounceClearKbLog()\n      }\n    },\n\n    arrowHandler (evt) {\n      const direction = { 37: 'L', 38: 'U', 39: 'R', 40: 'D' }[evt.keyCode]\n      if (direction === 'U' || direction === 'D') {\n        if (this.inputIsEmpty) {\n          this.selectFirstValidValue()\n        } else {\n          const currentChunk = this.getCurrentTokenChunk()\n          if (!currentChunk) {\n            this.selectFirstValidValue()\n            return\n          }\n          const tokenType = currentChunk.type\n          this.getClosestValidItemInCol(tokenType, this[tokenType], direction)\n          const newChunkPos = this.getCurrentTokenChunk()\n          this.debounceSetInputSelection(newChunkPos)\n        }\n      } else if (direction === 'R') {\n        this.toLateralToken(false)\n      } else if (direction === 'L') {\n        this.toLateralToken(true)\n      }\n    },\n\n    tabHandler (evt) {      \n      if (!this.inputIsEmpty && this.tokenChunksPos && this.tokenChunksPos.length) {\n        const currentChunk = this.getCurrentTokenChunk()\n        if (!currentChunk) { return }\n        const firstChunk = this.tokenChunksPos[0]\n        const lastChunk = this.tokenChunksPos[this.tokenChunksPos.length - 1]\n        if ((evt.shiftKey && currentChunk.token !== firstChunk.token) || (!evt.shiftKey && currentChunk.token !== lastChunk.token)) {\n          evt.preventDefault()\n          this.toLateralToken(evt.shiftKey)\n        }\n      }\n    },\n\n    keyboardInput (newChar, isApm = false) {\n      const currentChunk = this.getCurrentTokenChunk()\n      if (!currentChunk || (currentChunk.type !== 'apm' && isApm) || (currentChunk.type === 'apm' && !isApm)) { return }\n      this.kbInputLog = `${this.kbInputLog.substr(-1)}${newChar}`\n      this.setKbInput()\n      this.debounceClearKbLog()\n    },\n\n    clearKbInputLog () {\n      window.clearTimeout(this.kbInputTimer)\n      this.kbInputLog = ''\n    },\n\n    debounceClearKbLog () {\n      window.clearTimeout(this.kbInputTimer)\n      this.kbInputTimer = window.setTimeout(() => {\n        this.clearKbInputLog()\n      }, this.opts.manualInputTimeout)\n    },\n\n    setKbInput (value) {\n      value = value || this.kbInputLog\n      const currentChunk = this.getCurrentTokenChunk()\n      if (!currentChunk || !value || !value.length) { return }\n      const chunkType = currentChunk.type\n      const chunkToken = currentChunk.token\n\n      let validValue\n      if (chunkType === 'apm') {\n        if (this.lowerCasedApm(value).includes('a')) {\n          validValue = 'am'\n        } else if (this.lowerCasedApm(value).includes('p')) {\n          validValue = 'pm'\n        }\n        if (validValue) {\n          validValue = chunkToken === 'A' ? validValue.toUpperCase() : validValue\n        }\n      } else {\n        if (this.isValidValue(chunkToken, value)) {\n          validValue = value\n        } else {\n          const lastInputValue = this.formatValue(chunkToken, value.substr(-1))\n          if (this.isValidValue(chunkToken, lastInputValue)) {\n            validValue = lastInputValue\n          }\n        }\n      }\n\n      if (validValue) {\n        this.setSanitizedValueToSection(chunkType, validValue)\n        const newChunkPos = this.getCurrentTokenChunk()\n        this.debounceSetInputSelection(newChunkPos)      \n      }\n      if (this.debugMode) {\n        if (validValue) {\n          this.debugLog(`Successfully set value \"${validValue}\" from latest input \"${value}\" for the \"${chunkType}\" slot`)\n        } else {\n          this.debugLog(`Value \"${value}\" is invalid in the \"${chunkType}\" slot`)\n        }\n      }\n    },\n\n    // Form Autofill\n    onChange () {\n      if (!this.manualInput || !this.$refs || !this.$refs.input) { return }\n      const autoFillValue = this.$refs.input.value || ''\n      if (autoFillValue && autoFillValue.length) {\n        this.readStringValues(autoFillValue)\n      }\n    },\n\n    getNearestChunkByPos (startPos) {\n      if (!this.tokenChunksPos || !this.tokenChunksPos.length) { return }\n      let nearest\n      let nearestDelta = -1\n      for (let i = 0; i < this.tokenChunksPos.length; i++) {\n        const chunk = JSON.parse(JSON.stringify(this.tokenChunksPos[i]))\n        if (chunk.start === startPos) {\n          return chunk\n        }\n        const delta = Math.abs(chunk.start - startPos)\n        if (nearestDelta < 0) {\n          nearest = chunk\n          nearestDelta = delta\n        } else {\n          if (nearestDelta <= delta) {\n            return nearest\n          }\n          nearestDelta = delta\n          nearest = chunk\n        }\n      }\n      return nearest\n    },\n\n    selectFirstValidValue () {\n      if (!this.tokenChunksPos || !this.tokenChunksPos.length) { return }\n      const firstSlotType = this.tokenChunksPos[0].type\n      if (firstSlotType === 'hour') {\n        this.getClosestHourItem()\n      } else {\n        this.getClosestValidItemInCol(firstSlotType, this[firstSlotType])\n      }\n      this.selectFirstSlot()\n    },\n\n    getClosestHourItem (currentValue, direction = 'U') {\n      if (!this.validHoursList || !this.validHoursList.length) {\n        if (this.debugMode) {\n          this.debugLog(`No valid hour values found, please check your \"hour-range\" config\\nhour-range: ${JSON.stringify(this.hourRange)}`)\n        }\n        return\n      }\n      if (!currentValue) {\n        this.setManualHour(this.validHoursList[0])\n        return\n      }\n      const currentIndex = this.validHoursList.findIndex(item => {\n        if (!this.baseOn12Hours) {\n          return item === currentValue\n        } else {\n          const valueKey = `${currentValue}${this.lowerCasedApm(this.apm) === 'pm' ? 'p' : 'a'}` \n          return item === valueKey\n        }\n      })\n      let nextIndex\n      if (currentIndex === -1) {\n        nextIndex = 0\n      } else if (direction === 'D') {\n        nextIndex = currentIndex === 0 ? this.validHoursList.length - 1 : currentIndex - 1\n      } else {\n        nextIndex = (currentIndex + 1) % this.validHoursList.length\n      }\n      const nextItem = this.validHoursList[nextIndex]\n      this.setManualHour(nextItem)\n    },\n\n    getClosestValidItemInCol (column, currentValue, direction = 'U') {\n      if (column === 'hour') {\n        this.getClosestHourItem(currentValue, direction)\n      } else {\n        const nextItem = direction === 'D' ? this.prevItem(column, this[column], true) : this.nextItem(column, this[column], true)\n        if (nextItem) {\n          this.select(column, nextItem.getAttribute('data-key'))\n        }\n      }\n    },\n\n    setSanitizedValueToSection (section, inputValue) {\n      if (!section || !this.getTokenByType(section)) { return }\n      // NOTE: Disabled values are allowed here, followed by an 'error' event, though\n      const sanitizedValue = this.sanitizedValue(this.getTokenByType(section), inputValue)\n      this[section] = sanitizedValue\n    },\n\n    setManualHour (nextItem) {\n      if (this.is12hRange(nextItem)) {\n        const hourT = this.match12hRange(nextItem)\n        const apmValue = hourT[2] === 'a' ? 'AM' : 'PM'\n        this.setSanitizedValueToSection('apm', this.apmType === 'a' ? apmValue.toLowerCase() : apmValue)\n        this.setSanitizedValueToSection('hour', hourT[1])\n      } else {\n        this.setSanitizedValueToSection('hour', nextItem)\n      }\n    },\n\n    debounceSetInputSelection ({start = 0, end = 0 }) {\n      nextTick(() => {\n        this.setInputSelectionRange(start, end)\n      })\n      window.clearTimeout(this.selectionTimer)\n      this.selectionTimer = window.setTimeout(() => {\n        window.clearTimeout(this.selectionTimer)\n        // Double-check selection for 12hr format\n        if (this.$refs.input && (this.$refs.input.selectionStart !== start || this.$refs.input.selectionEnd !== end)) {\n          this.setInputSelectionRange(start, end)\n        }\n      }, 30)\n    },\n\n    setInputSelectionRange (start, end) {\n      if (this.$refs && this.$refs.input) {\n        this.$refs.input.setSelectionRange(start, end)\n      }\n    },\n\n    getCurrentTokenChunk () {\n      return this.getNearestChunkByPos((this.$refs.input && this.$refs.input.selectionStart) || 0)\n    },\n\n    selectFirstSlot () {\n      const firstChunkPos = this.getNearestChunkByPos(0)\n      this.debounceSetInputSelection(firstChunkPos)\n    },\n\n    toLateralToken (toLeft) {\n      const currentChunk = this.getCurrentTokenChunk()\n      if (!currentChunk) {\n        this.selectFirstValidValue()\n        return\n      }\n      const currentChunkIndex = this.tokenChunksPos.findIndex(chk => chk.token === currentChunk.token)\n      if ((!toLeft && currentChunkIndex >= this.tokenChunksPos.length - 1) || (toLeft && currentChunkIndex === 0)) {\n        if (this.debugMode) {\n          if (toLeft) {\n            this.debugLog('You\\'re in the leftmost slot already')\n          } else {\n            this.debugLog('You\\'re in the rightmost slot already')\n          }\n        }\n        return\n      }\n      const targetSlotPos = toLeft ? this.tokenChunksPos[currentChunkIndex - 1] : this.tokenChunksPos[currentChunkIndex + 1]\n      this.debounceSetInputSelection(targetSlotPos)\n    },\n\n    isCustomApmText (inputData) {\n      if (!inputData || !inputData.length) { return false }\n      if (this.amText && this.amText === inputData) {\n        return this.apmType === 'A' ? 'AM' : 'am'\n      }\n      if (this.pmText && this.pmText === inputData) {\n        return this.apmType === 'A' ? 'PM' : 'pm'\n      }\n      return false\n    },\n\n    replaceCustomApmText (inputString) {\n      if (this.amText && this.amText.length && inputString.includes(this.amText)) {\n        return inputString.replace(new RegExp(this.amText, 'g'), this.apmType === 'A' ? 'AM' : 'am')\n      } else if (this.pmText && this.pmText.length && inputString.includes(this.pmText)) {\n        return inputString.replace(new RegExp(this.pmText, 'g'), this.apmType === 'A' ? 'PM' : 'pm')\n      }\n      return inputString\n    },\n\n    checkDropDirection () {\n      if (!this.$el) { return }\n      let container\n      if (this.containerId && this.containerId.length) {\n        container = document.getElementById(this.containerId)\n        if (!container && this.debugMode) {\n          this.debugLog(`Container with id \"${this.containerId}\" not found. Fallback to document body.`)\n        }\n      }\n      const el = this.$el\n      let spaceDown\n      if (container && container.offsetHeight) {\n        // Valid container found\n        spaceDown = (container.offsetTop + container.offsetHeight) - (el.offsetTop + el.offsetHeight)\n      } else {\n        // Fallback to document body\n        const docHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight)\n        spaceDown = docHeight - (el.offsetTop + el.offsetHeight)\n      }\n      this.forceDropOnTop = this.opts.dropOffsetHeight > spaceDown\n    },\n\n    //\n    // Helpers\n    //\n\n    is12hRange (value) {\n      return /^\\d{1,2}(a|p|A|P)$/.test(value)\n    },\n\n    match12hRange (value) {\n      return value.match(/^(\\d{1,2})(a|p|A|P)$/)\n    },\n\n    isNumber (value) {\n      return !isNaN(parseFloat(value)) && isFinite(value)\n    },\n\n    isBasicType (type) {\n      return CONFIG.BASIC_TYPES.includes(type)\n    },\n\n    lowerCasedApm (apmValue) {\n      return (apmValue || '').toLowerCase()\n    },\n\n    getTokenRegex (token) {\n      switch (token) {\n        case 'HH':\n          return '([01][0-9]|2[0-3]|H{2})'\n        case 'H':\n          return '([0-9]{1}|1[0-9]|2[0-3]|H{1})'\n        case 'hh':\n          return '(0[1-9]|1[0-2]|h{2})'\n        case 'h':\n          return '([1-9]{1}|1[0-2]|h{1})'\n        case 'kk':\n          return '(0[1-9]|1[0-9]|2[0-4]|k{2})'\n        case 'k':\n          return '([1-9]{1}|1[0-9]|2[0-4]|k{1})'\n        case 'mm':\n          return '([0-5][0-9]|m{2})'\n        case 'ss':\n          return '([0-5][0-9]|s{2})'\n        case 'm':\n          return '([0-9]{1}|[1-5][0-9]|m{1})'\n        case 's':\n          return '([0-9]{1}|[1-5][0-9]|s{1})'\n        case 'A':\n          return '(AM|PM|A{1})'\n        case 'a':\n          return '(am|pm|a{1})'\n        default:\n          return ''\n      }\n    },\n\n    isEmptyValue (targetToken, testValue) {\n      return (!testValue || !testValue.length) || (testValue && testValue === targetToken)\n    },\n\n    isValidValue (targetToken, testValue) {\n      if (!targetToken || this.isEmptyValue(targetToken, testValue)) { return false }\n      const tokenRegexStr = this.getTokenRegex(targetToken)\n      if (!tokenRegexStr || !tokenRegexStr.length) { return false }\n      return (new RegExp(`^${tokenRegexStr}$`)).test(testValue)\n    },\n\n    sanitizedValue (targetToken, inputValue) {\n      if (this.isValidValue(targetToken, inputValue)) {\n        return inputValue\n      }\n      return ''\n    },\n\n    getTokenType (token) {\n      return this.inUse.types[this.inUse.tokens.indexOf(token)] || ''\n    },\n\n    getTokenByType (type) {\n      return this[`${type}Type`] || ''\n    },\n\n    isMinuteOrSecond (type) {\n      return ['minute', 'second'].includes(type)\n    },\n\n    // Breaking attribution coercion changes in Vue 3\n    // > https://v3.vuejs.org/guide/migration/attribute-coercion.html#overview\n    booleanAttr (isTrue = false) {\n      return isTrue ? true : null\n    },\n\n    debugLog (logText) {\n      if (!logText || !logText.length) { return }\n      let identifier = ''\n      if (this.id) {\n        identifier += `#${this.id}`\n      }\n      if (this.name) {\n        identifier += `[name=${this.name}]`\n      }\n      if (this.inputClass) {\n        let inputClasses = []\n        if (typeof this.inputClass === 'string') {\n          inputClasses = this.inputClass.split(/\\s/g)\n        } else if (Array.isArray(this.inputClass)) {\n          inputClasses = [].concat([], this.inputClass)\n        } else if (typeof this.inputClass === 'object') {\n          Object.keys(this.inputClass).forEach(clsName => {\n            if (this.inputClass[clsName]) {\n              inputClasses.push(clsName)\n            }\n          })\n        }\n        for (let inputClass of inputClasses) {\n          if (inputClass && inputClass.trim().length) {\n            identifier += `.${inputClass.trim()}`\n          }\n        }\n      }\n      const finalLogText = `DEBUG: ${logText}${identifier ? `\\n\\t(${identifier})` : '' }`\n      if (window.console.debug && typeof window.console.debug === 'function') {\n        window.console.debug(finalLogText)\n      } else {\n        window.console.log(finalLogText)\n      }\n    }\n  },\n\n  mounted () {\n    window.clearTimeout(this.debounceTimer)\n    window.clearTimeout(this.selectionTimer)\n    window.clearTimeout(this.kbInputTimer)\n    this.renderFormat()\n  },\n\n  beforeUnmount () {\n    window.clearTimeout(this.debounceTimer)\n    window.clearTimeout(this.selectionTimer)\n    window.clearTimeout(this.kbInputTimer)\n  }\n}\n</script>\n\n<template>\n<span class=\"vue__time-picker\" :style=\"inputWidthStyle\">\n  <input type=\"text\" class=\"vue__time-picker-input\" ref=\"input\"\n         :class=\"[inputClass, {'is-empty': inputIsEmpty, 'invalid': hasInvalidInput, 'all-selected': allValueSelected, 'disabled': disabled, 'has-custom-icon': $slots && $slots.icon }]\"\n         :style=\"inputWidthStyle\"\n         :id=\"id\"\n         :name=\"name\"\n         :value=\"inputIsEmpty ? null : customDisplayTime\"\n         :placeholder=\"placeholder ? placeholder : formatString\"\n         :tabindex=\"disabled ? -1 : tabindex\"\n         :disabled=\"booleanAttr(disabled)\"\n         :readonly=\"booleanAttr(!manualInput)\"\n         :autocomplete=\"autocomplete\"\n         @focus=\"onFocus\"\n         @change=\"onChange\"\n         @blur=\"debounceBlur(); blurEvent()\"\n         @mousedown=\"onMouseDown\"\n         @keydown=\"keyDownHandler\"\n         @compositionstart=\"onCompostionStart\"\n         @compositionend=\"onCompostionEnd\"\n         @paste=\"pasteHandler\"\n         @keydown.esc.exact=\"escBlur\" />\n  <div class=\"controls\" v-if=\"showClearBtn || showDropdownBtn\" tabindex=\"-1\">\n    <span v-if=\"!isActive && showClearBtn\" class=\"clear-btn\" tabindex=\"-1\"\n          :class=\"{'has-custom-btn': $slots && $slots.clearButton }\"\n          @click=\"clearTime\">\n      <slot name=\"clearButton\"><span class=\"char\">&times;</span></slot>\n    </span>\n    <span v-if=\"showDropdownBtn\" class=\"dropdown-btn\" tabindex=\"-1\"\n          :class=\"{'has-custom-btn': $slots && $slots.dropdownButton }\"\n          @click=\"setDropdownState(fixedDropdownButton ? !showDropdown : true, true)\"\n          @mousedown=\"keepFocusing\">\n      <slot name=\"dropdownButton\"><span class=\"char\">&dtrif;</span></slot>\n    </span>\n  </div>\n  <div class=\"custom-icon\" v-if=\"$slots && $slots.icon\"><slot name=\"icon\"></slot></div>\n  <div class=\"time-picker-overlay\" v-if=\"showDropdown\" @click=\"toggleActive\" tabindex=\"-1\"></div>\n  <div class=\"dropdown\" v-show=\"showDropdown\" tabindex=\"-1\"\n       :class=\"[dropdownDirClass]\" :style=\"inputWidthStyle\"\n       @mouseup=\"keepFocusing\" @click.stop=\"\">\n    <div class=\"select-list\" :style=\"inputWidthStyle\" tabindex=\"-1\">\n      <!-- Common Keyboard Support: less event listeners -->\n      <template v-if=\"!advancedKeyboard\">\n        <template v-for=\"column in columnsSequence\" :key=\"column\">\n          <ul v-if=\"column === 'hour'\" class=\"hours\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"hourLabelText\"></li>\n            <template v-for=\"(hr, hIndex) in hours\" :key=\"hIndex\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('hour', hr))\"\n                  :class=\"{active: hour === hr}\"\n                  :disabled=\"booleanAttr(isDisabled('hour', hr))\"\n                  :data-key=\"hr\"\n                  v-text=\"hr\"\n                  @click=\"select('hour', hr)\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'minute'\" class=\"minutes\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"minuteLabelText\"></li>\n            <template v-for=\"(m, mIndex) in minutes\" :key=\"mIndex\">\n              <li v-if=\"!opts.hideDisabledMinutes || (opts.hideDisabledMinutes && !isDisabled('minute', m))\"\n                  :class=\"{active: minute === m}\"\n                  :disabled=\"booleanAttr(isDisabled('minute', m))\"\n                  :data-key=\"m\"\n                  v-text=\"m\"\n                  @click=\"select('minute', m)\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'second'\" class=\"seconds\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"secondLabelText\"></li>\n            <template v-for=\"(s, sIndex) in seconds\" :key=\"sIndex\">\n              <li v-if=\"!opts.hideDisabledSeconds || (opts.hideDisabledSeconds && !isDisabled('second', s))\"\n                  :class=\"{active: second === s}\"\n                  :disabled=\"booleanAttr(isDisabled('second', s))\"\n                  :data-key=\"s\"\n                  v-text=\"s\"\n                  @click=\"select('second', s)\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'apm'\" class=\"apms\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"apmLabelText\"></li>\n            <template v-for=\"(a, aIndex) in apms\" :key=\"aIndex\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('apm', a))\"\n                  :class=\"{active: apm === a}\"\n                  :disabled=\"booleanAttr(isDisabled('apm', a))\"\n                  :data-key=\"a\"\n                  v-text=\"apmDisplayText(a)\"\n                  @click=\"select('apm', a)\"></li>\n            </template>\n          </ul>\n        </template>\n      </template><!-- / Common Keyboard Support -->\n\n      <!--\n        Advanced Keyboard Support\n        Addeds hundreds of additional event lisenters\n      -->\n      <template v-if=\"advancedKeyboard\">\n        <template v-for=\"column in columnsSequence\" :key=\"column\">\n          <ul v-if=\"column === 'hour'\" class=\"hours\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"hourLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(hr, hIndex) in hours\" :key=\"hIndex\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('hour', hr))\"\n                  :class=\"{active: hour === hr}\"\n                  :tabindex=\"isDisabled('hour', hr) ? -1 : tabindex\"\n                  :data-key=\"hr\"\n                  :disabled=\"booleanAttr(isDisabled('hour', hr))\"\n                  v-text=\"hr\"\n                  @click=\"select('hour', hr)\"\n                  @keydown.space.prevent=\"select('hour', hr)\"\n                  @keydown.enter.prevent=\"select('hour', hr)\"\n                  @keydown.up.prevent=\"prevItem('hour', hr)\"\n                  @keydown.down.prevent=\"nextItem('hour', hr)\"\n                  @keydown.left.prevent=\"toLeftColumn('hour')\"\n                  @keydown.right.prevent=\"toRightColumn('hour')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'minute'\" class=\"minutes\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"minuteLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(m, mIndex) in minutes\" :key=\"mIndex\">\n              <li v-if=\"!opts.hideDisabledMinutes || (opts.hideDisabledMinutes && !isDisabled('minute', m))\"\n                  :class=\"{active: minute === m}\"\n                  :tabindex=\"isDisabled('minute', m) ? -1 : tabindex\"\n                  :data-key=\"m\"\n                  :disabled=\"booleanAttr(isDisabled('minute', m))\"\n                  v-text=\"m\"\n                  @click=\"select('minute', m)\"\n                  @keydown.space.prevent=\"select('minute', m)\"\n                  @keydown.enter.prevent=\"select('minute', m)\"\n                  @keydown.up.prevent=\"prevItem('minute', m)\"\n                  @keydown.down.prevent=\"nextItem('minute', m)\"\n                  @keydown.left.prevent=\"toLeftColumn('minute')\"\n                  @keydown.right.prevent=\"toRightColumn('minute')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'second'\" class=\"seconds\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"secondLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(s, sIndex) in seconds\" :key=\"sIndex\">\n              <li v-if=\"!opts.hideDisabledSeconds || (opts.hideDisabledSeconds && !isDisabled('second', s))\"\n                  :class=\"{active: second === s}\"\n                  :tabindex=\"isDisabled('second', s) ? -1 : tabindex\"\n                  :data-key=\"s\"\n                  :disabled=\"booleanAttr(isDisabled('second', s))\"\n                  v-text=\"s\"\n                  @click=\"select('second', s)\"\n                  @keydown.space.prevent=\"select('second', s)\"\n                  @keydown.enter.prevent=\"select('second', s)\"\n                  @keydown.up.prevent=\"prevItem('second', s)\"\n                  @keydown.down.prevent=\"nextItem('second', s)\"\n                  @keydown.left.prevent=\"toLeftColumn('second')\"\n                  @keydown.right.prevent=\"toRightColumn('second')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'apm'\" class=\"apms\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"apmLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(a, aIndex) in apms\" :key=\"aIndex\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('apm', a))\"\n                  :class=\"{active: apm === a}\"\n                  :tabindex=\"isDisabled('apm', a) ? -1 : tabindex\"\n                  :data-key=\"a\"\n                  :disabled=\"booleanAttr(isDisabled('apm', a))\"\n                  v-text=\"apmDisplayText(a)\"\n                  @click=\"select('apm', a)\"\n                  @keydown.space.prevent=\"select('apm', a)\"\n                  @keydown.enter.prevent=\"select('apm', a)\"\n                  @keydown.up.prevent=\"prevItem('apm', a)\"\n                  @keydown.down.prevent=\"nextItem('apm', a)\"\n                  @keydown.left.prevent=\"toLeftColumn('apm')\"\n                  @keydown.right.prevent=\"toRightColumn('apm')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n        </template>\n      </template><!-- / Advanced Keyboard Support -->\n    </div>\n  </div>\n</span>\n</template>\n\n<style lang=\"css\">\n.vue__time-picker {\n  display: inline-block;\n  position: relative;\n  font-size: 1em;\n  width: 10em;\n  font-family: sans-serif;\n  vertical-align: middle;\n}\n\n.vue__time-picker * {\n  box-sizing: border-box;\n}\n\n.vue__time-picker input.vue__time-picker-input {\n  border: 1px solid #d2d2d2;\n  width: 10em;\n  height: 2.2em;\n  padding: 0.3em 0.5em;\n  font-size: 1em;\n}\n\n.vue__time-picker input.has-custom-icon {\n  padding-left: 1.8em;\n}\n\n.vue__time-picker input.vue__time-picker-input.invalid:not(.skip-error-style) {\n  border-color: #cc0033;\n  outline-color: #cc0033;\n}\n\n.vue__time-picker input.vue__time-picker-input:disabled,\n.vue__time-picker input.vue__time-picker-input.disabled {\n  color: #d2d2d2;\n}\n\n.vue__time-picker .controls {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 3;\n\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  align-items: stretch;\n\n  /* Prevent browser focusing on the controls layer */\n  pointer-events: none;\n}\n\n.vue__time-picker .controls > * {\n  cursor: pointer;\n  \n  width: auto;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0 0.35em;\n\n  color: #d2d2d2;\n  line-height: 100%;\n  font-style: normal;\n\n  /* Resume pointer-events on children components */\n  pointer-events: initial;\n\n  transition: color .2s, opacity .2s;\n}\n\n.vue__time-picker .controls > *:hover {\n  color: #797979;\n}\n\n.vue__time-picker .controls > *:focus,\n.vue__time-picker .controls > *:active {\n  outline: 0;\n}\n\n.vue__time-picker .controls .char {\n  font-size: 1.1em;\n  line-height: 100%;\n\n  /* Vertical align fixes for webkit browsers only */\n  -webkit-margin-before: -0.15em;\n}\n\n.vue__time-picker .custom-icon {\n  z-index: 2;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 1.8em;\n\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n\n  /* pass down mouse events to the <input> underneath */\n  pointer-events: none;\n}\n\n.vue__time-picker .custom-icon img,\n.vue__time-picker .custom-icon svg,\n.vue__time-picker .controls img,\n.vue__time-picker .controls svg {\n  display: inline-block;\n  vertical-align: middle;\n  margin: 0;\n  border: 0;\n  outline: 0;\n  max-width: 1em;\n  height: auto;\n}\n\n.vue__time-picker .time-picker-overlay {\n  z-index: 4;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n.vue__time-picker .dropdown {\n  position: absolute;\n  z-index: 5;\n  top: calc(2.2em + 2px);\n  left: 0;\n  background: #fff;\n  box-shadow: 0 1px 6px rgba(0,0,0,0.15);\n  width: 10em;\n  height: 10em;\n  font-weight: normal;\n}\n\n.vue__time-picker .dropdown.drop-up {\n  top: auto;\n  bottom: calc(2.2em + 1px);\n}\n\n.vue__time-picker .dropdown .select-list {\n  width: 10em;\n  height: 10em;\n  overflow: hidden;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: stretch;\n  justify-content: space-between;\n}\n\n.vue__time-picker .dropdown .select-list:focus,\n.vue__time-picker .dropdown .select-list:active {\n  outline: 0;\n}\n\n.vue__time-picker .dropdown ul {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  outline: 0;\n\n  flex: 1 1 0.00001px;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.vue__time-picker .dropdown ul.minutes,\n.vue__time-picker .dropdown ul.seconds,\n.vue__time-picker .dropdown ul.apms{\n  border-left: 1px solid #fff;\n}\n\n.vue__time-picker .dropdown ul li {\n  list-style: none;\n  text-align: center;\n  padding: 0.3em 0;\n  color: #161616;\n}\n\n.vue__time-picker .dropdown ul li:not(.hint):not([disabled]):hover,\n.vue__time-picker .dropdown ul li:not(.hint):not([disabled]):focus {\n  background: rgba(0,0,0,.08);\n  color: #161616;\n  cursor: pointer;\n}\n\n.vue__time-picker .dropdown ul li:not([disabled]).active,\n.vue__time-picker .dropdown ul li:not([disabled]).active:hover,\n.vue__time-picker .dropdown ul li:not([disabled]).active:focus {\n  background: #41B883;\n  color: #fff;\n}\n\n.vue__time-picker .dropdown ul li[disabled],\n.vue__time-picker .dropdown ul li[disabled]:hover {\n  background: transparent;\n  opacity: 0.3;\n  cursor: not-allowed;\n}\n\n.vue__time-picker .dropdown .hint {\n  color: #a5a5a5;\n  cursor: default;\n  font-size: 0.8em;\n}\n</style>\n"],"names":["CONFIG","HOUR_TOKENS","MINUTE_TOKENS","SECOND_TOKENS","APM_TOKENS","BASIC_TYPES","DEFAULT_OPTIONS","format","minuteInterval","secondInterval","hourRange","minuteRange","secondRange","hideDisabledHours","hideDisabledMinutes","hideDisabledSeconds","hideDisabledItems","advancedKeyboard","hideDropdown","blurDelay","manualInputTimeout","dropOffsetHeight","name","props","modelValue","type","Object","String","Number","Array","Boolean","default","hideClearButton","disabled","closeOnComplete","id","inputClass","placeholder","tabindex","inputWidth","autocomplete","hourLabel","minuteLabel","secondLabel","apmLabel","amText","pmText","lazy","autoScroll","dropDirection","containerId","manualInput","fixedDropdownButton","debugMode","data","timeValue","hours","minutes","seconds","apms","isActive","showDropdown","isFocusing","debounceTimer","undefined","hourType","minuteType","secondType","apmType","hour","minute","second","apm","fullValues","bakDisplayTime","doClearApmChecking","selectionTimer","kbInputTimer","kbInputLog","bakCurrentPos","forceDropOnTop","emits","computed","[object Object]","options","assign","this","length","isNumber","debugLog","isArray","JSON","parse","stringify","opts","typesInUse","filter","getTokenByType","sort","l","r","formatString","indexOf","tokensInUse","map","types","tokens","replace","RegExp","displayTime","apmDisplayText","inUse","inputIsEmpty","range","forEach","value","start","end","is12hRange","translate12hRange","i","includes","push","hourRangeIn24HrFormat","baseOn12Hours","restrictedHourRange","list","hr","substr","formatValue","am12Index","unshift","splice","shift","concat","result","customApmText","apmEnabled","am","some","pm","renderRangeList","width","join","useStringValue","tokensRegxStr","tokenRegexBase","tokensMatchAll","getMatchAllByRegex","tokenChunks","tkMatch","rawToken","tokenMatchItem","index","token","getTokenType","needsCalibrate","len","chk","needsPosCalibrate","calibrateLen","chunkCurrentLen","has","toLowerCase","minuteRangeList","secondRangeList","isEmptyValue","isValidValue","isDisabled","notInInterval","invalidValues","autoDirectionEnabled","watch","newValue","renderFormat","newInteval","renderList","deep","readValues","fillValues","toDisabled","newLength","oldLength","$emit","methods","validValues","newFormat","checkAcceptingType","renderHoursList","renderApmList","nextTick","hoursCount","listType","interval","isMinuteOrSecond","isMinute","readStringValues","readObjectValues","objValue","values","keys","sanitizedValue","addFallbackValues","testString","regexString","str","matchAll","polyfillMatchAll","stringValue","othersRegxStr","othersMatchAll","chunks","isValueToken","otMatch","regexCombo","chunk","tokenRegex","getTokenRegex","safeChars","test","valueResults","match","slice","vrIndex","targetToken","setValueFromString","tokenChunksForLog","tChunk","targetString","regxStr","matchesList","indicesReg","matchedItem","existIndex","findIndex","idxItem","regex","exec","itemIndicesRegex","0","parsedValue","tokenType","stdValue","forceEmit","baseHour","baseHourType","apmValue","hourValue","lowerCasedApm","a","A","toUpperCase","m","mm","s","ss","emitTimeValue","allValueSelected","toggleActive","valueT","match12hRange","isBasicType","isDisabledHour","section","rawRange","formatedValue","validItems","item","setDropdownState","$refs","input","selectionStart","selectionEnd","selectFirstSlot","forceApmSelection","emptyApmSelection","checkForAutoScroll","toShow","fromUserClick","keepFocusing","checkDropDirection","scrollToSelectedValues","firstColumn","scrollToSelected","column","allowFallback","targetList","$el","querySelectorAll","targetValue","activeItemInCol","validItemsInCol","scrollTop","offsetTop","focus","window","clearTimeout","inputBox","blur","setTimeout","onBlur","columnClass","dataKey","getPrevious","siblingsInCol","selfIndex","prototype","call","sbl","getAttribute","isManualInput","targetItem","getClosestSibling","currentColumn","toLeft","currentColumnIndex","targetColumn","getSideColumnName","listItems","activeItems","getActiveItemInSideColumn","getFirstItemInSideColumn","nearestSlot","getNearestChunkByPos","debounceSetInputSelection","evt","isComposing","keyCode","preventDefault","stopPropagation","keyboardInput","key","clearKbInputLog","arrowHandler","clearTime","tabHandler","metaKey","ctrlKey","getCurrentTokenChunk","cpsData","inputIsCustomApmText","isCustomApmText","setSanitizedValueToSection","customDisplayTime","bakPos","pastingText","clipboardData","getData","replaceCustomApmText","setKbInput","debounceClearKbLog","direction","37","38","39","40","selectFirstValidValue","currentChunk","getClosestValidItemInCol","newChunkPos","toLateralToken","tokenChunksPos","firstChunk","lastChunk","shiftKey","newChar","isApm","chunkType","chunkToken","validValue","lastInputValue","autoFillValue","startPos","nearest","nearestDelta","delta","Math","abs","firstSlotType","getClosestHourItem","currentValue","validHoursList","setManualHour","currentIndex","nextIndex","nextItem","prevItem","select","inputValue","hourT","setInputSelectionRange","setSelectionRange","firstChunkPos","currentChunkIndex","targetSlotPos","inputData","inputString","container","document","getElementById","el","spaceDown","offsetHeight","max","body","scrollHeight","documentElement","clientHeight","isNaN","parseFloat","isFinite","testValue","tokenRegexStr","booleanAttr","isTrue","logText","identifier","inputClasses","split","clsName","trim","finalLogText","console","debug","log"],"mappings":"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"}