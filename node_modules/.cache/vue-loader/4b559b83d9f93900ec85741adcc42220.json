{"remainingRequest":"I:\\sigma-vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!I:\\sigma-vue\\src\\components\\Documentation.vue?vue&type=script&lang=js","dependencies":[{"path":"I:\\sigma-vue\\src\\components\\Documentation.vue","mtime":1696333198466},{"path":"I:\\sigma-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\sigma-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"I:\\sigma-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\sigma-vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQp9DQo="},{"version":3,"sources":["I:\\sigma-vue\\src\\components\\Documentation.vue"],"names":[],"mappings":";AAqUA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACf","file":"I:/sigma-vue/src/components/Documentation.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"p-grid\">\r\n        <div class=\"p-col-12\">\r\n            <div class=\"card docs\">\r\n                <h4>Current Version</h4>\r\n                <p>Vue 3.0.6 and PrimeVue 3.x</p>\r\n\r\n                <h4>Getting Started</h4>\r\n                <p>Sigma is an application template for Vue based on the <a href=\"https://cli.vuejs.org/\">Vue CLI</a> that provides out-of-the-box standard\r\n                tooling for Vue projects. To get started, clone the <a href=\"https://github.com/primefaces/sigma-vue\">repository</a> from GitHub and install the dependencies with npm or yarn.</p>\r\n<pre>\r\nnpm install\r\n</pre>\r\n\r\n                or\r\n\r\n<pre>\r\nyarn\r\n</pre>\r\n\r\n                <p>Next step is running the application using the serve script and navigate to <b>http://localhost:8080/</b> to view the application.\r\n                    That is it, you may now start with the development of your application using the Sigma template.</p>\r\n\r\n                <pre>\r\nnpm run serve\r\n</pre>\r\n\r\n                <h4>Vue CLI Scripts</h4>\r\n                <p>Following commands are derived from create-app-app.</p>\r\n<pre>\r\n\"npm run serve\": Starts the development server\r\n\"npm run build\": Builds the application for deployment.\r\n\"npm run lint\": Executes the lint checks.\r\n\"npm run test:unit\": Runs the tests.\r\n</pre>\r\n\r\n                <h4>Structure</h4>\r\n                <p>Sigma consists of 2 main parts; the application layout and the resources. <i>App.vue</i> inside src folder is the main component containing the template for the base layout\r\n                    whereas required resources such as SASS structure for the layout are placed inside the <b>src/assets/layout</b> folder.</p>\r\n\r\n                <h4>Templates</h4>\r\n                <p>Main layout is the template of the <i>App.vue</i>, it is divided into a couple of child components such as topbar, profile, menu and footer. Here is template of the\r\n                    <i>App.vue</i> component that implements the logic such as menu state, layout modes and so on.\r\n                </p>\r\n\r\n<pre v-code>\r\n<code><template v-pre>\r\n&lt;template&gt;\r\n    &lt;div :class=\"containerClass\" @click=\"onWrapperClick\"&gt;\r\n        &lt;AppTopBar @menu-toggle=\"onMenuToggle\" /&gt;\r\n\r\n        &lt;transition name=\"layout-sidebar\"&gt;\r\n            &lt;div :class=\"sidebarClass\" @click=\"onSidebarClick\" v-show=\"isSidebarVisible()\"&gt;\r\n                &lt;div class=\"layout-logo\"&gt;\r\n                    &lt;router-link to=\"/\"&gt;\r\n                        &lt;img alt=\"Logo\" :src=\"logo\" /&gt;\r\n                    &lt;/router-link&gt;\r\n                &lt;/div&gt;\r\n\r\n                &lt;AppProfile /&gt;\r\n                &lt;AppMenu :model=\"menu\" @menuitem-click=\"onMenuItemClick\" /&gt;\r\n            &lt;/div&gt;\r\n        &lt;/transition&gt;\r\n\r\n        &lt;div class=\"layout-main\"&gt;\r\n            &lt;router-view /&gt;\r\n        &lt;/div&gt;\r\n\r\n        &lt;AppConfig :layoutMode=\"layoutMode\" :layoutColorMode=\"layoutColorMode\" @layout-change=\"onLayoutChange\" @layout-color-change=\"onLayoutColorChange\"/&gt;\r\n\r\n        &lt;AppFooter /&gt;\r\n    &lt;/div&gt;\r\n&lt;/template&gt;\r\n</template>\r\n</code></pre>\r\n\r\n                <h4>Menu</h4>\r\n                <p>Menu is a separate component defined in <i>AppMenu.vue</i> file based on PrimeNG MenuModel API. In order to define the menuitems,\r\n                    navigate to data section of <i>App.vue</i> file and define your own model as a nested structure using the menu property.\r\n                    Here is the menu component from the demo application. Notice that menu object is bound to the model property of AppMenu component as shown above.</p>\r\n\r\n<pre v-code.script>\r\n<code>\r\ndata() {\r\n    return {\r\n        menu : [\r\n            {label: 'Dashboard', icon: 'pi pi-fw pi-home', to: '/'},\r\n            {\r\n                label: 'UI KIT', icon: 'pi pi-fw pi-sitemap',\r\n                items: [\r\n                    {label: 'Form Layout', icon: 'pi pi-fw pi-id-card', to: '/formlayout'},\r\n                    {label: 'Input', icon: 'pi pi-fw pi-check-square', to: '/input'},\r\n                    {label: \"Float Label\", icon: \"pi pi-fw pi-bookmark\", to: \"/floatlabel\"},\r\n                    {label: \"Invalid State\", icon: \"pi pi-fw pi-exclamation-circle\", to: \"invalidstate\"},\r\n                    {label: 'Button', icon: 'pi pi-fw pi-mobile', to: '/button'},\r\n                    {label: 'Table', icon: 'pi pi-fw pi-table', to: '/table'},\r\n                    {label: 'List', icon: 'pi pi-fw pi-list', to: '/list'},\r\n                    {label: 'Tree', icon: 'pi pi-fw pi-share-alt', to: '/tree'},\r\n                    {label: 'Panel', icon: 'pi pi-fw pi-tablet', to: '/panel'},\r\n                    {label: 'Overlay', icon: 'pi pi-fw pi-clone', to: '/overlay'},\r\n                    {label: 'Menu', icon: 'pi pi-fw pi-bars', to: '/menu'},\r\n                    {label: 'Message', icon: 'pi pi-fw pi-comment', to: '/messages'},\r\n                    {label: 'File', icon: 'pi pi-fw pi-file', to: '/file'},\r\n                    {label: 'Chart', icon: 'pi pi-fw pi-chart-bar', to: '/chart'},\r\n                    {label: 'Misc', icon: 'pi pi-fw pi-circle-off', to: '/misc'},\r\n                ]\r\n            },\r\n            {\r\n                label: \"Utilities\", icon:'pi pi-fw pi-globe',\r\n                items: [\r\n                    {label: 'Display', icon:'pi pi-fw pi-desktop', to:'/display'},\r\n                    {label: 'Elevation', icon:'pi pi-fw pi-external-link', to:'/elevation'},\r\n                    {label: 'Flexbox', icon:'pi pi-fw pi-directions', to:'/flexbox'},\r\n                    {label: 'Icons', icon:'pi pi-fw pi-search', to:'/icons'},\r\n                    {label: 'Grid System', icon:'pi pi-fw pi-th-large', to:'/grid'},\r\n                    {label: 'Spacing', icon:'pi pi-fw pi-arrow-right', to:'/spacing'},\r\n                    {label: 'Typography', icon:'pi pi-fw pi-align-center', to:'/typography'},\r\n                    {label: 'Text', icon:'pi pi-fw pi-pencil', to:'/text'},\r\n                ]\r\n            },\r\n            {\r\n                label: 'Pages', icon: 'pi pi-fw pi-clone',\r\n                items: [\r\n                    {label: 'Crud', icon: 'pi pi-fw pi-user-edit', to: '/crud'},\r\n                    {label: 'Calendar', icon: 'pi pi-fw pi-calendar-plus', to: '/calendar'},\r\n                    {label: 'Timeline', icon: 'pi pi-fw pi-calendar', to: '/timeline'},\r\n                    {label: 'Empty Page', icon: 'pi pi-fw pi-circle-off', to: '/empty'}\r\n                ]\r\n            },\r\n            {\r\n                label: 'Menu Hierarchy', icon: 'pi pi-fw pi-search',\r\n                items: [\r\n                    {\r\n                        label: 'Submenu 1', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {\r\n                                label: 'Submenu 1.1', icon: 'pi pi-fw pi-bookmark',\r\n                                items: [\r\n                                    {label: 'Submenu 1.1.1', icon: 'pi pi-fw pi-bookmark'},\r\n                                    {label: 'Submenu 1.1.2', icon: 'pi pi-fw pi-bookmark'},\r\n                                    {label: 'Submenu 1.1.3', icon: 'pi pi-fw pi-bookmark'},\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Submenu 1.2', icon: 'pi pi-fw pi-bookmark',\r\n                                items: [\r\n                                    {label: 'Submenu 1.2.1', icon: 'pi pi-fw pi-bookmark'},\r\n                                    {label: 'Submenu 1.2.2', icon: 'pi pi-fw pi-bookmark'}\r\n                                ]\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Submenu 2', icon: 'pi pi-fw pi-bookmark',\r\n                        items: [\r\n                            {\r\n                                label: 'Submenu 2.1', icon: 'pi pi-fw pi-bookmark',\r\n                                items: [\r\n                                    {label: 'Submenu 2.1.1', icon: 'pi pi-fw pi-bookmark'},\r\n                                    {label: 'Submenu 2.1.2', icon: 'pi pi-fw pi-bookmark'},\r\n                                    {label: 'Submenu 2.1.3', icon: 'pi pi-fw pi-bookmark'},\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: 'Submenu 2.2', icon: 'pi pi-fw pi-bookmark',\r\n                                items: [\r\n                                    {label: 'Submenu 2.2.1', icon: 'pi pi-fw pi-bookmark'},\r\n                                    {label: 'Submenu 2.2.2', icon: 'pi pi-fw pi-bookmark'}\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {label: 'Documentation', icon: 'pi pi-fw pi-question', command: () => {window.location = \"#/documentation\"}},\r\n            {label: 'View Source', icon: 'pi pi-fw pi-search', command: () => {window.location = \"https://github.com/primefaces/sigma\"}}\r\n        ]\r\n    }\r\n}\r\n\r\n</code></pre>\r\n\r\n                <h4>Dependencies</h4>\r\n\r\n                <p>Dependencies of Sigma are listed below and needs to be added to package.json. Sigma has no direct dependency, even PrimeVue components are an optional dependency..</p>\r\n\r\n<pre v-code.script>\r\n<code>\r\n{\r\n    \"primevue\": \"3.3.4\",              //optional: PrimeVue components\r\n    \"primeicons\": \"4.1.0\",            //optional: Icons\r\n    \"primeflex\": \"2.0.0\",             //optional: Grid system\r\n}\r\n\r\n</code></pre>\r\n\r\n                <h4>Integration with an Existing CLI Project</h4>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tTo setup Sigma in an existing project, follow the steps below;\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Copy the <i>public/assets</i> folder to your projects folder with the same name</li>\r\n\t\t\t\t\t<li>Copy all <i>src/App*.vue</i> files to the src folder of your application.</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<p>Install PrimeVue</p>\r\n\r\n<pre v-code><code>\r\nnpm install primevue@latest --save\r\nnpm install\tprimeicons@latest --save\r\nnpm install primeflex@latest --save\r\n\r\n</code></pre>\r\n\r\n                <h4>Saga Theme</h4>\r\n                <p>Sigma uses the free Saga-Blue which is a free theme distributed within PrimeVue, however it can be used with any PrimeVue theme as well.</p>\r\n\r\n                <h4>SASS Variables</h4>\r\n                <p>In case you'd like to customize the layout variables, open <i>_variables.scss</i> file under src/layout folder. Saving the changes\r\n                    will be reflected instantly at your browser.</p>\r\n\r\n                <h3>src/assets/_variables.scss</h3>\r\n<pre v-code.css>\r\n<code>\r\n/* General */\r\n$fontSize:14px;\r\n$bodyBgColor:#edf0f5;\r\n$textColor:#333333;\r\n$textSecondaryColor:#707070;\r\n$borderRadius:3px;\r\n$dividerColor:#e3e3e3;\r\n$transitionDuration:.2s;\r\n$maskBgColor:#424242;\r\n$focusShadowColor:#8dcdff;\r\n\r\n\r\n/* Menu */\r\n$menuitemBadgeBgColor:#007be5;\r\n$menuitemBadgeColor:#ffffff;\r\n$submenuFontSize:13px;\r\n\r\n/* Menu Dark*/\r\n$menuDarkBgColorFirst:#4d505b;\r\n$menuDarkBgColorLast:#3b3e47;\r\n$menuitemDarkColor:#ffffff;\r\n$menuitemDarkHoverColor:#0388e5;\r\n$menuitemDarkActiveColor:#0388e5;\r\n$menuitemDarkActiveBgColor:#2e3035;\r\n$menuitemDarkBorderColor:rgba(52, 56, 65, 0.6);\r\n\r\n/* Menu Light*/\r\n$menuBgColorFirst:#f3f4f9;\r\n$menuBgColorLast:#d7dbe8;\r\n$menuitemColor:#232428;\r\n$menuitemHoverColor:#0388e5;\r\n$menuitemActiveColor:#0388e5;\r\n$menuitemActiveBgColor:#ffffff;\r\n$menuitemBorderColor:rgba(207, 211, 224, 0.6);\r\n\r\n/* Topbar */\r\n$topbarLeftBgColor:#0388E5;\r\n$topbarRightBgColor:#07BDF4;\r\n$topbarItemBadgeBgColor:#ef6262;\r\n$topbarItemBadgeColor:#ffffff;\r\n$topbarItemColor:#ffffff;\r\n$topbarItemHoverColor:#77c7ff;\r\n$topbarSearchInputBorderBottomColor:#ffffff;\r\n$topbarSearchInputColor:#ffffff;\r\n\r\n/* Footer */\r\n$footerBgColor:#ffffff;\r\n\r\n</code></pre>\r\n\r\n                <h4>Menu Modes</h4>\r\n                <p>Menu has 2 modes, <i>static</i> and <i>overlay</i>. Main layout container element in App.vue is used to define which mode to use by adding specific classes. List\r\n                    below indicates the style classes for each mode.</p>\r\n\r\n                <ul>\r\n                    <li>Static: \"layout-wrapper layout-static\"</li>\r\n                    <li>Overlay: \"layout-wrapper layout-overlay\"</li>\r\n                </ul>\r\n\r\n                <p>For example to create an overlay menu, the div element should be in following form;</p>\r\n<pre v-code>\r\n<code><template v-pre>\r\n&lt;div class=\"layout-wrapper layout-static\"&gt;\r\n</template>\r\n</code></pre>\r\n\r\n                <p>It is also possible to leave the choice to the user by keeping the preference at a component and using an expression to bind it so that user can switch between modes. Sample\r\n                    application has an example implementation of such use case with a computed property. Refer to App.vue for an example.</p>\r\n\r\n                <h4>Menu Color Scheme</h4>\r\n                <p>There are two alternatives as the menu colors schemes; \"light\" and \"dark\". A color scheme is applied using the <i>layout-sidebar-light</i> or <i>layout-sidebar-dark</i>\r\n                to the sidebar element.</p>\r\n\r\n                <b>Dark Menu</b>\r\n<pre v-code>\r\n<code><template v-pre>\r\n&lt;div class=\"layout-sidebar layout-sidebar-dark\"&gt;\r\n</template>\r\n</code></pre>\r\n\r\n                <b>Light Menu</b>\r\n<pre v-code>\r\n<code><template v-pre>\r\n&lt;div class=\"layout-sidebar layout-sidebar-light\"&gt;\r\n</template>\r\n</code></pre>\r\n\r\n                <h4>Grid CSS</h4>\r\n                <p>Sigma uses PrimeFlex CSS Grid throughout the samples. Although any grid library can be used, we recommend using PrimeFlex as your layout framework as it is well tested and supported by PrimeVue. PrimeFlex is\r\n                    available at <a href=\"https://www.npmjs.com/package/primeflex\">NPM</a>.</p>\r\n\r\n                <h4>Customizing Styles</h4>\r\n                <p>It is suggested to write your customizations in <i>_overrides.scss</i> file instead of adding them to the\r\n                    scss files under sass folder to avoid maintenance issues after an update.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n}\r\n</script>\r\n\r\n<style scoped>\r\npre {\r\n    border-left: 10px solid #7fbcec;\r\n    background: #f0f0f0;\r\n    font-family: Consolas,Monaco,Andale Mono,Ubuntu Mono,monospace;\r\n    text-align: left;\r\n    white-space: pre;\r\n    padding: 1em;\r\n    overflow: auto;\r\n}\r\n\r\ni {\r\n    background-color: #fcf2a7;\r\n    font-family: monaco,Consolas,Lucida Console,monospace;\r\n    font-weight: 700;\r\n    font-style: normal;\r\n    font-size: 14px;\r\n    padding: 2px;\r\n}\r\n</style>\r\n"]}]}