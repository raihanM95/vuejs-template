{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\security\\GlobalSettings.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\security\\GlobalSettings.js","mtime":1661058391227},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/security/GlobalSettings.js"],"names":["GlobalSettingsService","FilterMatchMode","FilterOperator","data","editingRows","globalSettingList","globalSetting","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","submitted","globalRestoreSettingList","setting_name","setting_value","globalMainSettingList","label","created","globalSettingsService","getAll","methods","getSettingsValue","filter","el","then","onRowEditSave","event","update","add","length","result","status","$toast","severity","summary","detail","life","res","put"],"mappings":"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","sourcesContent":["import GlobalSettingsService from \"../../service/security/GlobalSettingsService\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            editingRows: [],\r\n            globalSettingList: [],\r\n            globalSetting: {},\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            },\r\n            initFilters() {\r\n                this.filters = {\r\n                    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                    name: {\r\n                        operator: FilterOperator.AND,\r\n                        constraints: [\r\n                            { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n                        ],\r\n                    },\r\n                };\r\n            },\r\n            submitted: false,\r\n            globalRestoreSettingList:\r\n            [\r\n                { setting_name: \"Appointment Consultancy Fee\", setting_value: \"Prescription\" },\r\n                { setting_name: \"Admission Payment Express\", setting_value: \"No\" },\r\n                { setting_name: \"Appointment Payment Express\", setting_value: \"No\" },\r\n                { setting_name: \"Investigation Payment Express\", setting_value: \"No\" },\r\n                { setting_name: \"IPD Commission with Discount\", setting_value: \"Yes\" },\r\n            ],\r\n            globalMainSettingList:\r\n                [\r\n                    { setting_name: \"Appointment Consultancy Fee\", label: \"Prescription\", value: \"Prescription\" },\r\n                    { setting_name: \"Appointment Consultancy Fee\", label: \"Payment\", value: \"Payment\" },\r\n                    { setting_name: \"Admission Payment Express\", label: \"Yes\", value: \"Yes\" },\r\n                    { setting_name: \"Admission Payment Express\", label: \"No\", value: \"No\" },\r\n                    { setting_name: \"Appointment Payment Express\", label: \"Yes\", value: \"Yes\" },\r\n                    { setting_name: \"Appointment Payment Express\", label: \"No\", value: \"No\" },\r\n                    { setting_name: \"Investigation Payment Express\", label: \"Yes\", value: \"Yes\" },\r\n                    { setting_name: \"Investigation Payment Express\", label: \"No\", value: \"No\" },\r\n                    { setting_name: \"IPD Commission with Discount\", label: \"Yes\", value: \"Yes\" },\r\n                    { setting_name: \"IPD Commission with Discount\", label: \"No\", value: \"No\" },\r\n                ]\r\n        };\r\n    },\r\n    created() {\r\n        this.globalSettingsService = new GlobalSettingsService();\r\n        this.getAll();\r\n    },\r\n    methods: {\r\n        getSettingsValue(setting_name) {\r\n            return this.globalMainSettingList.filter(function (el) {\r\n                return el.setting_name === setting_name;\r\n            }, this);\r\n        },\r\n        getAll() {\r\n            this.globalSettingsService\r\n                .getAll()\r\n                .then((data) => (this.globalSettingList = data.data));\r\n        },\r\n        onRowEditSave(event) {\r\n            //let { newData, index } = event;\r\n            // this.globalSettingList[index] = newData;\r\n            this.update(event.data);\r\n        },\r\n        \r\n        async add() {\r\n            this.submitted = true;\r\n            try {\r\n                if (this.globalRestoreSettingList.length == 0) {\r\n                    return;\r\n                } else {\r\n                    let result = await this.globalSettingsService.add(this.globalRestoreSettingList);\r\n                    if (result.status === 201) {\r\n                        this.$toast.add({\r\n                            severity: \"success\",\r\n                            summary: \"Success\",\r\n                            detail: \"Restore Successfully\",\r\n                            life: 10000,\r\n                        });\r\n                        this.getAll();\r\n                    } else {\r\n                        this.$toast.add({\r\n                            severity: \"error\",\r\n                            summary: \"Failed\",\r\n                            detail: result.res,\r\n                            life: 10000,\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.$toast.add({\r\n                    severity: \"error\",\r\n                    summary: \"Failed\",\r\n                    detail: error,\r\n                    life: 10000,\r\n                });\r\n            }\r\n        },\r\n        async update(globalSettingList) {\r\n            this.submitted = true;\r\n            try {\r\n                if (this.globalSettingList.length == 0) {\r\n                    return;\r\n                } else {\r\n                    let result = await this.globalSettingsService.put(globalSettingList);\r\n                    if (result.status === 202) {\r\n                        this.$toast.add({\r\n                            severity: \"success\",\r\n                            summary: \"Success\",\r\n                            detail: \"Update Successfully\",\r\n                            life: 10000,\r\n                        });\r\n                        this.getAll();\r\n                    } else {\r\n                        this.$toast.add({\r\n                            severity: \"error\",\r\n                            summary: \"Failed\",\r\n                            detail: result.res,\r\n                            life: 10000,\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.$toast.add({\r\n                    severity: \"error\",\r\n                    summary: \"Failed\",\r\n                    detail: error,\r\n                    life: 10000,\r\n                });\r\n            }\r\n        },\r\n    },\r\n};"]}]}