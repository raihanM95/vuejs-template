{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\reports\\IPDPatientReport.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\reports\\IPDPatientReport.js","mtime":1676264109501},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\babel.config.js","mtime":1624271518206},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCBNSVNSZXBvcnRTZXJ2aWNlIGZyb20gIi4uLy4uL3NlcnZpY2UvcmVwb3J0L01JU1JlcG9ydFNlcnZpY2UiOwppbXBvcnQgQ29uc3VsdGFuY3lEZXBhcnRtZW50U2V0dXBTZXJ2aWNlIGZyb20gIi4uLy4uL3NlcnZpY2Uvc2V0dXAvQ29uc3VsdGFuY3lEZXBhcnRtZW50U2V0dXBTZXJ2aWNlIjsKaW1wb3J0IERvY3RvclNldHVwU2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL3NldHVwL0RvY3RvclNldHVwU2VydmljZSI7CmltcG9ydCBDb21tb25TZXJ2aWNlIGZyb20gIi4uLy4uL3NlcnZpY2UvQ29tbW9uU2VydmljZSI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZXBhcnRtZW50TGlzdDogW10sCiAgICAgIGRvY3Rvckxpc3Q6IFtdLAogICAgICBwYXRpZW50SXBkOiB7CiAgICAgICAgY2Rmcm9tZGF0ZTogbW9tZW50KFN0cmluZyhuZXcgRGF0ZShuZXcgRGF0ZSgpLnNldERhdGUobmV3IERhdGUoKS5nZXREYXRlKCkgLSA3KSkpKS5mb3JtYXQoIk1NL0REL1lZWVkiKSwKICAgICAgICBjZHRvZGF0ZTogbW9tZW50KFN0cmluZyhuZXcgRGF0ZSgpKSkuZm9ybWF0KCJNTS9ERC9ZWVlZIiksCiAgICAgICAgdHlwZTogIkFsbCIsCiAgICAgICAgc3RhdHVzOiAiQWRtaXR0ZWQiLAogICAgICAgIGRlcGFydG1lbnRfaWQ6ICJBbGwiLAogICAgICAgIGRvY3Rvcl9pZDogIkFsbCIKICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMubWlzUmVwb3J0U2VydmljZSA9IG5ldyBNSVNSZXBvcnRTZXJ2aWNlKCk7CiAgICB0aGlzLmRvY3RvclNldHVwU2VydmljZSA9IG5ldyBEb2N0b3JTZXR1cFNlcnZpY2UoKTsKICAgIHRoaXMuY29uc3VsdGFuY3lEZXBhcnRtZW50U2V0dXBTZXJ2aWNlID0gbmV3IENvbnN1bHRhbmN5RGVwYXJ0bWVudFNldHVwU2VydmljZSgpOwogICAgdGhpcy5jb21tb25TZXJ2aWNlID0gbmV3IENvbW1vblNlcnZpY2UoKTsKICAgIHRoaXMuY29uc3VsdGFuY3lEZXBhcnRtZW50U2V0dXBTZXJ2aWNlLmdldEFjdGl2ZUNvbWJvKCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXR1cm4gX3RoaXMuZGVwYXJ0bWVudEZvcm1hdHRlZChkYXRhLmRhdGEpOwogICAgfSk7CiAgICB0aGlzLmRvY3RvclNldHVwU2VydmljZS5nZXRBbGwoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiBfdGhpcy5tZXJnZURvY3RvckluZm8oZGF0YS5kYXRhKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZGVwYXJ0bWVudEZvcm1hdHRlZDogZnVuY3Rpb24gZGVwYXJ0bWVudEZvcm1hdHRlZChkYXRhKSB7CiAgICAgIHZhciBzZWxlY3RBbGwgPSB7CiAgICAgICAgdGV4dDogIkFsbCIsCiAgICAgICAgdmFsdWU6ICJBbGwiCiAgICAgIH07CiAgICAgIGRhdGEuc3BsaWNlKDAsIDAsIHNlbGVjdEFsbCk7CiAgICAgIHRoaXMuZGVwYXJ0bWVudExpc3QgPSBkYXRhOwogICAgfSwKICAgIG1lcmdlRG9jdG9ySW5mbzogZnVuY3Rpb24gbWVyZ2VEb2N0b3JJbmZvKGRhdGEpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICB2YXIgb2JqID0gZWxlbWVudDsKICAgICAgICBvYmouZG9jdG9yX2RlZ3JlZSA9ICIiOwogICAgICAgIG9iai5sc3RDb25zdWx0YW50RGVncmVlLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICBvYmouZG9jdG9yX2RlZ3JlZSArPSBlbC5jb25zdWx0YW50X2RlZ3JlZV9uYW1lICsgIi4gIjsKICAgICAgICB9KTsKICAgICAgICBvYmouZG9jdG9yX25hbWUgPSBlbGVtZW50LmRvY19ubyArICIgLSAoIiArIG9iai5kb2N0b3JfZGVncmVlICsgIikgLSAiICsgZWxlbWVudC5kb2N0b3JfbmFtZTsKCiAgICAgICAgX3RoaXMyLmRvY3Rvckxpc3QucHVzaChvYmopOwogICAgICB9KTsKICAgICAgdmFyIHNlbGVjdEFsbCA9IHsKICAgICAgICBkb2N0b3JfaWQ6ICJBbGwiLAogICAgICAgIGRvY3Rvcl9uYW1lOiAiQWxsIiwKICAgICAgICBkZXBhcnRtZW50X2lkOiAiQWxsIgogICAgICB9OwogICAgICBkYXRhLnNwbGljZSgwLCAwLCBzZWxlY3RBbGwpOwogICAgICB0aGlzLmRvY3Rvckxpc3QgPSBkYXRhOwogICAgfSwKICAgIGZpbHRlckRvY3RvcnNEZXBhcnRtZW50V2lzZTogZnVuY3Rpb24gZmlsdGVyRG9jdG9yc0RlcGFydG1lbnRXaXNlKCkgewogICAgICByZXR1cm4gdGhpcy5kb2N0b3JMaXN0LmZpbHRlcihmdW5jdGlvbiAoZWwpIHsKICAgICAgICByZXR1cm4gZWwuZGVwYXJ0bWVudF9pZCA9PT0gdGhpcy5wYXRpZW50SXBkLmRlcGFydG1lbnRfaWQ7CiAgICAgIH0sIHRoaXMpOwogICAgfSwKICAgIHNob3c6IGZ1bmN0aW9uIHNob3coKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5zdWJtaXR0ZWQgPSB0cnVlOwoKICAgICAgaWYgKCF0aGlzLnBhdGllbnRJcGQuY2Rmcm9tZGF0ZSkgewogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIGlmICghdGhpcy5wYXRpZW50SXBkLmNkdG9kYXRlKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucGF0aWVudElwZC5mcm9tZGF0ZSA9IG1vbWVudChTdHJpbmcodGhpcy5wYXRpZW50SXBkLmNkZnJvbWRhdGUpKS5mb3JtYXQoIllZWVktTU0tREQiKTsKICAgICAgICB0aGlzLnBhdGllbnRJcGQudG9kYXRlID0gbW9tZW50KFN0cmluZyh0aGlzLnBhdGllbnRJcGQuY2R0b2RhdGUpKS5mb3JtYXQoIllZWVktTU0tREQiKTsKCiAgICAgICAgaWYgKCF0aGlzLnBhdGllbnRJcGQuZGVwYXJ0bWVudF9pZCkgewogICAgICAgICAgdGhpcy5wYXRpZW50SXBkLmRlcGFydG1lbnRfaWQgPSAiQWxsIjsKICAgICAgICB9CgogICAgICAgIGlmICghdGhpcy5wYXRpZW50SXBkLmRvY3Rvcl9pZCkgewogICAgICAgICAgdGhpcy5wYXRpZW50SXBkLmRvY3Rvcl9pZCA9ICJBbGwiOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMucGF0aWVudElwZC50eXBlID09ICJBbGwiKSB7CiAgICAgICAgICB0aGlzLnBhdGllbnRJcGQuZGVwYXJ0bWVudF9pZCA9ICJBbGwiOwogICAgICAgICAgdGhpcy5wYXRpZW50SXBkLmRvY3Rvcl9pZCA9ICJBbGwiOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5taXNSZXBvcnRTZXJ2aWNlLkdldEFkZG1pc3Npb25JcGRMaXN0KHRoaXMucGF0aWVudElwZC5mcm9tZGF0ZSwgdGhpcy5wYXRpZW50SXBkLnRvZGF0ZSwgdGhpcy5wYXRpZW50SXBkLmRvY3Rvcl9pZCwgdGhpcy5wYXRpZW50SXBkLmRlcGFydG1lbnRfaWQsIHRoaXMucGF0aWVudElwZC5zdGF0dXMsIHRoaXMpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIHJldHVybiBfdGhpczMuY29tbW9uU2VydmljZS5Eb3dubG9hZGZpbGUoZGF0YS5kYXRhKTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLnN1Ym1pdHRlZCA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/reports/IPDPatientReport.js"],"names":["MISReportService","ConsultancyDepartmentSetupService","DoctorSetupService","CommonService","moment","data","departmentList","doctorList","patientIpd","cdfromdate","String","Date","setDate","getDate","format","cdtodate","type","status","department_id","doctor_id","created","misReportService","doctorSetupService","consultancyDepartmentSetupService","commonService","getActiveCombo","then","departmentFormatted","getAll","mergeDoctorInfo","methods","selectAll","text","value","splice","forEach","element","obj","doctor_degree","lstConsultantDegree","el","consultant_degree_name","doctor_name","doc_no","push","filterDoctorsDepartmentWise","filter","show","submitted","fromdate","todate","GetAddmissionIpdList","Downloadfile"],"mappings":"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","sourcesContent":["import MISReportService from \"../../service/report/MISReportService\";\r\nimport ConsultancyDepartmentSetupService from \"../../service/setup/ConsultancyDepartmentSetupService\";\r\nimport DoctorSetupService from \"../../service/setup/DoctorSetupService\";\r\nimport CommonService from \"../../service/CommonService\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            departmentList: [],\r\n            doctorList: [],\r\n            patientIpd: {\r\n                cdfromdate: moment(\r\n                    String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n                ).format(\"MM/DD/YYYY\"),\r\n                cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n                type:\"All\",\r\n                status:\"Admitted\",\r\n                department_id:\"All\",\r\n                doctor_id:\"All\",\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.misReportService = new MISReportService();\r\n        this.doctorSetupService =\r\n            new DoctorSetupService();\r\n        this.consultancyDepartmentSetupService = new ConsultancyDepartmentSetupService();\r\n        this.commonService = new CommonService();\r\n\r\n        this.consultancyDepartmentSetupService\r\n            .getActiveCombo()\r\n            .then((data) => (this.departmentFormatted(data.data)));\r\n            this.doctorSetupService\r\n            .getAll()\r\n            .then((data) => this.mergeDoctorInfo(data.data));\r\n    },\r\n    methods: {\r\n        departmentFormatted(data) {\r\n            var selectAll = {\r\n              text: \"All\",\r\n              value: \"All\",\r\n            }\r\n      \r\n            data.splice(0, 0, selectAll)\r\n            this.departmentList = data;\r\n          },\r\n\r\n        mergeDoctorInfo(data) {\r\n            data.forEach((element) => {\r\n              var obj = element;\r\n              obj.doctor_degree = \"\";\r\n              obj.lstConsultantDegree.forEach((el) => {\r\n                obj.doctor_degree += el.consultant_degree_name + \". \";\r\n              });\r\n      \r\n              obj.doctor_name = element.doc_no + \" - (\" + obj.doctor_degree + \") - \" + element.doctor_name;\r\n              this.doctorList.push(obj);\r\n            });\r\n\r\n            var selectAll = {\r\n                doctor_id: \"All\",\r\n                doctor_name: \"All\",\r\n                department_id: \"All\",\r\n              }\r\n        \r\n              data.splice(0, 0, selectAll)\r\n              this.doctorList = data;\r\n\r\n          },\r\n        filterDoctorsDepartmentWise() {\r\n            return this.doctorList.filter(function (el) {\r\n              return el.department_id === this.patientIpd.department_id;\r\n            }, this);\r\n          },\r\n        show() {\r\n            this.submitted = true;\r\n            if (!this.patientIpd.cdfromdate) {\r\n                return;\r\n            } else if (!this.patientIpd.cdtodate) {\r\n                return;\r\n            } else {\r\n                this.patientIpd.fromdate = moment(\r\n                    String(this.patientIpd.cdfromdate)\r\n                ).format(\"YYYY-MM-DD\");\r\n                this.patientIpd.todate = moment(\r\n                    String(this.patientIpd.cdtodate)\r\n                ).format(\"YYYY-MM-DD\");\r\n\r\n                if (!this.patientIpd.department_id) {\r\n                    this.patientIpd.department_id = \"All\"\r\n                }\r\n                if (!this.patientIpd.doctor_id) {\r\n                    this.patientIpd.doctor_id = \"All\"\r\n                }\r\n                if(this.patientIpd.type==\"All\")\r\n                {\r\n                    this.patientIpd.department_id = \"All\"\r\n                    this.patientIpd.doctor_id = \"All\"\r\n                }\r\n                this.misReportService.GetAddmissionIpdList(this.patientIpd.fromdate, this.patientIpd.todate, this.patientIpd.doctor_id, this.patientIpd.department_id, this.patientIpd.status, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n                this.submitted = false;\r\n            }\r\n        }\r\n    },\r\n};"]}]}