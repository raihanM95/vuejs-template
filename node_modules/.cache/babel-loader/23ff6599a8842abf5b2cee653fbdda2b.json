{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\blood-bank\\BloodReceive.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\blood-bank\\BloodReceive.js","mtime":1676192226666},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\babel.config.js","mtime":1624271518206},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/blood-bank/BloodReceive.js"],"names":["BloodDonorService","BloodReceiveService","CommonService","Validation","moment","FilterMatchMode","FilterOperator","data","isContactExist","isValid","isEmailValid","isExist","bloodGroupList","genderList","componentList","bloodReceiveList","bloodReceive","cdreceive_date","String","Date","format","donor_id","age_year","age_month","age_day","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","submitted","created","bloodDonorService","bloodReceiveService","commonService","validation","GetAllGender","then","GetAllBloodGroup","GetAllBloodComponent","methods","reset","getFormatted","active","cddob","dob","findDonor","contactOrRegNo","getByContactOrRegNo","trim","isExistContact","aPatient","contact_no","match","getContact","add","first_name","gender","blood_group","bag_number","cdexpire_date","component","expire_date","receive_date","currentDate","getFullYear","getMonth","getDate","result","status","$toast","severity","summary","detail","life","res"],"mappings":";;;;;AAAA,OAAOA,iBAAP,MAA8B,4CAA9B;AACA,OAAOC,mBAAP,MAAgC,8CAAhC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,cAAhD;AAGA,eAAe;AACXC,EAAAA,IADW,kBACJ;AACH,WAAO;AACHC,MAAAA,cAAc,EAAE,EADb;AAEHC,MAAAA,OAAO,EAAE,EAFN;AAGHC,MAAAA,YAAY,EAAE,EAHX;AAIHC,MAAAA,OAAO,EAAE,EAJN;AAKHC,MAAAA,cAAc,EAAE,EALb;AAMHC,MAAAA,UAAU,EAAE,EANT;AAOHC,MAAAA,aAAa,EAAE,EAPZ;AASHC,MAAAA,gBAAgB,EAAE,EATf;AAUHC,MAAAA,YAAY,EAAE;AACVC,QAAAA,cAAc,EAAEb,MAAM,CAACc,MAAM,CAAC,IAAIC,IAAJ,EAAD,CAAP,CAAN,CAA2BC,MAA3B,CACZ,YADY,CADN;AAIVC,QAAAA,QAAQ,EAAE,EAJA;AAKVC,QAAAA,QAAQ,EAAE,GALA;AAMVC,QAAAA,SAAS,EAAE,GAND;AAOVC,QAAAA,OAAO,EAAE;AAPC,OAVX;AAmBHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,SAAS,EAAEvB,eAAe,CAACwB;AAA1C,SADH;AAELC,QAAAA,IAAI,EAAE;AAAEH,UAAAA,KAAK,EAAE,IAAT;AAAeC,UAAAA,SAAS,EAAEvB,eAAe,CAAC0B;AAA1C;AAFD,OAnBN;AAuBHC,MAAAA,WAvBG,yBAuBW;AACV,aAAKP,OAAL,GAAe;AACXC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,SAAS,EAAEvB,eAAe,CAACwB;AAA1C,WADG;AAEXC,UAAAA,IAAI,EAAE;AACFG,YAAAA,QAAQ,EAAE3B,cAAc,CAAC4B,GADvB;AAEFC,YAAAA,WAAW,EAAE,CACT;AAAER,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,SAAS,EAAEvB,eAAe,CAAC0B;AAA1C,aADS;AAFX;AAFK,SAAf;AASH,OAjCE;AAkCHK,MAAAA,SAAS,EAAE;AAlCR,KAAP;AAoCH,GAtCU;AAuCXC,EAAAA,OAvCW,qBAuCD;AAAA;;AACN;AAEA,SAAKC,iBAAL,GAAyB,IAAItC,iBAAJ,EAAzB;AACA,SAAKuC,mBAAL,GAA2B,IAAItC,mBAAJ,EAA3B;AACA,SAAKuC,aAAL,GAAqB,IAAItC,aAAJ,EAArB;AACA,SAAKuC,UAAL,GAAkB,IAAItC,UAAJ,EAAlB;AAEA,SAAKqC,aAAL,CACKE,YADL,GAEKC,IAFL,CAEU,UAACpC,IAAD;AAAA,aAAW,KAAI,CAACM,UAAL,GAAkBN,IAAI,CAACA,IAAlC;AAAA,KAFV;AAIA,SAAKiC,aAAL,CACKI,gBADL,GAEKD,IAFL,CAEU,UAACpC,IAAD;AAAA,aAAW,KAAI,CAACK,cAAL,GAAsBL,IAAI,CAACA,IAAtC;AAAA,KAFV;AAIA,SAAKiC,aAAL,CACKK,oBADL,GAEKF,IAFL,CAEU,UAACpC,IAAD;AAAA,aAAW,KAAI,CAACO,aAAL,GAAqBP,IAAI,CAACA,IAArC;AAAA,KAFV;AAGH,GA1DU;AA2DXuC,EAAAA,OAAO,EAAE;AACL;AACA;AACA;AACAC,IAAAA,KAJK,mBAIG;AACJ,WAAKtC,OAAL,GAAe,EAAf;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKH,cAAL,GAAsB,EAAtB;AACA,WAAKQ,YAAL,GAAoB;AAChBC,QAAAA,cAAc,EAAEb,MAAM,CAACc,MAAM,CAAC,IAAIC,IAAJ,EAAD,CAAP,CAAN,CAA2BC,MAA3B,CACZ,YADY,CADA;AAIhBC,QAAAA,QAAQ,EAAE,EAJM;AAKhBC,QAAAA,QAAQ,EAAE,GALM;AAMhBC,QAAAA,SAAS,EAAE,GANK;AAOhBC,QAAAA,OAAO,EAAE;AAPO,OAApB;AASA,WAAKY,SAAL,GAAiB,KAAjB;AACH,KAnBI;AAqBLY,IAAAA,YArBK,wBAqBQzC,IArBR,EAqBc;AACf,WAAKS,YAAL,GAAoBT,IAApB;;AACA,UAAI,CAAC,KAAKS,YAAL,CAAkBK,QAAvB,EAAiC;AAC7B,aAAKV,OAAL,GAAe,kBAAf;AACA,aAAKK,YAAL,GAAoB;AAChBK,UAAAA,QAAQ,EAAE,EADM;AAEhBJ,UAAAA,cAAc,EAAGb,MAAM,CAACc,MAAM,CAAC,IAAIC,IAAJ,EAAD,CAAP,CAAN,CAA2BC,MAA3B,CAAkC,YAAlC;AAFD,SAApB;AAIH,OAND,MAMO;AACH,YAAI,KAAKJ,YAAL,CAAkBiC,MAAtB,EAA8B;AAC1B,eAAKtC,OAAL,GAAe,EAAf;AACA,eAAKK,YAAL,CAAkBkC,KAAlB,GAA0B9C,MAAM,CAC5Bc,MAAM,CAAC,KAAKF,YAAL,CAAkBmC,GAAnB,CADsB,CAAN,CAExB/B,MAFwB,CAEjB,YAFiB,CAA1B;AAGA,eAAKJ,YAAL,CAAkBC,cAAlB,GAAmCb,MAAM,CAACc,MAAM,CAAC,IAAIC,IAAJ,EAAD,CAAP,CAAN,CAA2BC,MAA3B,CAAkC,YAAlC,CAAnC;AACH,SAND,MAMO;AACH,eAAKT,OAAL,GAAe,mBAAf;AACA,eAAKK,YAAL,GAAoB;AAChBK,YAAAA,QAAQ,EAAE;AADM,WAApB;AAGA,eAAKL,YAAL,CAAkBC,cAAlB,GAAmCb,MAAM,CAACc,MAAM,CAAC,IAAIC,IAAJ,EAAD,CAAP,CAAN,CAA2BC,MAA3B,CAAkC,YAAlC,CAAnC;AACH;AAEJ;AACJ,KA7CI;AA8CLgC,IAAAA,SA9CK,uBA8CO;AAAA;;AACR,UAAG,KAAKpC,YAAL,CAAkBqC,cAArB,EAAoC;AAChC,aAAKf,iBAAL,CACCgB,mBADD,CACqB,KAAKtC,YAAL,CAAkBqC,cAAlB,CAAiCE,IAAjC,EADrB,EAC8D,IAD9D,EAECZ,IAFD,CAEM,UAACpC,IAAD;AAAA,iBAAU,MAAI,CAACyC,YAAL,CAAkBzC,IAAI,CAACA,IAAvB,CAAV;AAAA,SAFN;AAGH;AACJ,KApDI;AAqDLiD,IAAAA,cArDK,4BAqDY;AAAA;;AACb,UACI,KAAKxC,YAAL,CAAkByC,QAAlB,CAA2BC,UAA3B,CAAsCC,KAAtC,CAA4C,kBAA5C,CADJ,EAEE;AACE,aAAKrB,iBAAL,CACKgB,mBADL,CACyB,KAAKtC,YAAL,CAAkB0C,UAAlB,CAA6BH,IAA7B,EADzB,EAC8D,IAD9D,EAEKZ,IAFL,CAEU,UAACpC,IAAD;AAAA,iBAAU,MAAI,CAACqD,UAAL,CAAgBrD,IAAI,CAACA,IAArB,CAAV;AAAA,SAFV;AAGH,OAND,MAMO;AACH,aAAKC,cAAL,GACI,iEADJ;AAEH;AACJ,KAhEI;AAiELoD,IAAAA,UAjEK,sBAiEMrD,IAjEN,EAiEY;AACb,UAAIA,IAAI,CAACmD,UAAT,EAAqB;AACjB,aAAKlD,cAAL,GAAsB,yBAAtB;AACH,OAFD,MAEO;AACH,aAAKA,cAAL,GAAsB,EAAtB;AACH;AACJ,KAvEI;AAyECqD,IAAAA,GAzED,iBAyEO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACR;AACA,gBAAA,MAAI,CAACzB,SAAL,GAAiB,IAAjB;AAFQ;;AAAA,oBAIC,MAAI,CAACpB,YAAL,CAAkB8C,UAJnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAMQ,MAAI,CAAC9C,YAAL,CAAkB+C,MAN1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAQQ,MAAI,CAAC/C,YAAL,CAAkBgD,WAR1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAUQ,MAAI,CAAChD,YAAL,CAAkBM,QAV1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAYQ,MAAI,CAACN,YAAL,CAAkBO,SAZ1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAcQ,MAAI,CAACP,YAAL,CAAkBQ,OAd1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAgBQ,MAAI,CAACR,YAAL,CAAkB0C,UAhB1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAkBQ,MAAI,CAAC1C,YAAL,CAAkBiD,UAlB1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAoBQ,MAAI,CAACjD,YAAL,CAAkBK,QApB1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAsBQ,MAAI,CAACL,YAAL,CAAkBkD,aAtB1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAwBQ,MAAI,CAAClD,YAAL,CAAkBC,cAxB1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBA0BQ,MAAI,CAACD,YAAL,CAAkBmD,SA1B1B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,qBA4BO,MAAI,CAAC3D,cA5BZ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AA+BA,gBAAA,MAAI,CAACQ,YAAL,CAAkBoD,WAAlB,GAAgChE,MAAM,CAClCc,MAAM,CAAC,MAAI,CAACF,YAAL,CAAkBkD,aAAnB,CAD4B,CAAN,CAE9B9C,MAF8B,CAEvB,YAFuB,CAAhC;AAIA,gBAAA,MAAI,CAACJ,YAAL,CAAkBqD,YAAlB,GAAiCjE,MAAM,CACnCc,MAAM,CAAC,MAAI,CAACF,YAAL,CAAkBC,cAAnB,CAD6B,CAAN,CAE/BG,MAF+B,CAExB,YAFwB,CAAjC;AAIIkD,gBAAAA,WAvCJ,GAuCkB,IAAInD,IAAJ,EAvClB;AAwCIgC,gBAAAA,GAxCJ,GAwCU,IAAIhC,IAAJ,CAASmD,WAAW,CAACC,WAAZ,KAA4B,MAAI,CAACvD,YAAL,CAAkBM,QAAvD,EAAiEgD,WAAW,CAACE,QAAZ,KAAyB,MAAI,CAACxD,YAAL,CAAkBO,SAA5G,EAAuH+C,WAAW,CAACG,OAAZ,KAAwB,MAAI,CAACzD,YAAL,CAAkBQ,OAAjK,CAxCV;AAyCA,gBAAA,MAAI,CAACR,YAAL,CAAkBmC,GAAlB,GAAwB/C,MAAM,CAC1Bc,MAAM,CAACiC,GAAD,CADoB,CAAN,CAEtB/B,MAFsB,CAEf,YAFe,CAAxB;AAzCA;AAAA,uBA6CmB,MAAI,CAACmB,mBAAL,CAAyBsB,GAAzB,CACf,MAAI,CAAC7C,YADU,EACI,MADJ,CA7CnB;;AAAA;AA6CI0D,gBAAAA,MA7CJ;;AAiDA,oBAAIA,MAAM,CAACC,MAAP,KAAkB,GAAtB,EAA2B;AACvB,kBAAA,MAAI,CAACC,MAAL,CAAYf,GAAZ,CAAgB;AACZgB,oBAAAA,QAAQ,EAAE,SADE;AAEZC,oBAAAA,OAAO,EAAE,SAFG;AAGZC,oBAAAA,MAAM,EAAE,oBAHI;AAIZC,oBAAAA,IAAI,EAAE;AAJM,mBAAhB;;AAOA,kBAAA,MAAI,CAACjC,KAAL,GARuB,CASvB;;AACH,iBAVD,MAUO;AACH,kBAAA,MAAI,CAAC6B,MAAL,CAAYf,GAAZ,CAAgB;AACZgB,oBAAAA,QAAQ,EAAE,OADE;AAEZC,oBAAAA,OAAO,EAAE,QAFG;AAGZC,oBAAAA,MAAM,EAAEL,MAAM,CAACO,GAHH;AAIZD,oBAAAA,IAAI,EAAE;AAJM,mBAAhB;AAMH;;AAlED;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAqEJ,gBAAA,MAAI,CAACJ,MAAL,CAAYf,GAAZ,CAAgB;AACZgB,kBAAAA,QAAQ,EAAE,OADE;AAEZC,kBAAAA,OAAO,EAAE,QAFG;AAGZC,kBAAAA,MAAM,aAHM;AAIZC,kBAAAA,IAAI,EAAE;AAJM,iBAAhB;;AArEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4EX;AArJI;AA3DE,CAAf","sourcesContent":["import BloodDonorService from \"../../service/blood-bank/BloodDonorService\";\r\nimport BloodReceiveService from \"../../service/blood-bank/BloodReceiveService\";\r\n//import PatientReportService from \"../../service/report/PatientReportService\";\r\nimport CommonService from \"../../service/CommonService\";\r\nimport Validation from \"../../scripts/validation\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            isContactExist: \"\",\r\n            isValid: \"\",\r\n            isEmailValid: \"\",\r\n            isExist: \"\",\r\n            bloodGroupList: [],\r\n            genderList: [],\r\n            componentList: [],\r\n\r\n            bloodReceiveList: [],\r\n            bloodReceive: {\r\n                cdreceive_date: moment(String(new Date())).format(\r\n                    \"MM/DD/YYYY\"\r\n                ),\r\n                donor_id: \"\",\r\n                age_year: \"0\",\r\n                age_month: \"0\",\r\n                age_day: \"0\",\r\n            },\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            },\r\n            initFilters() {\r\n                this.filters = {\r\n                    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                    name: {\r\n                        operator: FilterOperator.AND,\r\n                        constraints: [\r\n                            { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n                        ],\r\n                    },\r\n                };\r\n            },\r\n            submitted: false,\r\n        };\r\n    },\r\n    created() {\r\n        //this.minDate = new Date(new Date().setDate(new Date().getDate() + 0));\r\n\r\n        this.bloodDonorService = new BloodDonorService();\r\n        this.bloodReceiveService = new BloodReceiveService();\r\n        this.commonService = new CommonService();\r\n        this.validation = new Validation();\r\n\r\n        this.commonService\r\n            .GetAllGender()\r\n            .then((data) => (this.genderList = data.data));\r\n\r\n        this.commonService\r\n            .GetAllBloodGroup()\r\n            .then((data) => (this.bloodGroupList = data.data));\r\n\r\n        this.commonService\r\n            .GetAllBloodComponent()\r\n            .then((data) => (this.componentList = data.data));\r\n    },\r\n    methods: {\r\n        // printAppointmentToken(appointmentId) {\r\n        //   this.patientReportService.GetAppointmentTokenByAppointmentId(appointmentId, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n        // },\r\n        reset() {\r\n            this.isValid = \"\";\r\n            this.isEmailValid = \"\";\r\n            this.isExist = \"\";\r\n            this.isContactExist = \"\";\r\n            this.bloodReceive = {\r\n                cdreceive_date: moment(String(new Date())).format(\r\n                    \"MM/DD/YYYY\"\r\n                ),\r\n                donor_id: \"\",\r\n                age_year: \"0\",\r\n                age_month: \"0\",\r\n                age_day: \"0\",\r\n            };\r\n            this.submitted = false;\r\n        },\r\n\r\n        getFormatted(data) {\r\n            this.bloodReceive = data;\r\n            if (!this.bloodReceive.donor_id) {\r\n                this.isExist = \"Donor not Exist!\";\r\n                this.bloodReceive = {\r\n                    donor_id: \"\",\r\n                    cdreceive_date:  moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n                };\r\n            } else {\r\n                if (this.bloodReceive.active) {\r\n                    this.isExist = \"\";\r\n                    this.bloodReceive.cddob = moment(\r\n                        String(this.bloodReceive.dob)\r\n                    ).format(\"YYYY-MM-DD\");\r\n                    this.bloodReceive.cdreceive_date = moment(String(new Date())).format(\"MM/DD/YYYY\");\r\n                } else {\r\n                    this.isExist = \"Donor not active!\";\r\n                    this.bloodReceive = {\r\n                        donor_id: \"\",\r\n                    };\r\n                    this.bloodReceive.cdreceive_date = moment(String(new Date())).format(\"MM/DD/YYYY\");\r\n                }\r\n\r\n            }\r\n        },\r\n        findDonor() {\r\n            if(this.bloodReceive.contactOrRegNo){\r\n                this.bloodDonorService\r\n                .getByContactOrRegNo(this.bloodReceive.contactOrRegNo.trim(), this)\r\n                .then((data) => this.getFormatted(data.data));\r\n            }\r\n        },\r\n        isExistContact() {\r\n            if (\r\n                this.bloodReceive.aPatient.contact_no.match(/^(01)([0-9]{9})$/)\r\n            ) {\r\n                this.bloodDonorService\r\n                    .getByContactOrRegNo(this.bloodReceive.contact_no.trim(), this)\r\n                    .then((data) => this.getContact(data.data));\r\n            } else {\r\n                this.isContactExist =\r\n                    \"Contact number must start with 01 and the required length is 11\";\r\n            }\r\n        },\r\n        getContact(data) {\r\n            if (data.contact_no) {\r\n                this.isContactExist = \"Duplicate phone number!\";\r\n            } else {\r\n                this.isContactExist = \"\";\r\n            }\r\n        },\r\n\r\n        async add() {\r\n            //this.checkDrSchedule();\r\n            this.submitted = true;\r\n            try {\r\n                if (!this.bloodReceive.first_name) {\r\n                    return;\r\n                } else if (!this.bloodReceive.gender) {\r\n                    return;\r\n                } else if (!this.bloodReceive.blood_group) {\r\n                    return;\r\n                } else if (!this.bloodReceive.age_year) {\r\n                    return;\r\n                } else if (!this.bloodReceive.age_month) {\r\n                    return;\r\n                } else if (!this.bloodReceive.age_day) {\r\n                    return;\r\n                } else if (!this.bloodReceive.contact_no) {\r\n                    return;\r\n                } else if (!this.bloodReceive.bag_number) {\r\n                    return;\r\n                } else if (!this.bloodReceive.donor_id) {\r\n                    return;\r\n                } else if (!this.bloodReceive.cdexpire_date) {\r\n                    return;\r\n                } else if (!this.bloodReceive.cdreceive_date) {\r\n                    return;\r\n                } else if (!this.bloodReceive.component) {\r\n                    return;\r\n                } else if (this.isContactExist) {\r\n                    return;\r\n                } else {\r\n                    this.bloodReceive.expire_date = moment(\r\n                        String(this.bloodReceive.cdexpire_date)\r\n                    ).format(\"YYYY-MM-DD\");\r\n\r\n                    this.bloodReceive.receive_date = moment(\r\n                        String(this.bloodReceive.cdreceive_date)\r\n                    ).format(\"YYYY-MM-DD\");\r\n\r\n                    var currentDate = new Date();\r\n                    var dob = new Date(currentDate.getFullYear() - this.bloodReceive.age_year, currentDate.getMonth() - this.bloodReceive.age_month, currentDate.getDate() - this.bloodReceive.age_day);\r\n                    this.bloodReceive.dob = moment(\r\n                        String(dob)\r\n                    ).format(\"YYYY-MM-DD\");\r\n\r\n                    let result = await this.bloodReceiveService.add(\r\n                        this.bloodReceive, this\r\n                    );\r\n\r\n                    if (result.status === 200) {\r\n                        this.$toast.add({\r\n                            severity: \"success\",\r\n                            summary: \"Success\",\r\n                            detail: \"Saved Successfully\",\r\n                            life: 10000,\r\n                        });\r\n\r\n                        this.reset();\r\n                        //this.printAppointmentToken(result.data);\r\n                    } else {\r\n                        this.$toast.add({\r\n                            severity: \"error\",\r\n                            summary: \"Failed\",\r\n                            detail: result.res,\r\n                            life: 10000,\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.$toast.add({\r\n                    severity: \"error\",\r\n                    summary: \"Failed\",\r\n                    detail: error,\r\n                    life: 10000,\r\n                });\r\n            }\r\n        },\r\n\r\n    },\r\n};"]}]}