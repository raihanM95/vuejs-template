{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\setup\\TestParameterList.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\setup\\TestParameterList.js","mtime":1657099881081},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFRlc3RQYXJhbWV0ZXJTZXR1cFNlcnZpY2UgZnJvbSAiLi4vLi4vc2VydmljZS9zZXR1cC9UZXN0UGFyYW1ldGVyU2V0dXBTZXJ2aWNlIjsKaW1wb3J0IERpYWdub3Npc1JlcG9ydFNlcnZpY2UgZnJvbSAiLi4vLi4vc2VydmljZS9yZXBvcnQvRGlhZ25vc2lzUmVwb3J0U2VydmljZSI7CmltcG9ydCBWYWxpZGF0aW9uIGZyb20gIi4uLy4uL3NjcmlwdHMvdmFsaWRhdGlvbiI7CmltcG9ydCB7IEZpbHRlck1hdGNoTW9kZSwgRmlsdGVyT3BlcmF0b3IgfSBmcm9tICJwcmltZXZ1ZS9hcGkiOwppbXBvcnQgQ29tbW9uU2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL0NvbW1vblNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5ld0luZm86IGZhbHNlLAogICAgICBkYXRhTGlzdDogdHJ1ZSwKICAgICAgaW52ZXN0aWdhdGlvbkFuZE1hY2hpbmVMaXN0OiBbXSwKICAgICAgdGVzdFBhcmFtZXRlckxpc3Q6IFtdLAogICAgICB0ZXN0UGFyYW1ldGVyU2V0dXA6IHt9LAogICAgICBmaWx0ZXJzOiB7CiAgICAgICAgZ2xvYmFsOiB7CiAgICAgICAgICB2YWx1ZTogbnVsbCwKICAgICAgICAgIG1hdGNoTW9kZTogRmlsdGVyTWF0Y2hNb2RlLkNPTlRBSU5TCiAgICAgICAgfSwKICAgICAgICBuYW1lOiB7CiAgICAgICAgICB2YWx1ZTogbnVsbCwKICAgICAgICAgIG1hdGNoTW9kZTogRmlsdGVyTWF0Y2hNb2RlLlNUQVJUU19XSVRICiAgICAgICAgfQogICAgICB9LAogICAgICBpbml0RmlsdGVyczogZnVuY3Rpb24gaW5pdEZpbHRlcnMoKSB7CiAgICAgICAgdGhpcy5maWx0ZXJzID0gewogICAgICAgICAgZ2xvYmFsOiB7CiAgICAgICAgICAgIHZhbHVlOiBudWxsLAogICAgICAgICAgICBtYXRjaE1vZGU6IEZpbHRlck1hdGNoTW9kZS5DT05UQUlOUwogICAgICAgICAgfSwKICAgICAgICAgIG5hbWU6IHsKICAgICAgICAgICAgb3BlcmF0b3I6IEZpbHRlck9wZXJhdG9yLkFORCwKICAgICAgICAgICAgY29uc3RyYWludHM6IFt7CiAgICAgICAgICAgICAgdmFsdWU6IG51bGwsCiAgICAgICAgICAgICAgbWF0Y2hNb2RlOiBGaWx0ZXJNYXRjaE1vZGUuU1RBUlRTX1dJVEgKICAgICAgICAgICAgfV0KICAgICAgICAgIH0KICAgICAgICB9OwogICAgICB9LAogICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICB0ZXN0UGFyYW1ldGVyc0RpYWxvZzogZmFsc2UKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnRlc3RQYXJhbWV0ZXJTZXR1cFNlcnZpY2UgPSBuZXcgVGVzdFBhcmFtZXRlclNldHVwU2VydmljZSgpOwogICAgdGhpcy5kaWFnbm9zaXNSZXBvcnRTZXJ2aWNlID0gbmV3IERpYWdub3Npc1JlcG9ydFNlcnZpY2UoKTsKICAgIHRoaXMuY29tbW9uU2VydmljZSA9IG5ldyBDb21tb25TZXJ2aWNlKCk7CiAgICB0aGlzLnZhbGlkYXRpb24gPSBuZXcgVmFsaWRhdGlvbigpOwogICAgdGhpcy50ZXN0UGFyYW1ldGVyU2V0dXBTZXJ2aWNlLmdldEludmVzdGlnYXRpb25BbmRNYWNoaW5lTGlzdEZyb21UZXN0UGFyYW1ldGVyKCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXR1cm4gX3RoaXMuaW52ZXN0aWdhdGlvbkFuZE1hY2hpbmVMaXN0ID0gZGF0YS5kYXRhOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBwcmludFRlc3RQYXJhbWV0ZXJzRGV0YWlsc0xpc3Q6IGZ1bmN0aW9uIHByaW50VGVzdFBhcmFtZXRlcnNEZXRhaWxzTGlzdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmRpYWdub3Npc1JlcG9ydFNlcnZpY2UuR2V0VGVzdFBhcmFtZXRlcnNEZXRhaWxzTGlzdCh0aGlzKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5jb21tb25TZXJ2aWNlLkRvd25sb2FkZmlsZShkYXRhLmRhdGEpOwogICAgICB9KTsKICAgIH0sCiAgICBvcGVuTmV3OiBmdW5jdGlvbiBvcGVuTmV3KCkgewogICAgICB0aGlzLnRlc3RQYXJhbWV0ZXJTZXR1cCA9IHt9OwogICAgICB0aGlzLm5ld0luZm8gPSB0cnVlOwogICAgICB0aGlzLmRhdGFMaXN0ID0gZmFsc2U7CiAgICAgIHRoaXMuc3VibWl0dGVkID0gZmFsc2U7CiAgICB9LAogICAgaGlkZU5ldzogZnVuY3Rpb24gaGlkZU5ldygpIHsKICAgICAgdGhpcy50ZXN0UGFyYW1ldGVyU2V0dXAgPSB7fTsKICAgICAgdGhpcy5kYXRhTGlzdCA9IHRydWU7CiAgICAgIHRoaXMubmV3SW5mbyA9IGZhbHNlOwogICAgICB0aGlzLnN1Ym1pdHRlZCA9IGZhbHNlOwogICAgfSwKICAgIGdldFRlc3RQYXJhbWV0ZXJzOiBmdW5jdGlvbiBnZXRUZXN0UGFyYW1ldGVycyhkYXRhKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy50ZXN0UGFyYW1ldGVyU2V0dXBTZXJ2aWNlLmdldEJ5SW52ZXN0aWdhdGlvbklkQW5kTWFjaGluZUlkKGRhdGEuaW52ZXN0aWdhdGlvbl9pZCwgZGF0YS5tYWNoaW5lX2lkKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMy5mb3JtYXR0ZWRUZXN0UGFyYW1ldGVycyhkYXRhLmRhdGEpOwogICAgICB9KTsKICAgIH0sCiAgICBmb3JtYXR0ZWRUZXN0UGFyYW1ldGVyczogZnVuY3Rpb24gZm9ybWF0dGVkVGVzdFBhcmFtZXRlcnMoZGF0YSkgewogICAgICB0aGlzLnRlc3RQYXJhbWV0ZXJMaXN0ID0gZGF0YTsKICAgICAgdGhpcy50ZXN0UGFyYW1ldGVyc0RpYWxvZyA9IHRydWU7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/setup/TestParameterList.js"],"names":["TestParameterSetupService","DiagnosisReportService","Validation","FilterMatchMode","FilterOperator","CommonService","data","newInfo","dataList","investigationAndMachineList","testParameterList","testParameterSetup","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","submitted","testParametersDialog","created","testParameterSetupService","diagnosisReportService","commonService","validation","getInvestigationAndMachineListFromTestParameter","then","methods","printTestParametersDetailsList","GetTestParametersDetailsList","Downloadfile","openNew","hideNew","getTestParameters","getByInvestigationIdAndMachineId","investigation_id","machine_id","formattedTestParameters"],"mappings":"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","sourcesContent":["import TestParameterSetupService from \"../../service/setup/TestParameterSetupService\";\r\nimport DiagnosisReportService from \"../../service/report/DiagnosisReportService\";\r\nimport Validation from \"../../scripts/validation\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\nimport CommonService from \"../../service/CommonService\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            newInfo: false,\r\n            dataList: true,\r\n            investigationAndMachineList: [],\r\n            testParameterList: [],\r\n            testParameterSetup: {},\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            },\r\n            initFilters() {\r\n                this.filters = {\r\n                    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                    name: {\r\n                        operator: FilterOperator.AND,\r\n                        constraints: [\r\n                            { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n                        ],\r\n                    },\r\n                };\r\n            },\r\n            submitted: false,\r\n            testParametersDialog: false,\r\n        };\r\n    },\r\n    created() {\r\n        this.testParameterSetupService = new TestParameterSetupService();\r\n        this.diagnosisReportService = new DiagnosisReportService();\r\n        this.commonService = new CommonService();\r\n        this.validation = new Validation();\r\n\r\n        this.testParameterSetupService.getInvestigationAndMachineListFromTestParameter().then((data) => (this.investigationAndMachineList = data.data));\r\n    },\r\n    methods: {\r\n        printTestParametersDetailsList() {\r\n            this.diagnosisReportService.GetTestParametersDetailsList(this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n        },\r\n        openNew() {\r\n            this.testParameterSetup = {};\r\n            this.newInfo = true;\r\n            this.dataList = false;\r\n            this.submitted = false;\r\n        },\r\n        hideNew() {\r\n            this.testParameterSetup = {};\r\n            this.dataList = true;\r\n            this.newInfo = false;\r\n            this.submitted = false;\r\n        },\r\n        getTestParameters(data){\r\n            this.testParameterSetupService.getByInvestigationIdAndMachineId(data.investigation_id, data.machine_id).then((data) => this.formattedTestParameters(data.data));\r\n        },\r\n        formattedTestParameters(data){\r\n            this.testParameterList = data;\r\n            this.testParametersDialog = true;\r\n        }\r\n    },\r\n};"]}]}