{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationSampleDiagnosis.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationSampleDiagnosis.js","mtime":1640498582584},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/collection-zone/InvestigationSampleDiagnosis.js"],"names":["CommonService","TestParameterSetupService","InvestigationSampleDiagnosisService","moment","FilterMatchMode","FilterOperator","InvestigationMachineSetupService","data","dataList","testParameterList","tempTestParameterList","isRadiology","investigationSampleDiagnosisList","diagnosisInvestigationStatusList","investigationMachineList","tempInvestigationMachineList","investigationSampleDiagnosis","cdfromdate","String","Date","format","cdtodate","investigation_status","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","testParameterSetupService","investigationSampleDiagnosisService","commonService","investigationMachineSetupService","GetDiagnosisInvestigationStatus","then","getAll","formatMachineList","show","methods","reset","fromdate","todate","getDynamic","resultSubmitConfirm","$confirm","require","message","header","icon","accept","resultSubmit","reject","resultEditConfirm","sendToVerifyConfirm","sendToVerify","findBarcode","aDiagnosis","filter","el","barcode_or_level","barcode","_investigation_request_no","result","filterData","active","forEach","element","obj","machine_name","model","push","resultData","current_sample_collection_id","sample_collection_id","getById","investigation_id","getResultFormatted","parameterList","machine_id_list","map","item","machine_id","index","self","indexOf","aMachine","_investigation_category_head_name","actual_result_value","normal_value","diagnosisName","_investingation_name","patientName","aPatient","first_name","last_name","patientContact","contact_no","patientRegistration","registration_no","machineWiseParameterList","resultEdit","getDiagnosisResultById","getParameterFormatted","result_entry_note","cancel","requred","$toast","add","severity","summary","detail","life","saveDiagnosisResult","status","res","sendResultToVerify","formatDate"],"mappings":"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","sourcesContent":["import CommonService from \"../../service/CommonService\";\r\nimport TestParameterSetupService from \"../../service/setup/TestParameterSetupService\";\r\nimport InvestigationSampleDiagnosisService from \"../../service/collection-zone/InvestigationSampleDiagnosisService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\nimport InvestigationMachineSetupService from \"../../service/setup/InvestigationMachineSetupService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataList: true,\r\n      testParameterList: [],\r\n      tempTestParameterList: [],\r\n      isRadiology: false,\r\n      investigationSampleDiagnosisList: [],\r\n      diagnosisInvestigationStatusList: [],\r\n      investigationMachineList: [],\r\n      tempInvestigationMachineList: [],\r\n      investigationSampleDiagnosis: {\r\n        // cdfromdate: moment(\r\n        //   String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n        // ).format(\"MM/DD/YYYY\"),\r\n        cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        investigation_status: \"Waiting for Result\",\r\n      },\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.testParameterSetupService = new TestParameterSetupService();\r\n    this.investigationSampleDiagnosisService =\r\n      new InvestigationSampleDiagnosisService();\r\n    this.commonService = new CommonService();\r\n    this.investigationMachineSetupService = new InvestigationMachineSetupService();\r\n\r\n    this.commonService\r\n      .GetDiagnosisInvestigationStatus()\r\n      .then((data) => (this.diagnosisInvestigationStatusList = data.data));\r\n\r\n    this.investigationMachineSetupService.getAll().then((data) => this.formatMachineList(data.data));\r\n\r\n    this.show();\r\n  },\r\n  methods: {\r\n    reset() {\r\n      // this.investigationSampleDiagnosis = {\r\n      //   cdfromdate: moment(\r\n      //     String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n      //   ).format(\"MM/DD/YYYY\"),\r\n      //   cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n      //   investigation_status: \"Waiting for Result\",\r\n      // };\r\n      this.dataList = true;\r\n      this.submitted = false;\r\n\r\n      this.show();\r\n    },\r\n    show() {\r\n      this.submitted = true;\r\n      if (!this.investigationSampleDiagnosis.cdfromdate) {\r\n        return;\r\n      } else if (!this.investigationSampleDiagnosis.cdtodate) {\r\n        return;\r\n      } else if (!this.investigationSampleDiagnosis.investigation_status) {\r\n        return;\r\n      } else {\r\n        this.investigationSampleDiagnosis.fromdate = moment(\r\n          String(this.investigationSampleDiagnosis.cdfromdate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationSampleDiagnosis.todate = moment(\r\n          String(this.investigationSampleDiagnosis.cdtodate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationSampleDiagnosisService\r\n          .getDynamic(\r\n            this.investigationSampleDiagnosis.fromdate,\r\n            this.investigationSampleDiagnosis.todate,\r\n            this.investigationSampleDiagnosis.investigation_status\r\n          )\r\n          .then((data) => (this.investigationSampleDiagnosisList = data.data));\r\n      }\r\n\r\n      this.submitted = true;\r\n    },\r\n    resultSubmitConfirm() {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure submit result?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.resultSubmit();\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    resultEditConfirm() {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure edit result?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.resultSubmit();\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    sendToVerifyConfirm(data) {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure send to verify?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.sendToVerify(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    findBarcode() {\r\n      var aDiagnosis = this.investigationSampleDiagnosisList.filter(function (el) {\r\n        return el.barcode_or_level == this.investigationSampleDiagnosis.barcode || el._investigation_request_no == this.investigationSampleDiagnosis.barcode;\r\n      }, this)[0];\r\n      if (aDiagnosis) {\r\n        this.result(aDiagnosis);\r\n      }\r\n    },\r\n    formatMachineList(data) {\r\n      let filterData = data.filter(function (el) {\r\n        return el.active == true;\r\n      }, this);\r\n      filterData.forEach((element) => {\r\n        var obj = element;\r\n        obj.machine_name = element.model + \"-\" + element.machine_name;\r\n        this.tempInvestigationMachineList.push(obj);\r\n      });\r\n    },\r\n    result(resultData) {\r\n      this.current_sample_collection_id = resultData.sample_collection_id;\r\n      this.testParameterSetupService\r\n        .getById(resultData.investigation_id)\r\n        .then((data) => this.getResultFormatted(data.data, resultData));\r\n    },\r\n    getResultFormatted(parameterList, data) {\r\n      var machine_id_list = parameterList.map(item => item.machine_id)\r\n        .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n      this.investigationMachineList = [];\r\n      machine_id_list.forEach(element => {\r\n        var aMachine = this.tempInvestigationMachineList.filter(function (el) {\r\n          return el.machine_id == element;\r\n        }, this);\r\n        this.investigationMachineList.push(aMachine[0]);\r\n      });\r\n\r\n      if (data._investigation_category_head_name == \"Radiology\") {\r\n        this.tempTestParameterList = parameterList;\r\n        parameterList.forEach(element => {\r\n          element.actual_result_value = element.normal_value;\r\n        });\r\n        this.isRadiology = true;\r\n      } else {\r\n        this.tempTestParameterList = parameterList;\r\n        this.isRadiology = false;\r\n      }\r\n      this.diagnosisName = data._investingation_name;\r\n      this.patientName = data.aPatient.first_name + \" \" + data.aPatient.last_name;\r\n      this.patientContact = data.aPatient.contact_no;\r\n      this.patientRegistration = data.aPatient.registration_no;\r\n      this.dataList = false;\r\n      this.testParameterList = [];\r\n    },\r\n    machineWiseParameterList() {\r\n      this.testParameterList = this.tempTestParameterList.filter(function (el) {\r\n        return el.machine_id == this.investigationSampleDiagnosis.machine_id;\r\n      }, this);\r\n      //this.dataList = false;\r\n    },\r\n    resultEdit(data) {\r\n      this.investigationSampleDiagnosisService\r\n        .getDiagnosisResultById(data.sample_collection_id)\r\n        .then((data) => this.getParameterFormatted(data));\r\n      this.diagnosisName = data._investingation_name;\r\n      this.patientName = data.aPatient.first_name + data.aPatient.last_name;\r\n      this.patientContact = data.aPatient.contact_no;\r\n      this.patientRegistration = data.aPatient.registration_no;\r\n    },\r\n    getParameterFormatted(data) {\r\n      var parameterList = data.data;\r\n      var machine_id_list = parameterList.map(item => item.machine_id)\r\n        .filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n      this.investigationMachineList = [];\r\n      machine_id_list.forEach(element => {\r\n        var aMachine = this.tempInvestigationMachineList.filter(function (el) {\r\n          return el.machine_id == element;\r\n        }, this);\r\n        this.investigationMachineList.push(aMachine[0]);\r\n      });\r\n\r\n      this.tempTestParameterList = data.data;\r\n      //this.testParameterList = data.data;\r\n      this.investigationSampleDiagnosis.result_entry_note =\r\n        data.data[0].result_entry_note;\r\n\r\n      this.dataList = false;\r\n      this.testParameterList = [];\r\n    },\r\n    cancel() {\r\n      this.submitted = false;\r\n      this.dataList = true;\r\n    },\r\n    async resultSubmit() {\r\n      this.submitted = true;\r\n      if (this.current_sample_collection_id) {\r\n        this.testParameterList.forEach((element) => {\r\n          element.sample_collection_id = this.current_sample_collection_id;\r\n        });\r\n      }\r\n      this.requred = \"\";\r\n      this.testParameterList.forEach((element) => {\r\n        element.result_entry_note =\r\n          this.investigationSampleDiagnosis.result_entry_note;\r\n        if (!element.actual_result_value) {\r\n          this.requred = \"required\";\r\n        }\r\n      });\r\n\r\n      if (this.requred) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Required\",\r\n          detail: \"Please fill in the required fields\",\r\n          life: 10000,\r\n        });\r\n        return;\r\n      } else {\r\n        let result =\r\n          await this.investigationSampleDiagnosisService.saveDiagnosisResult(\r\n            this.testParameterList, this\r\n          );\r\n        if (result.status === 200) {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Successfully Saved\",\r\n            life: 10000,\r\n          });\r\n          this.reset();\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async sendToVerify(data) {\r\n      let result =\r\n        await this.investigationSampleDiagnosisService.sendResultToVerify(\r\n          data.sample_collection_id, this\r\n        );\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Send to Verify\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}