{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\collection-zone\\PendingSampleCollection.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\collection-zone\\PendingSampleCollection.js","mtime":1683093142632},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\babel.config.js","mtime":1624271518206},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkY6L1NWTiBQUk9KRUNUUy9FUlBfSG9zcGl0YWxfQ2xpZW50L3RydW5rL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0IENvbW1vblNlcnZpY2UgZnJvbSAiLi4vLi4vc2VydmljZS9Db21tb25TZXJ2aWNlIjsKaW1wb3J0IFBlbmRpbmdTYW1wbGVDb2xsZWN0aW9uU2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL2NvbGxlY3Rpb24tem9uZS9QZW5kaW5nU2FtcGxlQ29sbGVjdGlvblNlcnZpY2UiOwppbXBvcnQgRGlhZ25vc2lzUmVwb3J0U2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL3JlcG9ydC9EaWFnbm9zaXNSZXBvcnRTZXJ2aWNlIjsKaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwppbXBvcnQgeyBGaWx0ZXJNYXRjaE1vZGUsIEZpbHRlck9wZXJhdG9yIH0gZnJvbSAicHJpbWV2dWUvYXBpIjsKaW1wb3J0IEdsb2JhbFNldHRpbmdzU2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL3NlY3VyaXR5L0dsb2JhbFNldHRpbmdzU2VydmljZSI7CmltcG9ydCBFbXBsb3llZVNldHVwU2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL3NldHVwL0VtcGxveWVlU2V0dXBTZXJ2aWNlIjsKaW1wb3J0IERvY3RvclNldHVwU2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL3NldHVwL0RvY3RvclNldHVwU2VydmljZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YUxpc3Q6IGZhbHNlLAogICAgICBwZW5kaW5nU2FtcGxlQ29sbGVjdGlvbkxpc3Q6IFtdLAogICAgICBpbnZlc3RpZ2F0aW9uU3RhdHVzTGlzdDogW10sCiAgICAgIHBlbmRpbmdTYW1wbGVDb2xsZWN0aW9uOiB7CiAgICAgICAgLy8gY2Rmcm9tZGF0ZTogbW9tZW50KAogICAgICAgIC8vICAgU3RyaW5nKG5ldyBEYXRlKG5ldyBEYXRlKCkuc2V0RGF0ZShuZXcgRGF0ZSgpLmdldERhdGUoKSAtIDcpKSkKICAgICAgICAvLyApLmZvcm1hdCgiTU0vREQvWVlZWSIpLAogICAgICAgIGNkZnJvbWRhdGU6IG1vbWVudChTdHJpbmcobmV3IERhdGUoKSkpLmZvcm1hdCgiTU0vREQvWVlZWSIpLAogICAgICAgIGNkdG9kYXRlOiBtb21lbnQoU3RyaW5nKG5ldyBEYXRlKCkpKS5mb3JtYXQoIk1NL0REL1lZWVkiKSwKICAgICAgICBpbnZlc3RpZ2F0aW9uX3N0YXR1czogIldhaXRpbmcgRm9yIFNhbXBsZSIKICAgICAgfSwKICAgICAgc3VibWl0dGVkOiBmYWxzZSwKICAgICAgZmlsdGVyczogewogICAgICAgIGdsb2JhbDogewogICAgICAgICAgdmFsdWU6IG51bGwsCiAgICAgICAgICBtYXRjaE1vZGU6IEZpbHRlck1hdGNoTW9kZS5DT05UQUlOUwogICAgICAgIH0sCiAgICAgICAgbmFtZTogewogICAgICAgICAgdmFsdWU6IG51bGwsCiAgICAgICAgICBtYXRjaE1vZGU6IEZpbHRlck1hdGNoTW9kZS5TVEFSVFNfV0lUSAogICAgICAgIH0KICAgICAgfSwKICAgICAgaW5pdEZpbHRlcnM6IGZ1bmN0aW9uIGluaXRGaWx0ZXJzKCkgewogICAgICAgIHRoaXMuZmlsdGVycyA9IHsKICAgICAgICAgIGdsb2JhbDogewogICAgICAgICAgICB2YWx1ZTogbnVsbCwKICAgICAgICAgICAgbWF0Y2hNb2RlOiBGaWx0ZXJNYXRjaE1vZGUuQ09OVEFJTlMKICAgICAgICAgIH0sCiAgICAgICAgICBuYW1lOiB7CiAgICAgICAgICAgIG9wZXJhdG9yOiBGaWx0ZXJPcGVyYXRvci5BTkQsCiAgICAgICAgICAgIGNvbnN0cmFpbnRzOiBbewogICAgICAgICAgICAgIHZhbHVlOiBudWxsLAogICAgICAgICAgICAgIG1hdGNoTW9kZTogRmlsdGVyTWF0Y2hNb2RlLlNUQVJUU19XSVRICiAgICAgICAgICAgIH1dCiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgfSwKICAgICAgZ2xvYmFsU2V0dGluZzoge30sCiAgICAgIGFwcHJvdmFsQXNzaWduRGlhbG9nOiBmYWxzZSwKICAgICAgYXNzaWduQnlMaXN0OiBbXSwKICAgICAgc2FtcGxlQ29sbGVjdGlvbk9iajoge30KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnBlbmRpbmdTYW1wbGVDb2xsZWN0aW9uU2VydmljZSA9IG5ldyBQZW5kaW5nU2FtcGxlQ29sbGVjdGlvblNlcnZpY2UoKTsKICAgIHRoaXMuZGlhZ25vc2lzUmVwb3J0U2VydmljZSA9IG5ldyBEaWFnbm9zaXNSZXBvcnRTZXJ2aWNlKCk7CiAgICB0aGlzLmNvbW1vblNlcnZpY2UgPSBuZXcgQ29tbW9uU2VydmljZSgpOwogICAgdGhpcy5nbG9iYWxTZXR0aW5nc1NlcnZpY2UgPSBuZXcgR2xvYmFsU2V0dGluZ3NTZXJ2aWNlKCk7CiAgICB0aGlzLmVtcGxveWVlU2V0dXBTZXJ2aWNlID0gbmV3IEVtcGxveWVlU2V0dXBTZXJ2aWNlKCk7CiAgICB0aGlzLmRvY3RvclNldHVwU2VydmljZSA9IG5ldyBEb2N0b3JTZXR1cFNlcnZpY2UoKTsKICAgIHRoaXMuY29tbW9uU2VydmljZS5HZXRBbGxJbnZlc3RpZ2F0aW9uU3RhdHVzKCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXR1cm4gX3RoaXMuaW52ZXN0aWdhdGlvblN0YXR1c0xpc3QgPSBkYXRhLmRhdGE7CiAgICB9KTsKICAgIHRoaXMuc2hvdygpOwogICAgdGhpcy5nbG9iYWxTZXR0aW5nc1NlcnZpY2UuZ2V0QnlTZXR0aW5nTmFtZSgiTElNUyBSZXN1bHQgQXBwcm92YWwiKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiBfdGhpcy5nbG9iYWxTZXR0aW5nID0gZGF0YS5kYXRhOwogICAgfSk7CiAgICB0aGlzLmRvY3RvclNldHVwU2VydmljZS5nZXRBbGwoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiBfdGhpcy5tZXJnZURvY3RvckluZm8oZGF0YS5kYXRhKTsKICAgIH0pOwogICAgdGhpcy5lbXBsb3llZVNldHVwU2VydmljZS5nZXRBbGwoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiBfdGhpcy5tZXJnZUVtcGxveWVlSW5mbyhkYXRhLmRhdGEpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIC8vIHRoaXMucGVuZGluZ1NhbXBsZUNvbGxlY3Rpb24gPSB7CiAgICAgIC8vICAgY2Rmcm9tZGF0ZTogbW9tZW50KAogICAgICAvLyAgICAgU3RyaW5nKG5ldyBEYXRlKG5ldyBEYXRlKCkuc2V0RGF0ZShuZXcgRGF0ZSgpLmdldERhdGUoKSAtIDcpKSkKICAgICAgLy8gICApLmZvcm1hdCgiTU0vREQvWVlZWSIpLAogICAgICAvLyAgIGNkdG9kYXRlOiBtb21lbnQoU3RyaW5nKG5ldyBEYXRlKCkpKS5mb3JtYXQoIk1NL0REL1lZWVkiKSwKICAgICAgLy8gICBpbnZlc3RpZ2F0aW9uX3N0YXR1czogIldhaXRpbmcgRm9yIFNhbXBsZSIsCiAgICAgIC8vIH07CiAgICAgIHRoaXMuZGF0YUxpc3QgPSBmYWxzZTsKICAgICAgdGhpcy5zdWJtaXR0ZWQgPSBmYWxzZTsKICAgICAgdGhpcy5zaG93KCk7CiAgICAgIHRoaXMuc2FtcGxlQ29sbGVjdGlvbk9iaiA9IHt9OwogICAgfSwKICAgIHNob3c6IGZ1bmN0aW9uIHNob3coKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5zdWJtaXR0ZWQgPSB0cnVlOwoKICAgICAgaWYgKCF0aGlzLnBlbmRpbmdTYW1wbGVDb2xsZWN0aW9uLmNkZnJvbWRhdGUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gZWxzZSBpZiAoIXRoaXMucGVuZGluZ1NhbXBsZUNvbGxlY3Rpb24uY2R0b2RhdGUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gZWxzZSBpZiAoIXRoaXMucGVuZGluZ1NhbXBsZUNvbGxlY3Rpb24uaW52ZXN0aWdhdGlvbl9zdGF0dXMpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wZW5kaW5nU2FtcGxlQ29sbGVjdGlvbi5mcm9tZGF0ZSA9IG1vbWVudChTdHJpbmcodGhpcy5wZW5kaW5nU2FtcGxlQ29sbGVjdGlvbi5jZGZyb21kYXRlKSkuZm9ybWF0KCJZWVlZLU1NLUREIik7CiAgICAgICAgdGhpcy5wZW5kaW5nU2FtcGxlQ29sbGVjdGlvbi50b2RhdGUgPSBtb21lbnQoU3RyaW5nKHRoaXMucGVuZGluZ1NhbXBsZUNvbGxlY3Rpb24uY2R0b2RhdGUpKS5mb3JtYXQoIllZWVktTU0tREQiKTsKICAgICAgICB0aGlzLnBlbmRpbmdTYW1wbGVDb2xsZWN0aW9uU2VydmljZS5nZXREeW5hbWljKHRoaXMucGVuZGluZ1NhbXBsZUNvbGxlY3Rpb24uZnJvbWRhdGUsIHRoaXMucGVuZGluZ1NhbXBsZUNvbGxlY3Rpb24udG9kYXRlLCB0aGlzLnBlbmRpbmdTYW1wbGVDb2xsZWN0aW9uLmludmVzdGlnYXRpb25fc3RhdHVzKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMyLnBlbmRpbmdTYW1wbGVDb2xsZWN0aW9uTGlzdCA9IGRhdGEuZGF0YTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdGhpcy5kYXRhTGlzdCA9IHRydWU7CiAgICAgIHRoaXMuc3VibWl0dGVkID0gdHJ1ZTsKICAgIH0sCiAgICAvLyBnZXRCYXJjb2RlSW1hZ2UoYkNvZGUsIGRhdGEpIHsKICAgIC8vICAgLy8gdmFyIHByaW50Q29udGVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicHJpbnRhYmxlQXJlYSIpLmlubmVySFRNTDsKICAgIC8vICAgLy92YXIgYSA9IHdpbmRvdy5vcGVuKCcnLCAnJywgJ2hlaWdodD01MDAsIHdpZHRoPTUwMCcpOwogICAgLy8gICB2YXIgbmFtZSA9IGRhdGEuYVBhdGllbnQuZmlyc3RfbmFtZSArIGRhdGEuYVBhdGllbnQubGFzdF9uYW1lOwogICAgLy8gICB2YXIgcmVnX25vID0gZGF0YS5hUGF0aWVudC5yZWdpc3RyYXRpb25fbm87CiAgICAvLyAgIHZhciBiYXJjb2RlID0gZGF0YS5iYXJjb2RlX29yX2xldmVsOwogICAgLy8gICB2YXIgYmFyY29kZUltZyA9ICJkYXRhOmltYWdlL3BuZztiYXNlNjQsIiArIGJDb2RlLmRhdGE7CiAgICAvLyAgIHZhciBhID0gd2luZG93Lm9wZW4oIiIsICIiLCAiIik7CiAgICAvLyAgIGEuZG9jdW1lbnQud3JpdGUoIjxodG1sPjxib2R5PiIpOwogICAgLy8gICBhLmRvY3VtZW50LndyaXRlKCI8aDQ+IiArIG5hbWUgKyAiOyBSZWcgTm86ICIgKyByZWdfbm8gKyAiPGg0PiIpOwogICAgLy8gICBhLmRvY3VtZW50LndyaXRlKAogICAgLy8gICAgICI8aW1nIHNyYz0nIiArCiAgICAvLyAgICAgICBiYXJjb2RlSW1nICsKICAgIC8vICAgICAgICInLz48ZmlnY2FwdGlvbj4iICsKICAgIC8vICAgICAgIGJhcmNvZGUgKwogICAgLy8gICAgICAgIjwvZmlnY2FwdGlvbj4iCiAgICAvLyAgICk7CiAgICAvLyAgIC8vYS5kb2N1bWVudC53cml0ZShwcmludENvbnRlbnRzKTsKICAgIC8vICAgYS5kb2N1bWVudC53cml0ZSgiPC9ib2R5PjwvaHRtbD4iKTsKICAgIC8vICAgYS5kb2N1bWVudC5jbG9zZSgpOwogICAgLy8gICBhLnByaW50KCk7CiAgICAvLyAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgLy8gfSwKICAgIHByaW50OiBmdW5jdGlvbiBwcmludChpbmZvKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5kaWFnbm9zaXNSZXBvcnRTZXJ2aWNlLkdldEJhcmNvZGVMYWJlbChpbmZvLmJhcmNvZGVfb3JfbGV2ZWwsIHRoaXMpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmNvbW1vblNlcnZpY2UuRG93bmxvYWRmaWxlKGRhdGEuZGF0YSk7CiAgICAgIH0pOyAvLyB0aGlzLmNvbW1vblNlcnZpY2UKICAgICAgLy8gICAuR2V0QmFyY29kZUltYWdlKGluZm8uYmFyY29kZV9vcl9sZXZlbCkKICAgICAgLy8gICAudGhlbigoZGF0YSkgPT4gdGhpcy5nZXRCYXJjb2RlSW1hZ2UoZGF0YSwgaW5mbykpOwogICAgfSwKICAgIHNhbXBsZUNvbmZpcm06IGZ1bmN0aW9uIHNhbXBsZUNvbmZpcm0oZGF0YSkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHRoaXMuJGNvbmZpcm0ucmVxdWlyZSh7CiAgICAgICAgbWVzc2FnZTogIkFyZSB5b3Ugd2FudCB0byBzdXJlIHNhbXBsZSBjb2xsZWN0ZWQ/IiwKICAgICAgICBoZWFkZXI6ICJDb25maXJtYXRpb24iLAogICAgICAgIGljb246ICJwaSBwaS1leGNsYW1hdGlvbi10cmlhbmdsZSIsCiAgICAgICAgYWNjZXB0OiBmdW5jdGlvbiBhY2NlcHQoKSB7CiAgICAgICAgICBfdGhpczQuc2FtcGxlKGRhdGEpOwogICAgICAgIH0sCiAgICAgICAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3QoKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBkaWFnbm9zaXNDb25maXJtOiBmdW5jdGlvbiBkaWFnbm9zaXNDb25maXJtKGRhdGEpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICBpZiAodGhpcy5nbG9iYWxTZXR0aW5nLnNldHRpbmdfdmFsdWUgPT0gIk1hbnVhbCIpIHsKICAgICAgICB0aGlzLmFwcHJvdmFsQXNzaWduKGRhdGEpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGNvbmZpcm0ucmVxdWlyZSh7CiAgICAgICAgICBtZXNzYWdlOiAiQXJlIHlvdSB3YW50IHRvIHN1cmUgc2VuZCB0byBkaWFnbm9zaXM/IiwKICAgICAgICAgIGhlYWRlcjogIkNvbmZpcm1hdGlvbiIsCiAgICAgICAgICBpY29uOiAicGkgcGktZXhjbGFtYXRpb24tdHJpYW5nbGUiLAogICAgICAgICAgYWNjZXB0OiBmdW5jdGlvbiBhY2NlcHQoKSB7CiAgICAgICAgICAgIF90aGlzNS5kaWFnbm9zaXMoZGF0YSk7CiAgICAgICAgICB9LAogICAgICAgICAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3QoKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGhpZGVEaWFsb2c6IGZ1bmN0aW9uIGhpZGVEaWFsb2coKSB7CiAgICAgIHRoaXMuYXBwcm92YWxBc3NpZ25EaWFsb2cgPSBmYWxzZTsKICAgIH0sCiAgICBhcHByb3ZhbEFzc2lnbjogZnVuY3Rpb24gYXBwcm92YWxBc3NpZ24oZGF0YSkgewogICAgICB0aGlzLnNhbXBsZUNvbGxlY3Rpb25PYmogPSBkYXRhOwogICAgICB0aGlzLmFwcHJvdmFsQXNzaWduRGlhbG9nID0gdHJ1ZTsKICAgIH0sCiAgICBhZGRBcHByb3ZhbEFzc2lnbjogZnVuY3Rpb24gYWRkQXBwcm92YWxBc3NpZ24oKSB7CiAgICAgIHRoaXMuZGlhZ25vc2lzKHRoaXMuc2FtcGxlQ29sbGVjdGlvbk9iaik7CiAgICAgIHRoaXMuaGlkZURpYWxvZygpOwogICAgfSwKICAgIG1lcmdlRG9jdG9ySW5mbzogZnVuY3Rpb24gbWVyZ2VEb2N0b3JJbmZvKGRhdGEpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICB2YXIgb2JqID0gZWxlbWVudDsKICAgICAgICBvYmouZG9jdG9yX2RlZ3JlZSA9ICIiOwogICAgICAgIG9iai5sc3RDb25zdWx0YW50RGVncmVlLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICBvYmouZG9jdG9yX2RlZ3JlZSArPSBlbC5jb25zdWx0YW50X2RlZ3JlZV9uYW1lICsgIi4gIjsKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXM2LmFzc2lnbkJ5TGlzdC5wdXNoKHsKICAgICAgICAgIGVtYWlsOiBlbGVtZW50LmVtYWlsLAogICAgICAgICAgdGV4dDogZWxlbWVudC5kb2Nfbm8gKyAiIC0gKCIgKyBvYmouZG9jdG9yX2RlZ3JlZSArICIpIC0gIiArIGVsZW1lbnQuZG9jdG9yX25hbWUgKyAiIChEb2N0b3IpIgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBtZXJnZUVtcGxveWVlSW5mbzogZnVuY3Rpb24gbWVyZ2VFbXBsb3llZUluZm8oZGF0YSkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHZhciBmaWx0ZXJEYXRhID0gZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgcmV0dXJuIGVsLmFjdGl2ZSA9PSB0cnVlOwogICAgICB9LCB0aGlzKTsKICAgICAgZmlsdGVyRGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgdmFyIG9iaiA9IGVsZW1lbnQ7CiAgICAgICAgb2JqLmVtcGxveWVlX2RlZ3JlZSA9ICIiOwogICAgICAgIG9iai5sc3REZWdyZWUuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHsKICAgICAgICAgIG9iai5lbXBsb3llZV9kZWdyZWUgKz0gZWwuY29uc3VsdGFudF9kZWdyZWVfbmFtZSArICIuICI7CiAgICAgICAgfSk7CgogICAgICAgIF90aGlzNy5hc3NpZ25CeUxpc3QucHVzaCh7CiAgICAgICAgICBlbWFpbDogZWxlbWVudC5lbWFpbCwKICAgICAgICAgIHRleHQ6IGVsZW1lbnQuZW1wX25vICsgIiAtICgiICsgb2JqLmVtcGxveWVlX2RlZ3JlZSArICIpIC0gIiArIGVsZW1lbnQuZmlyc3RfbmFtZSArICIgIiArIGVsZW1lbnQubGFzdF9uYW1lICsgIiAoRW1wbG95ZWUpIgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBzYW1wbGU6IGZ1bmN0aW9uIHNhbXBsZShkYXRhKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzdWx0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzOC5wZW5kaW5nU2FtcGxlQ29sbGVjdGlvblNlcnZpY2Uuc2F2ZVNhbXBsZUNvbGxlY3Rpb24oZGF0YSwgX3RoaXM4KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzOC4kdG9hc3QuYWRkKHsKICAgICAgICAgICAgICAgICAgICBzZXZlcml0eTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICAgIHN1bW1hcnk6ICJTdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgICBkZXRhaWw6ICJTdWNjZXNzZnVsbHkgU2F2ZWQiLAogICAgICAgICAgICAgICAgICAgIGxpZmU6IDEwMDAwCiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgX3RoaXM4LnJlc2V0KCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBfdGhpczguJHRvYXN0LmFkZCh7CiAgICAgICAgICAgICAgICAgICAgc2V2ZXJpdHk6ICJlcnJvciIsCiAgICAgICAgICAgICAgICAgICAgc3VtbWFyeTogIkZhaWxlZCIsCiAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiByZXN1bHQucmVzLAogICAgICAgICAgICAgICAgICAgIGxpZmU6IDEwMDAwCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGlhZ25vc2lzOiBmdW5jdGlvbiBkaWFnbm9zaXMoZGF0YSkgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXN1bHQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczkucGVuZGluZ1NhbXBsZUNvbGxlY3Rpb25TZXJ2aWNlLnNlbmRUb0RpYWdub3NpcyhkYXRhLCBfdGhpczkpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzOS4kdG9hc3QuYWRkKHsKICAgICAgICAgICAgICAgICAgICBzZXZlcml0eTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICAgIHN1bW1hcnk6ICJTdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgICBkZXRhaWw6ICJTZW5kIHRvIERpYWdub3NpcyIsCiAgICAgICAgICAgICAgICAgICAgbGlmZTogMTAwMDAKICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICBfdGhpczkucmVzZXQoKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzOS4kdG9hc3QuYWRkKHsKICAgICAgICAgICAgICAgICAgICBzZXZlcml0eTogImVycm9yIiwKICAgICAgICAgICAgICAgICAgICBzdW1tYXJ5OiAiRmFpbGVkIiwKICAgICAgICAgICAgICAgICAgICBkZXRhaWw6IHJlc3VsdC5yZXMsCiAgICAgICAgICAgICAgICAgICAgbGlmZTogMTAwMDAKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUodmFsdWUpIHsKICAgICAgcmV0dXJuIG1vbWVudChTdHJpbmcodmFsdWUpKS5mb3JtYXQoIk1NL0REL1lZWVkgaDptbTpzcyBhIik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/collection-zone/PendingSampleCollection.js"],"names":["CommonService","PendingSampleCollectionService","DiagnosisReportService","moment","FilterMatchMode","FilterOperator","GlobalSettingsService","EmployeeSetupService","DoctorSetupService","data","dataList","pendingSampleCollectionList","investigationStatusList","pendingSampleCollection","cdfromdate","String","Date","format","cdtodate","investigation_status","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","globalSetting","approvalAssignDialog","assignByList","sampleCollectionObj","created","pendingSampleCollectionService","diagnosisReportService","commonService","globalSettingsService","employeeSetupService","doctorSetupService","GetAllInvestigationStatus","then","show","getBySettingName","getAll","mergeDoctorInfo","mergeEmployeeInfo","methods","reset","fromdate","todate","getDynamic","print","info","GetBarcodeLabel","barcode_or_level","Downloadfile","sampleConfirm","$confirm","require","message","header","icon","accept","sample","reject","diagnosisConfirm","setting_value","approvalAssign","diagnosis","hideDialog","addApprovalAssign","forEach","element","obj","doctor_degree","lstConsultantDegree","el","consultant_degree_name","push","email","text","doc_no","doctor_name","filterData","filter","active","employee_degree","lstDegree","emp_no","first_name","last_name","saveSampleCollection","result","status","$toast","add","severity","summary","detail","life","res","sendToDiagnosis","formatDate"],"mappings":"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","sourcesContent":["import CommonService from \"../../service/CommonService\";\r\nimport PendingSampleCollectionService from \"../../service/collection-zone/PendingSampleCollectionService\";\r\nimport DiagnosisReportService from \"../../service/report/DiagnosisReportService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\nimport GlobalSettingsService from \"../../service/security/GlobalSettingsService\";\r\nimport EmployeeSetupService from \"../../service/setup/EmployeeSetupService\";\r\nimport DoctorSetupService from \"../../service/setup/DoctorSetupService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataList: false,\r\n      pendingSampleCollectionList: [],\r\n      investigationStatusList: [],\r\n      pendingSampleCollection: {\r\n        // cdfromdate: moment(\r\n        //   String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n        // ).format(\"MM/DD/YYYY\"),\r\n        cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        investigation_status: \"Waiting For Sample\",\r\n      },\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n      globalSetting: {},\r\n      approvalAssignDialog: false,\r\n      assignByList: [],\r\n      sampleCollectionObj: {},\r\n    };\r\n  },\r\n  created() {\r\n    this.pendingSampleCollectionService = new PendingSampleCollectionService();\r\n    this.diagnosisReportService = new DiagnosisReportService();\r\n    this.commonService = new CommonService();\r\n    this.globalSettingsService = new GlobalSettingsService();\r\n    this.employeeSetupService = new EmployeeSetupService();\r\n    this.doctorSetupService = new DoctorSetupService();\r\n\r\n    this.commonService\r\n      .GetAllInvestigationStatus()\r\n      .then((data) => (this.investigationStatusList = data.data));\r\n\r\n    this.show();\r\n\r\n    this.globalSettingsService\r\n      .getBySettingName(\"LIMS Result Approval\")\r\n      .then((data) => (this.globalSetting = data.data));\r\n\r\n    this.doctorSetupService\r\n      .getAll()\r\n      .then((data) => this.mergeDoctorInfo(data.data));\r\n\r\n    this.employeeSetupService\r\n      .getAll()\r\n      .then((data) => this.mergeEmployeeInfo(data.data));\r\n  },\r\n  methods: {\r\n    reset() {\r\n      // this.pendingSampleCollection = {\r\n      //   cdfromdate: moment(\r\n      //     String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n      //   ).format(\"MM/DD/YYYY\"),\r\n      //   cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n      //   investigation_status: \"Waiting For Sample\",\r\n      // };\r\n      this.dataList = false;\r\n      this.submitted = false;\r\n      this.show();\r\n      this.sampleCollectionObj = {};\r\n    },\r\n    show() {\r\n      this.submitted = true;\r\n      if (!this.pendingSampleCollection.cdfromdate) {\r\n        return;\r\n      } else if (!this.pendingSampleCollection.cdtodate) {\r\n        return;\r\n      } else if (!this.pendingSampleCollection.investigation_status) {\r\n        return;\r\n      } else {\r\n        this.pendingSampleCollection.fromdate = moment(\r\n          String(this.pendingSampleCollection.cdfromdate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.pendingSampleCollection.todate = moment(\r\n          String(this.pendingSampleCollection.cdtodate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.pendingSampleCollectionService\r\n          .getDynamic(\r\n            this.pendingSampleCollection.fromdate,\r\n            this.pendingSampleCollection.todate,\r\n            this.pendingSampleCollection.investigation_status\r\n          )\r\n          .then((data) => (this.pendingSampleCollectionList = data.data));\r\n      }\r\n      this.dataList = true;\r\n      this.submitted = true;\r\n    },\r\n    // getBarcodeImage(bCode, data) {\r\n    //   // var printContents = document.getElementById(\"printableArea\").innerHTML;\r\n    //   //var a = window.open('', '', 'height=500, width=500');\r\n    //   var name = data.aPatient.first_name + data.aPatient.last_name;\r\n    //   var reg_no = data.aPatient.registration_no;\r\n    //   var barcode = data.barcode_or_level;\r\n    //   var barcodeImg = \"data:image/png;base64,\" + bCode.data;\r\n    //   var a = window.open(\"\", \"\", \"\");\r\n    //   a.document.write(\"<html><body>\");\r\n    //   a.document.write(\"<h4>\" + name + \"; Reg No: \" + reg_no + \"<h4>\");\r\n    //   a.document.write(\r\n    //     \"<img src='\" +\r\n    //       barcodeImg +\r\n    //       \"'/><figcaption>\" +\r\n    //       barcode +\r\n    //       \"</figcaption>\"\r\n    //   );\r\n    //   //a.document.write(printContents);\r\n    //   a.document.write(\"</body></html>\");\r\n    //   a.document.close();\r\n    //   a.print();\r\n    //   location.reload();\r\n    // },\r\n    print(info) {\r\n      this.diagnosisReportService.GetBarcodeLabel(info.barcode_or_level, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n\r\n      // this.commonService\r\n      //   .GetBarcodeImage(info.barcode_or_level)\r\n      //   .then((data) => this.getBarcodeImage(data, info));\r\n    },\r\n    sampleConfirm(data) {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure sample collected?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.sample(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    diagnosisConfirm(data) {\r\n      if (this.globalSetting.setting_value == \"Manual\") {\r\n        this.approvalAssign(data);\r\n      } else {\r\n        this.$confirm.require({\r\n          message: \"Are you want to sure send to diagnosis?\",\r\n          header: \"Confirmation\",\r\n          icon: \"pi pi-exclamation-triangle\",\r\n          accept: () => {\r\n            this.diagnosis(data);\r\n          },\r\n          reject: () => {\r\n            return;\r\n          },\r\n        });\r\n      }\r\n    },\r\n    hideDialog() {\r\n      this.approvalAssignDialog = false;\r\n    },\r\n    approvalAssign(data) {\r\n      this.sampleCollectionObj = data;\r\n      this.approvalAssignDialog = true;\r\n    },\r\n    addApprovalAssign() {\r\n      this.diagnosis(this.sampleCollectionObj);\r\n      this.hideDialog();\r\n    },\r\n    mergeDoctorInfo(data) {\r\n      data.forEach((element) => {\r\n        var obj = element;\r\n        obj.doctor_degree = \"\";\r\n        obj.lstConsultantDegree.forEach((el) => {\r\n          obj.doctor_degree += el.consultant_degree_name + \". \";\r\n        });\r\n\r\n        this.assignByList.push({\r\n          email: element.email,\r\n          text: element.doc_no + \" - (\" + obj.doctor_degree + \") - \" + element.doctor_name + \" (Doctor)\",\r\n        });\r\n      });\r\n    },\r\n    mergeEmployeeInfo(data) {\r\n      let filterData = data.filter(function (el) {\r\n        return el.active == true;\r\n      }, this);\r\n      filterData.forEach((element) => {\r\n        var obj = element;\r\n        obj.employee_degree = \"\";\r\n        obj.lstDegree.forEach((el) => {\r\n          obj.employee_degree += el.consultant_degree_name + \". \";\r\n        });\r\n\r\n        this.assignByList.push({\r\n          email: element.email,\r\n          text: element.emp_no + \" - (\" + obj.employee_degree + \") - \" + element.first_name + \" \" + element.last_name + \" (Employee)\",\r\n        });\r\n      });\r\n    },\r\n    async sample(data) {\r\n      let result =\r\n        await this.pendingSampleCollectionService.saveSampleCollection(data, this);\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Successfully Saved\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    async diagnosis(data) {\r\n      let result = await this.pendingSampleCollectionService.sendToDiagnosis(\r\n        data, this\r\n      );\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Send to Diagnosis\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}