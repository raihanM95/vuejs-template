{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\AdmittedPatientDischarge.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\AdmittedPatientDischarge.js","mtime":1659416140489},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEFkbWlzc2lvblNlcnZpY2UgZnJvbSAiLi4vLi4vc2VydmljZS9mcm9udC1kZXNrL0FkbWlzc2lvblNlcnZpY2UiOwppbXBvcnQgSVBEUmVwb3J0U2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL3JlcG9ydC9JUERSZXBvcnRTZXJ2aWNlIjsKaW1wb3J0IENvbW1vblNlcnZpY2UgZnJvbSAiLi4vLi4vc2VydmljZS9Db21tb25TZXJ2aWNlIjsKaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwppbXBvcnQgeyBGaWx0ZXJNYXRjaE1vZGUsIEZpbHRlck9wZXJhdG9yIH0gZnJvbSAicHJpbWV2dWUvYXBpIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhTGlzdDogdHJ1ZSwKICAgICAgaXNOdXJzZTogZmFsc2UsCiAgICAgIGFkbWl0dGVkUGF0aWVudExpc3Q6IFtdLAogICAgICBhZG1pdHRlZFBhdGllbnQ6IHsKICAgICAgICAvLyBjZGZyb21kYXRlOiBtb21lbnQoCiAgICAgICAgLy8gICAgIFN0cmluZyhuZXcgRGF0ZShuZXcgRGF0ZSgpLnNldERhdGUobmV3IERhdGUoKS5nZXREYXRlKCkgLSA4NjApKSkKICAgICAgICAvLyApLmZvcm1hdCgiTU0vREQvWVlZWSIpLAogICAgICAgIGNkZnJvbWRhdGU6IG1vbWVudChTdHJpbmcobmV3IERhdGUoKSkpLmZvcm1hdCgiTU0vREQvWVlZWSIpLAogICAgICAgIGNkdG9kYXRlOiBtb21lbnQoU3RyaW5nKG5ldyBEYXRlKCkpKS5mb3JtYXQoIk1NL0REL1lZWVkiKSAvLyBjZHRvZGF0ZTogbW9tZW50KAogICAgICAgIC8vICAgICBTdHJpbmcobmV3IERhdGUobmV3IERhdGUoKS5zZXREYXRlKG5ldyBEYXRlKCkuZ2V0RGF0ZSgpICsgNykpKQogICAgICAgIC8vICkuZm9ybWF0KCJNTS9ERC9ZWVlZIiksCgogICAgICB9LAogICAgICAvLwogICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICBmaWx0ZXJzOiB7CiAgICAgICAgZ2xvYmFsOiB7CiAgICAgICAgICB2YWx1ZTogbnVsbCwKICAgICAgICAgIG1hdGNoTW9kZTogRmlsdGVyTWF0Y2hNb2RlLkNPTlRBSU5TCiAgICAgICAgfSwKICAgICAgICBuYW1lOiB7CiAgICAgICAgICB2YWx1ZTogbnVsbCwKICAgICAgICAgIG1hdGNoTW9kZTogRmlsdGVyTWF0Y2hNb2RlLlNUQVJUU19XSVRICiAgICAgICAgfQogICAgICB9LAogICAgICBpbml0RmlsdGVyczogZnVuY3Rpb24gaW5pdEZpbHRlcnMoKSB7CiAgICAgICAgdGhpcy5maWx0ZXJzID0gewogICAgICAgICAgZ2xvYmFsOiB7CiAgICAgICAgICAgIHZhbHVlOiBudWxsLAogICAgICAgICAgICBtYXRjaE1vZGU6IEZpbHRlck1hdGNoTW9kZS5DT05UQUlOUwogICAgICAgICAgfSwKICAgICAgICAgIG5hbWU6IHsKICAgICAgICAgICAgb3BlcmF0b3I6IEZpbHRlck9wZXJhdG9yLkFORCwKICAgICAgICAgICAgY29uc3RyYWludHM6IFt7CiAgICAgICAgICAgICAgdmFsdWU6IG51bGwsCiAgICAgICAgICAgICAgbWF0Y2hNb2RlOiBGaWx0ZXJNYXRjaE1vZGUuU1RBUlRTX1dJVEgKICAgICAgICAgICAgfV0KICAgICAgICAgIH0KICAgICAgICB9OwogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuYWRtaXNzaW9uU2VydmljZSA9IG5ldyBBZG1pc3Npb25TZXJ2aWNlKCk7CiAgICB0aGlzLmlQRFJlcG9ydFNlcnZpY2UgPSBuZXcgSVBEUmVwb3J0U2VydmljZSgpOwogICAgdGhpcy5jb21tb25TZXJ2aWNlID0gbmV3IENvbW1vblNlcnZpY2UoKTsKICAgIHRoaXMudXNlckluZm8gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VySW5mbyIpKTsKICAgIHRoaXMuc2hvdygpOwoKICAgIGlmICh0aGlzLnVzZXJJbmZvLm51cnNlX2lkKSB7CiAgICAgIHRoaXMuaXNOdXJzZSA9IHRydWU7CiAgICB9IGVsc2UgaWYgKCF0aGlzLnVzZXJJbmZvLm51cnNlX2lkKSB7CiAgICAgIHRoaXMuaXNOdXJzZSA9IGZhbHNlOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2hvdzogZnVuY3Rpb24gc2hvdygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuc3VibWl0dGVkID0gdHJ1ZTsKCiAgICAgIGlmICghdGhpcy5hZG1pdHRlZFBhdGllbnQuY2Rmcm9tZGF0ZSkgewogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIGlmICghdGhpcy5hZG1pdHRlZFBhdGllbnQuY2R0b2RhdGUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5hZG1pdHRlZFBhdGllbnQuZnJvbWRhdGUgPSBtb21lbnQoU3RyaW5nKHRoaXMuYWRtaXR0ZWRQYXRpZW50LmNkZnJvbWRhdGUpKS5mb3JtYXQoIllZWVktTU0tREQiKTsKICAgICAgICB0aGlzLmFkbWl0dGVkUGF0aWVudC50b2RhdGUgPSBtb21lbnQoU3RyaW5nKHRoaXMuYWRtaXR0ZWRQYXRpZW50LmNkdG9kYXRlKSkuZm9ybWF0KCJZWVlZLU1NLUREIik7CiAgICAgICAgdGhpcy51c2VySW5mbyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJJbmZvIikpOwogICAgICAgIHRoaXMuYWRtaXNzaW9uU2VydmljZS5kaXNjaGFyZ2VkUGF0aWVudExpc3RGb3JIaXN0b3J5QnlOdXJzZUlkKHRoaXMuYWRtaXR0ZWRQYXRpZW50LmZyb21kYXRlLCB0aGlzLmFkbWl0dGVkUGF0aWVudC50b2RhdGUsIHRoaXMudXNlckluZm8ubnVyc2VfaWQpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIHJldHVybiBfdGhpcy5hZG1pdHRlZFBhdGllbnRMaXN0ID0gZGF0YS5kYXRhOwogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aGlzLmRhdGFMaXN0ID0gdHJ1ZTsKICAgICAgdGhpcy5zdWJtaXR0ZWQgPSB0cnVlOwogICAgfSwKICAgIGRpc2NoYXJnZVN1bW1hcnk6IGZ1bmN0aW9uIGRpc2NoYXJnZVN1bW1hcnkoZGF0YSkgewogICAgICBpZiAoZGF0YS5kdWVfYW1vdW50ID4gMCkgewogICAgICAgIHRoaXMuJHRvYXN0LmFkZCh7CiAgICAgICAgICBzZXZlcml0eTogImVycm9yIiwKICAgICAgICAgIHN1bW1hcnk6ICJDYW5ub3QgZGlzY2hhcmdlISIsCiAgICAgICAgICBkZXRhaWw6ICJZb3VyIGR1ZSBhbW91bnQgIiArIGRhdGEuZHVlX2Ftb3VudCArICIgVEsiLAogICAgICAgICAgbGlmZTogMTAwMDAKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnByaW50RGlzY2hhcmdlU3VtbWFyeShkYXRhLmFkbWlzc2lvbl9pZCk7CiAgICAgIH0KICAgIH0sCiAgICBkaXNjaGFyZ2VDZXJ0aWZpY2F0ZTogZnVuY3Rpb24gZGlzY2hhcmdlQ2VydGlmaWNhdGUoZGF0YSkgewogICAgICBpZiAoZGF0YS5kdWVfYW1vdW50ID4gMCkgewogICAgICAgIHRoaXMuJHRvYXN0LmFkZCh7CiAgICAgICAgICBzZXZlcml0eTogImVycm9yIiwKICAgICAgICAgIHN1bW1hcnk6ICJDYW5ub3QgZGlzY2hhcmdlISIsCiAgICAgICAgICBkZXRhaWw6ICJZb3VyIGR1ZSBhbW91bnQgIiArIGRhdGEuZHVlX2Ftb3VudCArICIgVEsiLAogICAgICAgICAgbGlmZTogMTAwMDAKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnByaW50RGlzY2hhcmdlQ2VydGlmaWNhdGUoZGF0YS5hZG1pc3Npb25faWQpOwogICAgICB9CiAgICB9LAogICAgcHJpbnREaXNjaGFyZ2VTdW1tYXJ5OiBmdW5jdGlvbiBwcmludERpc2NoYXJnZVN1bW1hcnkoaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmlQRFJlcG9ydFNlcnZpY2UuR2V0RGlzY2hhcmdlTm90ZUFuZFByZXNjcmlwdGlvbihpZCwgdGhpcykudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBfdGhpczIuY29tbW9uU2VydmljZS5Eb3dubG9hZGZpbGUoZGF0YS5kYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgcHJpbnREaXNjaGFyZ2VDZXJ0aWZpY2F0ZTogZnVuY3Rpb24gcHJpbnREaXNjaGFyZ2VDZXJ0aWZpY2F0ZShpZCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuaVBEUmVwb3J0U2VydmljZS5HZXREaXNjaGFyZ2VDZXJ0aWZpY2F0ZShpZCwgdGhpcykudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBfdGhpczMuY29tbW9uU2VydmljZS5Eb3dubG9hZGZpbGUoZGF0YS5kYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24gZm9ybWF0RGF0ZSh2YWx1ZSkgewogICAgICByZXR1cm4gbW9tZW50KFN0cmluZyh2YWx1ZSkpLmZvcm1hdCgiTU0vREQvWVlZWSIpOwogICAgfSwKICAgIGZvcm1hdERhdGVUaW1lOiBmdW5jdGlvbiBmb3JtYXREYXRlVGltZSh2YWx1ZSkgewogICAgICByZXR1cm4gbW9tZW50KFN0cmluZyh2YWx1ZSkpLmZvcm1hdCgiTU0vREQvWVlZWSBoOm1tOnNzIGEiKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/nurse-panel/AdmittedPatientDischarge.js"],"names":["AdmissionService","IPDReportService","CommonService","moment","FilterMatchMode","FilterOperator","data","dataList","isNurse","admittedPatientList","admittedPatient","cdfromdate","String","Date","format","cdtodate","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","admissionService","iPDReportService","commonService","userInfo","JSON","parse","localStorage","getItem","show","nurse_id","methods","fromdate","todate","dischargedPatientListForHistoryByNurseId","then","dischargeSummary","due_amount","$toast","add","severity","summary","detail","life","printDischargeSummary","admission_id","dischargeCertificate","printDischargeCertificate","id","GetDischargeNoteAndPrescription","Downloadfile","GetDischargeCertificate","formatDate","formatDateTime"],"mappings":"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","sourcesContent":["import AdmissionService from \"../../service/front-desk/AdmissionService\";\r\nimport IPDReportService from \"../../service/report/IPDReportService\";\r\nimport CommonService from \"../../service/CommonService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            dataList: true,\r\n            isNurse: false,\r\n            admittedPatientList: [],\r\n            admittedPatient: {\r\n                // cdfromdate: moment(\r\n                //     String(new Date(new Date().setDate(new Date().getDate() - 860)))\r\n                // ).format(\"MM/DD/YYYY\"),\r\n                cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n                cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n                // cdtodate: moment(\r\n                //     String(new Date(new Date().setDate(new Date().getDate() + 7)))\r\n                // ).format(\"MM/DD/YYYY\"),\r\n            },\r\n            //\r\n\r\n            submitted: false,\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            },\r\n            initFilters() {\r\n                this.filters = {\r\n                    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                    name: {\r\n                        operator: FilterOperator.AND,\r\n                        constraints: [\r\n                            { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n                        ],\r\n                    },\r\n                };\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.admissionService = new AdmissionService();\r\n        this.iPDReportService = new IPDReportService();\r\n        this.commonService = new CommonService();\r\n\r\n        this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        this.show();\r\n\r\n        if (this.userInfo.nurse_id) {\r\n            this.isNurse = true;\r\n        } else if (!this.userInfo.nurse_id) {\r\n            this.isNurse = false;\r\n        }\r\n    },\r\n    methods: {\r\n        show() {\r\n            this.submitted = true;\r\n            if (!this.admittedPatient.cdfromdate) {\r\n                return;\r\n            } else if (!this.admittedPatient.cdtodate) {\r\n                return;\r\n            } else {\r\n                this.admittedPatient.fromdate = moment(\r\n                    String(this.admittedPatient.cdfromdate)\r\n                ).format(\"YYYY-MM-DD\");\r\n                this.admittedPatient.todate = moment(\r\n                    String(this.admittedPatient.cdtodate)\r\n                ).format(\"YYYY-MM-DD\");\r\n                this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n                this.admissionService\r\n                    .dischargedPatientListForHistoryByNurseId(this.admittedPatient.fromdate, this.admittedPatient.todate, this.userInfo.nurse_id)\r\n                    .then((data) => (this.admittedPatientList = data.data));\r\n            }\r\n            this.dataList = true;\r\n            this.submitted = true;\r\n        },\r\n        dischargeSummary(data) {\r\n            if (data.due_amount > 0) {\r\n                this.$toast.add({\r\n                    severity: \"error\",\r\n                    summary: \"Cannot discharge!\",\r\n                    detail: \"Your due amount \" + data.due_amount + \" TK\",\r\n                    life: 10000,\r\n                });\r\n            } else {\r\n                this.printDischargeSummary(data.admission_id);\r\n            }\r\n        },\r\n        dischargeCertificate(data){\r\n            if (data.due_amount > 0) {\r\n                this.$toast.add({\r\n                    severity: \"error\",\r\n                    summary: \"Cannot discharge!\",\r\n                    detail: \"Your due amount \" + data.due_amount + \" TK\",\r\n                    life: 10000,\r\n                });\r\n            } else {\r\n                this.printDischargeCertificate(data.admission_id);\r\n            }\r\n        },\r\n        printDischargeSummary(id) {\r\n            this.iPDReportService.GetDischargeNoteAndPrescription(id, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n        },\r\n        printDischargeCertificate(id) {\r\n            this.iPDReportService.GetDischargeCertificate(id, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n        },\r\n        formatDate(value) {\r\n            return moment(String(value)).format(\"MM/DD/YYYY\");\r\n        },\r\n        formatDateTime(value) {\r\n            return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n        }\r\n    },\r\n};"]}]}