{"remainingRequest":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationSampleDiagnosis.js","dependencies":[{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationSampleDiagnosis.js","mtime":1635850838709},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/DiagnosticCenterManagement_Client/trunk/src/scripts/collection-zone/InvestigationSampleDiagnosis.js"],"names":["CommonService","TestParameterSetupService","InvestigationSampleDiagnosisService","moment","FilterMatchMode","FilterOperator","data","dataList","testParameterList","investigationSampleDiagnosisList","diagnosisInvestigationStatusList","investigationSampleDiagnosis","cdfromdate","String","Date","setDate","getDate","format","cdtodate","investigation_status","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","testParameterSetupService","investigationSampleDiagnosisService","commonService","GetDiagnosisInvestigationStatus","then","show","methods","reset","fromdate","todate","getDynamic","resultSubmitConfirm","$confirm","require","message","header","icon","accept","resultSubmit","reject","resultEditConfirm","sendToVerifyConfirm","sendToVerify","findBarcode","aDiagnosis","filter","el","barcode_or_level","barcode","console","log","result","current_sample_collection_id","sample_collection_id","getById","investigation_id","diagnosisName","_investingation_name","patientName","aPatient","first_name","last_name","patientContact","contact_no","patientRegistration","registration_no","resultEdit","getDiagnosisResultById","getParameterFormatted","result_entry_note","cancel","forEach","element","requred","actual_result_value","$toast","add","severity","summary","detail","life","saveDiagnosisResult","status","res","sendResultToVerify","formatDate"],"mappings":"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","sourcesContent":["import CommonService from \"../../service/CommonService\";\r\nimport TestParameterSetupService from \"../../service/setup/TestParameterSetupService\";\r\nimport InvestigationSampleDiagnosisService from \"../../service/collection-zone/InvestigationSampleDiagnosisService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataList: true,\r\n      testParameterList: [],\r\n      investigationSampleDiagnosisList: [],\r\n      diagnosisInvestigationStatusList: [],\r\n      investigationSampleDiagnosis: {\r\n        cdfromdate: moment(\r\n          String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n        ).format(\"MM/DD/YYYY\"),\r\n        cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        investigation_status: \"Waiting for Result\",\r\n      },\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.testParameterSetupService = new TestParameterSetupService();\r\n    this.investigationSampleDiagnosisService =\r\n      new InvestigationSampleDiagnosisService();\r\n    this.commonService = new CommonService();\r\n\r\n    this.commonService\r\n      .GetDiagnosisInvestigationStatus()\r\n      .then((data) => (this.diagnosisInvestigationStatusList = data.data));\r\n\r\n    this.show();\r\n  },\r\n  methods: {\r\n    reset() {\r\n      // this.investigationSampleDiagnosis = {\r\n      //   cdfromdate: moment(\r\n      //     String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n      //   ).format(\"MM/DD/YYYY\"),\r\n      //   cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n      //   investigation_status: \"Waiting for Result\",\r\n      // };\r\n      this.dataList = true;\r\n      this.submitted = false;\r\n\r\n      this.show();\r\n    },\r\n    show() {\r\n      this.submitted = true;\r\n      if (!this.investigationSampleDiagnosis.cdfromdate) {\r\n        return;\r\n      } else if (!this.investigationSampleDiagnosis.cdtodate) {\r\n        return;\r\n      } else if (!this.investigationSampleDiagnosis.investigation_status) {\r\n        return;\r\n      } else {\r\n        this.investigationSampleDiagnosis.fromdate = moment(\r\n          String(this.investigationSampleDiagnosis.cdfromdate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationSampleDiagnosis.todate = moment(\r\n          String(this.investigationSampleDiagnosis.cdtodate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationSampleDiagnosisService\r\n          .getDynamic(\r\n            this.investigationSampleDiagnosis.fromdate,\r\n            this.investigationSampleDiagnosis.todate,\r\n            this.investigationSampleDiagnosis.investigation_status\r\n          )\r\n          .then((data) => (this.investigationSampleDiagnosisList = data.data));\r\n      }\r\n\r\n      this.submitted = true;\r\n    },\r\n    resultSubmitConfirm() {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure submit result?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.resultSubmit();\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    resultEditConfirm() {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure edit result?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.resultSubmit();\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    sendToVerifyConfirm(data) {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure send to verify?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.sendToVerify(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    findBarcode(){\r\n       var aDiagnosis = this.investigationSampleDiagnosisList.filter(function (el) {\r\n        return el.barcode_or_level == this.investigationSampleDiagnosis.barcode;\r\n      }, this)[0];\r\n      console.log(aDiagnosis);\r\n      if(aDiagnosis){\r\n        this.result(aDiagnosis);\r\n      }\r\n    },\r\n    result(data) {\r\n      this.current_sample_collection_id = data.sample_collection_id;\r\n      this.testParameterSetupService\r\n        .getById(data.investigation_id)\r\n        .then((data) => (this.testParameterList = data.data));\r\n\r\n      this.diagnosisName = data._investingation_name;\r\n      this.patientName = data.aPatient.first_name + \" \" + data.aPatient.last_name;\r\n      this.patientContact = data.aPatient.contact_no;\r\n      this.patientRegistration = data.aPatient.registration_no;\r\n      this.dataList = false;\r\n    },\r\n    resultEdit(data) {\r\n      this.investigationSampleDiagnosisService\r\n        .getDiagnosisResultById(data.sample_collection_id)\r\n        .then((data) => this.getParameterFormatted(data));\r\n        this.diagnosisName = data._investingation_name;\r\n        this.patientName = data.aPatient.first_name + data.aPatient.last_name;\r\n    },\r\n    getParameterFormatted(data) {\r\n      this.testParameterList = data.data;\r\n      this.investigationSampleDiagnosis.result_entry_note =\r\n        data.data[0].result_entry_note;\r\n        \r\n      this.dataList = false;\r\n    },\r\n    cancel() {\r\n      this.submitted = false;\r\n      this.dataList = true;\r\n    },\r\n    async resultSubmit() {\r\n      this.submitted = true;\r\n      if (this.current_sample_collection_id) {\r\n        this.testParameterList.forEach((element) => {\r\n          element.sample_collection_id = this.current_sample_collection_id;\r\n        });\r\n      }\r\n      this.requred = \"\";\r\n      this.testParameterList.forEach((element) => {\r\n        element.result_entry_note =\r\n          this.investigationSampleDiagnosis.result_entry_note;\r\n        if (!element.actual_result_value) {\r\n          this.requred = \"required\";\r\n        }\r\n      });\r\n\r\n      if (this.requred) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Required\",\r\n          detail: \"Please fill in the required fields\",\r\n          life: 10000,\r\n        });\r\n        return;\r\n      } else {\r\n        let result =\r\n          await this.investigationSampleDiagnosisService.saveDiagnosisResult(\r\n            this.testParameterList, this\r\n          );\r\n        if (result.status === 200) {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Successfully Saved\",\r\n            life: 10000,\r\n          });\r\n          this.reset();\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Faild\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async sendToVerify(data) {\r\n      let result =\r\n        await this.investigationSampleDiagnosisService.sendResultToVerify(\r\n          data.sample_collection_id, this\r\n        );\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Send to Verify\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Faild\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}