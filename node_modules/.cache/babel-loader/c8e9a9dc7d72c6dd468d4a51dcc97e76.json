{"remainingRequest":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\setup\\CompanySetup.js","dependencies":[{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\setup\\CompanySetup.js","mtime":1635054121449},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/DiagnosticCenterManagement_Client/trunk/src/scripts/setup/CompanySetup.js"],"names":["CompanySetupService","Validation","FilterMatchMode","FilterOperator","data","newInfo","dataList","isEmailValid","isPhoneValid","companyList","companySetup","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","submitted","created","companySetupService","validation","getAll","then","methods","openNew","$refs","inputImage","imageError","hideNew","onFileChange","event","file","target","files","type","match","reader","FileReader","that","size","parseInt","company_image","onload","e","result","readAsDataURL","add","company_name","phone","email","account_no","company_address","split","company_id","put","status","$toast","severity","summary","detail","life","res","edit","obj","getById","getFormatted"],"mappings":"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","sourcesContent":["import CompanySetupService from \"../../service/setup/CompanySetupService\";\r\nimport Validation from \"../../scripts/validation\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newInfo: false,\r\n      dataList: true,\r\n      isEmailValid: \"\",\r\n      isPhoneValid: \"\",\r\n      companyList: [],\r\n      companySetup: {},\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n      submitted: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.companySetupService = new CompanySetupService();\r\n    this.validation = new Validation();\r\n    this.companySetupService\r\n      .getAll()\r\n      .then((data) => (this.companyList = data.data));\r\n  },\r\n  methods: {\r\n    openNew() {\r\n      this.companySetup = {};\r\n      this.newInfo = true;\r\n      this.dataList = false;\r\n      this.submitted = false;\r\n      this.isEmailValid = \"\";\r\n      this.isPhoneValid = \"\";\r\n      this.$refs.inputImage.value = \"\";\r\n      this.imageError = \"\";\r\n    },\r\n    hideNew() {\r\n      this.companySetup = {};\r\n      this.dataList = true;\r\n      this.newInfo = false;\r\n      this.submitted = false;\r\n      this.isEmailValid = \"\";\r\n      this.isPhoneValid = \"\";\r\n      this.$refs.inputImage.value = \"\";\r\n      this.imageError = \"\";\r\n    },\r\n    onFileChange: function (event) {\r\n      const file = event.target.files[0];\r\n      if (!file) {\r\n        return false;\r\n      }\r\n      if (!file.type.match(\"image.*\")) {\r\n        return false;\r\n      }\r\n      const reader = new FileReader();\r\n      const that = this;\r\n\r\n      // validate picture size\r\n      if (file.size/1024 > 250) {\r\n        //event.preventDefault();\r\n        //alert(\"File too big (> 250KB)\");\r\n        this.imageError = `The image size (${parseInt(file.size/1024)} KB) is too much! (max is 250KB).`;\r\n        that.companySetup.company_image = \"\";\r\n        return;\r\n      } else {\r\n        this.imageError = \"\";\r\n        reader.onload = function (e) {\r\n          that.companySetup.company_image = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    },\r\n    async add() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.companySetup.company_name) {\r\n          return;\r\n        } else if (!this.companySetup.company_image) {\r\n          return;\r\n        } else if (!this.companySetup.phone) {\r\n          return;\r\n        } else if (!this.companySetup.email) {\r\n          return;\r\n        } else if (!this.companySetup.account_no) {\r\n          return;\r\n        } else if (!this.companySetup.company_address) {\r\n          return;\r\n        } else if (this.isPhoneValid || this.isEmailValid || this.imageError) {\r\n          return;\r\n        } else {\r\n          this.companySetup.company_image =\r\n            this.companySetup.company_image.split(\",\")[1];\r\n          if (this.companySetup.company_id) {\r\n            let result = await this.companySetupService.put(this.companySetup);\r\n            if (result.status === 202) {\r\n              this.$toast.add({\r\n                severity: \"success\",\r\n                summary: \"Sucess\",\r\n                detail: \"Updated Sucessfully\",\r\n                life: 10000,\r\n              });\r\n              this.hideNew();\r\n              this.companySetupService\r\n                .getAll()\r\n                .then((data) => (this.companyList = data.data));\r\n            } else if (result.status === 401) {\r\n              this.$toast.add({\r\n                severity: \"error\",\r\n                summary: \"Error\",\r\n                detail: result.data,\r\n                life: 10000,\r\n              });\r\n            } else {\r\n              this.$toast.add({\r\n                severity: \"error\",\r\n                summary: \"Faild\",\r\n                detail: result.res,\r\n                life: 10000,\r\n              });\r\n            }\r\n          } else {\r\n            let result = await this.companySetupService.add(this.companySetup);\r\n            if (result.status === 201) {\r\n              this.$toast.add({\r\n                severity: \"success\",\r\n                summary: \"Sucess\",\r\n                detail: \"Saved Sucessfully\",\r\n                life: 10000,\r\n              });\r\n              this.hideNew();\r\n              this.companySetupService\r\n                .getAll()\r\n                .then((data) => (this.companyList = data.data));\r\n            } else if (result.status === 401) {\r\n              this.$toast.add({\r\n                severity: \"error\",\r\n                summary: \"Error\",\r\n                detail: result.data,\r\n                life: 10000,\r\n              });\r\n            } else {\r\n              this.$toast.add({\r\n                severity: \"error\",\r\n                summary: \"Faild\",\r\n                detail: result.res,\r\n                life: 10000,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Faild\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    edit(obj) {\r\n      this.companySetupService\r\n        .getById(obj.company_id)\r\n        .then((data) => this.getFormatted(data.data));\r\n    },\r\n    getFormatted(data) {\r\n      this.companySetup = data;\r\n      this.companySetup.company_image =\r\n        \"data:image/jpg;base64,\" + this.companySetup.company_image;\r\n      this.dataList = false;\r\n      this.newInfo = true;\r\n    },\r\n  },\r\n};"]}]}