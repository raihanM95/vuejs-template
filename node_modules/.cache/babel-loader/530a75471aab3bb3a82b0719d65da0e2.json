{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\AdmittedBirthCertificate.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\AdmittedBirthCertificate.js","mtime":1656312104881},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\babel.config.js","mtime":1624271518206},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/nurse-panel/AdmittedBirthCertificate.js"],"names":["AdmittedBirthCertificateService","AdmissionService","PatientReportService","CommonService","moment","FilterMatchMode","FilterOperator","data","newInfo","dataList","isExist","bloodGroupList","genderList","admissionBirthCertificateList","admissionBirthCertificate","cdfromdate","String","Date","format","cdtodate","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","submitted","created","admittedBirthCertificateService","admissionService","patientReportService","commonService","GetAllGender","then","GetAllBloodGroup","show","methods","openNew","hideNew","getAdmittedInfo","getAdmittedInfoForBirthCertificate","admission_no","getFormatted","length","add","admission_id","first_name","last_name","gender","cddob","father_name","mother_name","contact_no","address","dob","birth_certificate_id","Create","result","status","$toast","severity","summary","detail","life","printBirthCertificate","res","Update","edit","obj","Object","assign","fromdate","todate","getDynamic","formatDate","id","GetBirthCertificate","Downloadfile"],"mappings":"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","sourcesContent":["import AdmittedBirthCertificateService from \"../../service/ipd/AdmittedBirthCertificateService\";\r\nimport AdmissionService from \"../../service/front-desk/AdmissionService\";\r\nimport PatientReportService from \"../../service/report/PatientReportService\";\r\nimport CommonService from \"../../service/CommonService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            newInfo: false,\r\n            dataList: true,\r\n            isExist: \"\",\r\n            bloodGroupList: [],\r\n            genderList: [],\r\n            admissionBirthCertificateList: [],\r\n            admissionBirthCertificate: {\r\n                cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n                cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n            },\r\n            filters: {\r\n                global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            },\r\n            initFilters() {\r\n                this.filters = {\r\n                    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                    name: {\r\n                        operator: FilterOperator.AND,\r\n                        constraints: [\r\n                            { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n                        ],\r\n                    },\r\n                };\r\n            },\r\n            submitted: false,\r\n        };\r\n    },\r\n    created() {\r\n        this.admittedBirthCertificateService = new AdmittedBirthCertificateService();\r\n        this.admissionService = new AdmissionService();\r\n        this.patientReportService = new PatientReportService();\r\n        this.commonService = new CommonService();\r\n\r\n        this.commonService.GetAllGender().then(\r\n            (data) =>\r\n                (this.genderList = data.data)\r\n        );\r\n\r\n        this.commonService\r\n            .GetAllBloodGroup()\r\n            .then((data) => (this.bloodGroupList = data.data));\r\n\r\n        this.show();\r\n    },\r\n    methods: {\r\n        openNew() {\r\n            this.admissionBirthCertificate = {};\r\n            this.isExist = \"\";\r\n            this.newInfo = true;\r\n            this.dataList = false;\r\n            this.submitted = false;\r\n        },\r\n        hideNew() {\r\n            this.admissionBirthCertificate = {\r\n                cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n                cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n            };\r\n            this.isExist = \"\";\r\n            this.dataList = true;\r\n            this.newInfo = false;\r\n            this.submitted = false;\r\n        },\r\n        getAdmittedInfo() {\r\n            this.admissionService\r\n                .getAdmittedInfoForBirthCertificate(this.admissionBirthCertificate.admission_no, this)\r\n                .then((data) => this.getFormatted(data.data));\r\n        },\r\n        getFormatted(data) {\r\n            if (data.length === 0) {\r\n                this.isExist = \"Admitted info not Exist!\";\r\n                this.admissionBirthCertificate = {};\r\n            } else {\r\n                this.isExist = \"\";\r\n                this.admissionBirthCertificate = data[0];\r\n            }\r\n        },\r\n        async add() {\r\n            this.submitted = true;\r\n            try {\r\n                if (!this.admissionBirthCertificate.admission_id) {\r\n                    this.isExist = \"Please Enter Admission No\";\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.first_name) {\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.last_name) {\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.gender) {\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.cddob) {\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.father_name) {\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.mother_name) {\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.contact_no) {\r\n                    return;\r\n                } else if (!this.admissionBirthCertificate.address) {\r\n                    return;\r\n                } else {\r\n                    this.isExist = \"\";\r\n                    this.admissionBirthCertificate.dob = moment(\r\n                        String(this.admissionBirthCertificate.cddob)\r\n                    ).format(\"YYYY-MM-DD\");\r\n                    if (!this.admissionBirthCertificate.birth_certificate_id) {\r\n                        let result = await this.admittedBirthCertificateService.Create(\r\n                            this.admissionBirthCertificate, this\r\n                        );\r\n                        if (result.status === 200) {\r\n                            this.$toast.add({\r\n                                severity: \"success\",\r\n                                summary: \"Success\",\r\n                                detail: \"Saved Successfully\",\r\n                                life: 10000,\r\n                            });\r\n                            this.hideNew();\r\n                            this.show();\r\n                            this.printBirthCertificate(result.data);\r\n                        } else {\r\n                            this.$toast.add({\r\n                                severity: \"error\",\r\n                                summary: \"Failed\",\r\n                                detail: result.res,\r\n                                life: 10000,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        let result = await this.admittedBirthCertificateService.Update(\r\n                            this.admissionBirthCertificate,\r\n                            this\r\n                        );\r\n                        if (result.status === 200) {\r\n                            this.$toast.add({\r\n                                severity: \"success\",\r\n                                summary: \"Success\",\r\n                                detail: \"Updated Successfully\",\r\n                                life: 10000,\r\n                            });\r\n                            this.hideNew();\r\n                            this.show();\r\n                        } else {\r\n                            this.$toast.add({\r\n                                severity: \"error\",\r\n                                summary: \"Failed\",\r\n                                detail: result.res,\r\n                                life: 10000,\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.$toast.add({\r\n                    severity: \"error\",\r\n                    summary: \"Failed\",\r\n                    detail: error,\r\n                    life: 10000,\r\n                });\r\n            }\r\n        },\r\n        edit(obj) {\r\n            this.admissionBirthCertificate = Object.assign({}, obj);\r\n            this.admissionBirthCertificate.cddob = moment(\r\n                String(this.admissionBirthCertificate.dob)\r\n            ).format(\"YYYY-MM-DD\");\r\n            this.dataList = false;\r\n            this.newInfo = true;\r\n        },\r\n        show() {\r\n            this.submitted = true;\r\n            if (!this.admissionBirthCertificate.cdfromdate) {\r\n                return;\r\n            } else if (!this.admissionBirthCertificate.cdtodate) {\r\n                return;\r\n            } else {\r\n                this.admissionBirthCertificate.fromdate = moment(\r\n                    String(this.admissionBirthCertificate.cdfromdate)\r\n                ).format(\"YYYY-MM-DD\");\r\n                this.admissionBirthCertificate.todate = moment(\r\n                    String(this.admissionBirthCertificate.cdtodate)\r\n                ).format(\"YYYY-MM-DD\");\r\n\r\n                this.admittedBirthCertificateService\r\n                    .getDynamic(this.admissionBirthCertificate.fromdate, this.admissionBirthCertificate.todate)\r\n                    .then((data) => (this.admissionBirthCertificateList = data.data));\r\n            }\r\n            this.submitted = false;\r\n        },\r\n        formatDate(value) {\r\n            return moment(String(value)).format(\"MM/DD/YYYY\");\r\n        },\r\n        printBirthCertificate(id) {\r\n            this.patientReportService.GetBirthCertificate(id, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n        },\r\n    },\r\n};"]}]}