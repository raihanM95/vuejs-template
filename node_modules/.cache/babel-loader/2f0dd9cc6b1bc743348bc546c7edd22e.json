{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\components\\Prescription.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\components\\Prescription.js","mtime":1693127068412},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\babel.config.js","mtime":1624271518206},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/components/Prescription.js"],"names":["moment","Validation","FilterService","FilterMatchMode","FilterOperator","AppointmentPrescriptionService","AdmissionPrescriptionService","MedicineSetupService","TreatmentRulesSetupService","TreatmentDurationSetupService","TreatmentDoseSetupService","PatientProfileService","ComplaintSetupService","FoodService","OnExaminationSetupService","DietChartTemplateSetupService","DietChartSetupService","DiagnosisSetupService","CommonService","AdviceSetupService","GlobalSettingsService","data","filteredItems","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","historyTypeList","label","admittedPatientInfo","prescriptionDataList","tempData","headerName","admissionPrescriptionInfo","allAdvice","lstAdmissionPrescriptionInvestigation","lstAdmissionPrescriptionTreatment","lstAdmissionPrescriptionAdvice","treatmentAddDialog","treatmentDialog","dose","treatmentDoseSetup","rule","treatmentRuleSetup","duration","treatmentDurationSetup","treatmentSetup","type","medicineList","treatmentRulesList","treatmentDurationList","treatmentDoseList","SectionDialog","complaintSetup","chiefComplainDialog","compliantList","chiefComplain","chiefComplainList","foodSetup","allergyDetailsDialog","allergyDetails","foodList","allergyTypeList","onExaminationDialog","otherOnExaminations","patientOnExaminationList","onExaminationList","iOChartDialog","iOChart","iOChartList","diabetesChartDialog","diabetesChart","aAdmissionServiceDetails","diabetesChartList","diabetesMealList","dietChartDialog","dietChart","dietChartList","dietChartTemplateList","dietChartTempList","currentMedicationsDialog","currentMedications","currentMedicationsList","diagnosisSetup","pastMedicalHistoryDialog","pastMedicalHistory","pastMedicalHistoryList","diagnosisList","patientLatestHistory","lstPatientOnExamination","lstPatientAllergyDetails","lstPatientDiabetesChart","lstPatientDietChart","department_id","admission_id","newAdviceDialog","adviceSetup","globalSetting","created","today","Date","month","getMonth","year","getFullYear","prevMonth","prevYear","minDate","setMonth","setFullYear","admissionPrescriptionService","appointmentPrescriptionService","medicineSetupService","treatmentRulesSetupService","treatmentDurationSetupService","treatmentDoseSetupService","patientProfileService","complaintSetupService","foodService","onExaminationSetupService","dietChartTemplateSetupService","dietChartSetupService","diagnosisSetupService","commonService","validation","adviceSetupService","globalSettingsService","that","document","onkeyup","e","ctrlKey","altKey","which","getInvestigation","getTreatment","getAdvice","userInfo","JSON","parse","localStorage","getItem","doctor_id","getPrescriptionData","getBySettingName","then","methods","getPrescriptionDataByDoctorId","hideDialog","patientId","toString","patient_id","getComplainsByPatientId","getComplain","getActiveCombo","addComplain","compilants_name","add","result","status","$toast","severity","summary","detail","res","life","searchComplain","event","setTimeout","query","trim","length","filter","item","text","toLowerCase","startsWith","newChiefComplain","addChiefComplain","ddlcomplain","cdfrom_date","String","format","from_date","isComplainExist","el","complainId","isDuplicate","compilants_id","complainSave","patient_complain_id","complainUpdate","deleteComplain","complainDelete","getLatestHistoryByPatientIdForPrescription","newOnExamination","getOnExaminationsPopup","popupOnExaminationsData","forEach","element","push","_on_examination_name","on_examination_id","on_examination_result","onExaminationPopupDialog","addOnExamination","requred","onExaminationsList","elm","description","otherOnExaminationSave","onExaminationSave","getFood","addFood","food_name","active","searchFood","newAllergyDetails","addAllergyDetails","ddlfood","isFoodExist","foodId","food_id","allergyDetailsSave","patient_allergy_details_id","allergyDetailsUpdate","deleteAllergyDetails","allergyDetailsDelete","newIOChart","addIOChart","iOChartSave","getIOChartByPatientId","newDiabetesChart","addDiabetesChart","meal","before","after","diabetesChartSave","deleteDiabetesChart","diabetesChartDelete","newDietChart","getDietChartByTemplateId","diet_chart_template_id","getByDietChartTemplateId","addDietChart","dietChartSave","searchMedicine","slice","searchRule","addRule","ddltreatment_rules","aRule","treatment_rule_name","addNewRule","rule_id","getTreatmentRuleList","searchDuration","addDuration","ddltreatment_duration","aDuration","treatment_duration_name","addNewDuration","duration_id","getTreatmentDurationList","searchDose","addDose","ddltreatment_dose","aDose","treatment_dose_name","addNewDose","dose_id","getTreatmentDoseList","saveTreatment","ddlmedicine","aMedicine","medicine_id","_treatment_dose_name","treatment_dose_id","_treatment_rule_name","treatment_rules_id","_treatment_duration_name","treatment_duration_id","is_baby","editTreatment","index","medicineName","refid","treatmentIndex","treatmentEditSave","isAdvice","lstInvestigation","investingation_name","id","investigation_id","lstAdvices","advice_name","advice_id","newAdvice","addAdvice","isExist","aAdvice","consultancy_department_id","addNewAdvice","addAllAdvice","getValue","aInvestigation","_medicine_type_name","_medicine_name","deleteItem","lst","splice","findIndex","i","prescription","prescription_on_discharge","setItem","getPastHistoryByPatientId","getMedicineHistoryByPatientId","GetAllAllergyType","GetAllDiabetesMeal","cdprescription_date","setting_value","getPreviousPrescriptionDataAdmissionId","previousPrescriptionDataFormatted","getPreviousPrescriptionDataByPatientId","getDiagnosis","newPrescription","formatDate","formatDateTime","getAll","addDiagnosis","diagnosis_name","searchDiagnosis","newPastMedicalHistory","addPastMedicalHistory","ddldiagnosis","diagnosis_id","isDiagnosisExist","diagnosisId","pastHistorySave","confirmDeletePastMedicalHistory","$confirm","require","message","header","icon","acceptClass","accept","deletePastMedicalHistory","reject","pastHistoryDelete","getCurrentMedicationsByPatientId","newMedicineHistory","addCurrentMedications","isIdExists","patient_current_medications_id","currentMedicationsSave","confirmDeleteCurrentMedications","deleteCurrentMedications","currentMedicationsDelete"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport Validation from \"../../scripts/validation\";\r\nimport { FilterService, FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\n// Prescription\r\nimport AppointmentPrescriptionService from \"../../service/doctor-panel/AppointmentPrescriptionService\";\r\nimport AdmissionPrescriptionService from \"../../service/prescription/AdmissionPrescriptionService\";\r\n// Prescription Treatment\r\nimport MedicineSetupService from \"../../service/setup/MedicineSetupService\";\r\nimport TreatmentRulesSetupService from \"../../service/setup/TreatmentRulesSetupService\";\r\nimport TreatmentDurationSetupService from \"../../service/setup/TreatmentDurationSetupService\";\r\nimport TreatmentDoseSetupService from \"../../service/setup/TreatmentDoseSetupService\";\r\n// History\r\nimport PatientProfileService from \"../../service/profiles/PatientProfileService\";\r\nimport ComplaintSetupService from \"../../service/setup/ComplaintSetupService\";\r\nimport FoodService from \"../../service/setup/FoodService\";\r\nimport OnExaminationSetupService from \"../../service/setup/OnExaminationSetupService\";\r\nimport DietChartTemplateSetupService from \"../../service/setup/DietChartTemplateSetupService\";\r\nimport DietChartSetupService from \"../../service/setup/DietChartSetupService\";\r\nimport DiagnosisSetupService from \"../../service/setup/DiagnosisSetupService\";\r\nimport CommonService from \"../../service/CommonService\";\r\n// Advice\r\nimport AdviceSetupService from \"../../service/setup/AdviceSetupService\";\r\n\r\nimport GlobalSettingsService from \"../../service/security/GlobalSettingsService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      filteredItems: null,\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n\r\n      // Prescription\r\n      historyTypeList: [\r\n        { label: \"Medicine\", value: \"Medicine History\" },\r\n        { label: \"Medical\", value: \"Medical History\" },\r\n      ],\r\n      admittedPatientInfo: {},\r\n      prescriptionDataList: [],\r\n      tempData: [],\r\n      headerName: \"Sections\",\r\n      admissionPrescriptionInfo: {\r\n        allAdvice: false,\r\n        lstAdmissionPrescriptionInvestigation: [],\r\n        lstAdmissionPrescriptionTreatment: [],\r\n        lstAdmissionPrescriptionAdvice: [],\r\n      },\r\n\r\n      // Prescription Treatment\r\n      treatmentAddDialog: false,\r\n      treatmentDialog: false,\r\n      dose: {},\r\n      treatmentDoseSetup: {},\r\n      rule: {},\r\n      treatmentRuleSetup: {},\r\n      duration: {},\r\n      treatmentDurationSetup: {},\r\n      treatmentSetup: {\r\n        type: 'Medicine History'\r\n      },\r\n      medicineList: [],\r\n      treatmentRulesList: [],\r\n      treatmentDurationList: [],\r\n      treatmentDoseList: [],\r\n\r\n      // Section\r\n      SectionDialog: false,\r\n\r\n      // History\r\n      complaintSetup: {},\r\n      chiefComplainDialog: false,\r\n      compliantList: [],\r\n      chiefComplain: {},\r\n      chiefComplainList: [],\r\n\r\n      foodSetup: {},\r\n      allergyDetailsDialog: false,\r\n      allergyDetails: {},\r\n      foodList: [],\r\n      allergyTypeList: [],\r\n\r\n      onExaminationDialog: false,\r\n      otherOnExaminations: {},\r\n      patientOnExaminationList: [],\r\n      onExaminationList: [],\r\n\r\n      iOChartDialog: false,\r\n      iOChart: {},\r\n      iOChartList: [],\r\n\r\n      diabetesChartDialog: false,\r\n      diabetesChart: {\r\n        aAdmissionServiceDetails: {}\r\n      },\r\n      diabetesChartList: [],\r\n      diabetesMealList: [],\r\n\r\n      dietChartDialog: false,\r\n      dietChart: {},\r\n      dietChartList: [],\r\n      dietChartTemplateList: [],\r\n      dietChartTempList: [],\r\n\r\n      currentMedicationsDialog: false,\r\n      currentMedications: {},\r\n      currentMedicationsList: [],\r\n\r\n      diagnosisSetup: {},\r\n      pastMedicalHistoryDialog: false,\r\n      pastMedicalHistory: {},\r\n      pastMedicalHistoryList: [],\r\n      diagnosisList: [],\r\n\r\n      patientLatestHistory: {\r\n        lstPatientOnExamination: [],\r\n        lstPatientAllergyDetails: [],\r\n        lstPatientDiabetesChart: [],\r\n        lstPatientDietChart: [],\r\n      },\r\n\r\n      department_id: \"\",\r\n      admission_id: \"\",\r\n      newAdviceDialog: false,\r\n      adviceSetup: {},\r\n\r\n      globalSetting: {},\r\n    };\r\n  },\r\n  created() {\r\n    // past date-year disabled\r\n    let today = new Date();\r\n    let month = today.getMonth();\r\n    let year = today.getFullYear();\r\n    let prevMonth = (month === 0) ? 11 : month - 0;\r\n    let prevYear = (prevMonth === 11) ? year - 0 : year;\r\n    this.minDate = new Date();\r\n    this.minDate.setMonth(prevMonth);\r\n    this.minDate.setFullYear(prevYear);\r\n\r\n    // Prescription\r\n    this.admissionPrescriptionService = new AdmissionPrescriptionService();\r\n    this.appointmentPrescriptionService = new AppointmentPrescriptionService();\r\n\r\n    // Prescription Treatment\r\n    this.medicineSetupService = new MedicineSetupService();\r\n    this.treatmentRulesSetupService = new TreatmentRulesSetupService();\r\n    this.treatmentDurationSetupService = new TreatmentDurationSetupService();\r\n    this.treatmentDoseSetupService = new TreatmentDoseSetupService();\r\n\r\n    // History\r\n    this.patientProfileService = new PatientProfileService();\r\n\r\n    this.complaintSetupService = new ComplaintSetupService();\r\n    this.foodService = new FoodService();\r\n    this.onExaminationSetupService = new OnExaminationSetupService();\r\n    this.dietChartTemplateSetupService = new DietChartTemplateSetupService();\r\n    this.dietChartSetupService = new DietChartSetupService();\r\n\r\n    this.diagnosisSetupService = new DiagnosisSetupService();\r\n    this.commonService = new CommonService();\r\n    this.validation = new Validation();\r\n\r\n    // Advice\r\n    this.adviceSetupService = new AdviceSetupService();\r\n\r\n    this.globalSettingsService = new GlobalSettingsService();\r\n\r\n    // shortcut key start\r\n    let that = this;\r\n    document.onkeyup = function (e) {\r\n      if (e.ctrlKey && e.altKey && e.which == 73) {\r\n        that.getInvestigation();\r\n      } else if (e.ctrlKey && e.altKey && e.which == 84) {\r\n        that.getTreatment();\r\n      } else if (e.ctrlKey && e.altKey && e.which == 65) {\r\n        that.getAdvice();\r\n      }\r\n      // else if (e.ctrlKey && e.altKey && e.shiftKey) {\r\n\r\n      // }\r\n    };\r\n    // shortcut key end\r\n\r\n    this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (this.userInfo.doctor_id) {\r\n      this.getPrescriptionData();\r\n\r\n      this.doctor_id = this.userInfo.doctor_id;\r\n      this.admissionPrescriptionInfo.doctor_id = this.doctor_id;\r\n    }\r\n\r\n    this.globalSettingsService\r\n      .getBySettingName(\"Previous Prescription History Load on Current Prescription\")\r\n      .then((data) => (this.globalSetting = data.data));\r\n  },\r\n  methods: {\r\n    getPrescriptionData() {\r\n      //this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n      this.appointmentPrescriptionService\r\n        .getPrescriptionDataByDoctorId(this.userInfo.doctor_id)\r\n        .then((data) => (this.prescriptionDataList = data.data));\r\n    },\r\n\r\n    hideDialog() {\r\n      var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n\r\n      // Chief Complain\r\n      this.chiefComplainDialog = false;\r\n      this.chiefComplain = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      // On Examination\r\n      this.onExaminationDialog = false;\r\n      this.otherOnExaminations = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.SectionDialog = false;\r\n      this.treatmentAddDialog = false;\r\n      this.treatmentSetup = {\r\n        type: 'Medicine History'\r\n      };\r\n      this.treatmentDialog = false;\r\n\r\n      this.foodSetup = {};\r\n      this.allergyDetailsDialog = false;\r\n      this.allergyDetails = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.iOChartDialog = false;\r\n      this.iOChart = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.diabetesChartDialog = false;\r\n      this.diabetesChart = {\r\n        aAdmissionServiceDetails: {},\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.dietChartDialog = false;\r\n      this.dietChart = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.newAdviceDialog = false;\r\n      this.adviceSetup = {};\r\n\r\n      this.diagnosisSetup = {};\r\n      this.pastMedicalHistoryDialog = false;\r\n      this.pastMedicalHistory = {};\r\n\r\n      this.currentMedicationsDialog = false;\r\n      this.currentMedications = {};\r\n\r\n      this.submitted = false;\r\n    },\r\n    // Get Previous Chief Complain\r\n    getComplainsByPatientId(patient_id) {\r\n      this.chiefComplain.patient_id = patient_id;\r\n      this.patientProfileService.getComplainsByPatientId(patient_id).then((data) => (this.chiefComplainList = data.data));\r\n    },\r\n    // Get, Add Complain\r\n    getComplain() {\r\n      this.complaintSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.compliantList = data.data));\r\n    },\r\n    async addComplain() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.complaintSetup.compilants_name) {\r\n          return;\r\n        } else {\r\n          //this.complaintSetup.compliants_group_id = \"1\"\r\n          //this.complaintSetup.is_favourite = true;\r\n          let result = await this.complaintSetupService.add(this.complaintSetup);\r\n          if (result.status === 200) {\r\n            this.getComplain();\r\n            return result.data;\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    // Add Chief Complain\r\n    searchComplain(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.compliantList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.compliantList.filter((item) => {\r\n            return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    newChiefComplain() {\r\n      this.chiefComplainDialog = true;\r\n    },\r\n    async addChiefComplain() {\r\n      this.submitted = true;\r\n      this.chiefComplain.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.chiefComplain.ddlcomplain) {\r\n        return;\r\n      } else if (!this.chiefComplain.patient_id) {\r\n        return;\r\n      } else {\r\n        if (!this.chiefComplain.cdfrom_date) {\r\n          this.chiefComplain.cdfrom_date = moment(String(new Date())).format(\"MM/DD/YYYY\");\r\n        }\r\n        this.chiefComplain.from_date = moment(\r\n          String(this.chiefComplain.cdfrom_date)\r\n        ).format(\"YYYY-MM-DD\");\r\n        // complain is exist check start\r\n        if (!this.chiefComplain.ddlcomplain.value) {\r\n          var isComplainExist = this.compliantList.filter(function (el) {\r\n            return el.text == this.chiefComplain.ddlcomplain;\r\n          }, this);\r\n\r\n          if (isComplainExist.length == 0) {\r\n            this.complaintSetup.compilants_name = this.chiefComplain.ddlcomplain;\r\n            var complainId = await this.addComplain();\r\n            this.chiefComplain.ddlcomplain = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.chiefComplain.ddlcomplain.value = complainId.toString();\r\n          } else {\r\n            this.chiefComplain.ddlcomplain = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.chiefComplain.ddlcomplain.value = isComplainExist[0].value;\r\n          }\r\n        }\r\n        // complain is exist check end\r\n\r\n        var isDuplicate = this.chiefComplainList.filter(function (el) {\r\n          return el.compilants_id == this.chiefComplain.ddlcomplain.value;\r\n        }, this);\r\n        this.chiefComplain.compilants_id = this.chiefComplain.ddlcomplain.value;\r\n        if (isDuplicate.length == 0) {\r\n          let result = await this.patientProfileService.complainSave(this.chiefComplain);\r\n          if (result.status === 201) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n            this.hideDialog();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        } else {\r\n          this.chiefComplain.patient_complain_id = isDuplicate[0].patient_complain_id;\r\n          let result = await this.patientProfileService.complainUpdate(this.chiefComplain);\r\n          if (result.status === 202) {\r\n            this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n            this.hideDialog();\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Updated Successfully\",\r\n              life: 10000,\r\n            });\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      // var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      // this.chiefComplain.patient_id = patientId;\r\n      // this.submitted = true;\r\n      // if (!this.chiefComplain.compilants_id) {\r\n      //   return;\r\n      // } else if (!this.chiefComplain.patient_id) {\r\n      //   return;\r\n      // } else if (!this.chiefComplain.cdfrom_date) {\r\n      //   return;\r\n      // } else if (this.validation.isIdExists(this.chiefComplainList, 'compilants_id', this.chiefComplain.compilants_id, 'patient_complain_id', this.chiefComplain.patient_complain_id, this)) {\r\n      //   return;\r\n      // } else {\r\n      //   this.chiefComplain.from_date = moment(\r\n      //     String(this.chiefComplain.cdfrom_date)\r\n      //   ).format(\"YYYY-MM-DD\");\r\n      //   if (!this.chiefComplain.patient_complain_id) {\r\n      //     let result = await this.patientProfileService.complainSave(this.chiefComplain);\r\n      //     if (result.status === 201) {\r\n      //       this.$toast.add({\r\n      //         severity: \"success\",\r\n      //         summary: \"Success\",\r\n      //         detail: \"Saved Successfully\",\r\n      //         life: 10000,\r\n      //       });\r\n      //       this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n      //       this.hideDialog();\r\n      //     } else if (result.status === 401) {\r\n      //       this.$toast.add({\r\n      //         severity: \"error\",\r\n      //         summary: \"Error\",\r\n      //         detail: result.data,\r\n      //         life: 10000,\r\n      //       });\r\n      //     } else {\r\n      //       this.$toast.add({\r\n      //         severity: \"error\",\r\n      //         summary: \"Failed\",\r\n      //         detail: result.res,\r\n      //         life: 10000,\r\n      //       });\r\n      //     }\r\n      //   } else {\r\n      //     let result = await this.patientProfileService.complainUpdate(this.chiefComplain);\r\n      //     if (result.status === 202) {\r\n      //       this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n      //       this.hideDialog();\r\n      //       this.$toast.add({\r\n      //         severity: \"success\",\r\n      //         summary: \"Success\",\r\n      //         detail: \"Updated Successfully\",\r\n      //         life: 10000,\r\n      //       });\r\n      //     } else if (result.status === 401) {\r\n      //       this.$toast.add({\r\n      //         severity: \"error\",\r\n      //         summary: \"Error\",\r\n      //         detail: result.data,\r\n      //         life: 10000,\r\n      //       });\r\n      //     } else {\r\n      //       this.$toast.add({\r\n      //         severity: \"error\",\r\n      //         summary: \"Failed\",\r\n      //         detail: result.res,\r\n      //         life: 10000,\r\n      //       });\r\n      //     }\r\n      //   }\r\n      // }\r\n    },\r\n\r\n    // Delete Chief Complain\r\n    async deleteComplain(data) {\r\n      let result = await this.patientProfileService.complainDelete(data);\r\n      if (result.status === 202) {\r\n        this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    // Get Previous lstPatientOnExamination, lstPatientAllergyDetails, lstPatientDiabetesChart, lstPatientDietChart,\r\n    getLatestHistoryByPatientIdForPrescription() {\r\n      var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      this.patientProfileService.getLatestHistoryByPatientIdForPrescription(patientId).then((data) => (this.patientLatestHistory = data.data));\r\n    },\r\n\r\n    // Add On Examination\r\n    newOnExamination() {\r\n      this.getOnExaminationsPopup();\r\n      this.onExaminationDialog = true;\r\n    },\r\n    getOnExaminationsPopup() {\r\n      var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n      this.otherOnExaminations.patient_id = patientId.toString();\r\n\r\n      this.popupOnExaminationsData = [];\r\n      this.onExaminationList.forEach((element) => {\r\n        this.popupOnExaminationsData.push({\r\n          _on_examination_name: element.text,\r\n          on_examination_id: element.value,\r\n          on_examination_result: String(0),\r\n          patient_id: patientId.toString()\r\n        });\r\n      });\r\n\r\n      this.onExaminationPopupDialog = true;\r\n    },\r\n    async addOnExamination() {\r\n      this.submitted = true;\r\n      this.requred = \"\";\r\n      this.popupOnExaminationsData.forEach((element) => {\r\n        if (!element.on_examination_result) {\r\n          this.requred = \"required\";\r\n        }\r\n      });\r\n\r\n      if (this.requred) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Required\",\r\n          detail: \"Please fill in the required fields\",\r\n          life: 10000,\r\n        });\r\n        return;\r\n      }\r\n      if (this.requred) {\r\n        return;\r\n      } else {\r\n        var onExaminationsList = this.popupOnExaminationsData.filter(function (elm) {\r\n          return elm.on_examination_result != \"0\";\r\n        }, this);\r\n        let result = 0;\r\n        if(this.otherOnExaminations.description){\r\n          result = await this.patientProfileService.otherOnExaminationSave(this.otherOnExaminations);\r\n        }\r\n        if(onExaminationsList.length > 0){\r\n          result = await this.patientProfileService.onExaminationSave(onExaminationsList);\r\n        }\r\n        \r\n        if (result.status === 201) {\r\n          this.getLatestHistoryByPatientIdForPrescription();\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Get, Add Food\r\n    getFood() {\r\n      this.foodService\r\n        .getActiveCombo()\r\n        .then((data) => (this.foodList = data.data));\r\n    },\r\n    async addFood() {\r\n      try {\r\n        if (!this.foodSetup.food_name) {\r\n          return;\r\n        } else {\r\n          this.foodSetup.active = true;\r\n          let result = await this.foodService.add(this.foodSetup);\r\n          if (result.status === 200) {\r\n            this.getFood();\r\n            return result.data;\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Add Allergy Details\r\n    searchFood(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.foodList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.foodList.filter((item) => {\r\n            return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    newAllergyDetails() {\r\n      this.allergyDetailsDialog = true;\r\n    },\r\n    async addAllergyDetails() {\r\n      this.submitted = true;\r\n      this.allergyDetails.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.allergyDetails.ddlfood) {\r\n        return;\r\n      } else if (!this.allergyDetails.patient_id) {\r\n        return;\r\n      } else if (!this.allergyDetails.type) {\r\n        return;\r\n      } else if (!this.allergyDetails.cdfrom_date) {\r\n        return;\r\n      } else {\r\n        this.allergyDetails.from_date = moment(\r\n          String(this.allergyDetails.cdfrom_date)\r\n        ).format(\"YYYY-MM-DD\");\r\n        // food is exist check start\r\n        if (!this.allergyDetails.ddlfood.value) {\r\n          var isFoodExist = this.foodList.filter(function (el) {\r\n            return el.text == this.allergyDetails.ddlfood;\r\n          }, this);\r\n\r\n          if (isFoodExist.length == 0) {\r\n            this.foodSetup.food_name = this.allergyDetails.ddlfood;\r\n            var foodId = await this.addFood();\r\n            this.allergyDetails.ddlfood = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.allergyDetails.ddlfood.value = foodId.toString();\r\n          } else {\r\n            this.allergyDetails.ddlfood = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.allergyDetails.ddlfood.value = isFoodExist[0].value;\r\n          }\r\n        }\r\n        // food is exist check end\r\n\r\n        var isDuplicate = this.patientLatestHistory.lstPatientAllergyDetails.filter(function (el) {\r\n          return el.food_id == this.allergyDetails.ddlfood.value;\r\n        }, this);\r\n        this.allergyDetails.food_id = this.allergyDetails.ddlfood.value;\r\n        if (isDuplicate.length == 0) {\r\n          let result = await this.patientProfileService.allergyDetailsSave(this.allergyDetails);\r\n          if (result.status === 201) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            this.getLatestHistoryByPatientIdForPrescription();\r\n            this.hideDialog();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        } else {\r\n          this.allergyDetails.patient_allergy_details_id = isDuplicate[0].patient_allergy_details_id;\r\n          let result = await this.patientProfileService.allergyDetailsUpdate(this.allergyDetails);\r\n          if (result.status === 202) {\r\n            this.getLatestHistoryByPatientIdForPrescription();\r\n            this.hideDialog();\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Updated Successfully\",\r\n              life: 10000,\r\n            });\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // Delete Allergy Details\r\n    async deleteAllergyDetails(data) {\r\n      let result = await this.patientProfileService.allergyDetailsDelete(data);\r\n      if (result.status === 202) {\r\n        this.getLatestHistoryByPatientIdForPrescription();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Add IO Chart\r\n    newIOChart() {\r\n      this.iOChartDialog = true;\r\n    },\r\n    async addIOChart() {\r\n      this.submitted = true;\r\n      if (!this.iOChart.patient_id) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.iOChartSave(this.iOChart);\r\n        if (result.status === 201) {\r\n          var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n          this.getIOChartByPatientId(patientId);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Add Diabetes Chart\r\n    newDiabetesChart() {\r\n      this.diabetesChartDialog = true;\r\n    },\r\n    async addDiabetesChart() {\r\n      this.submitted = true;\r\n      if (!this.diabetesChart.meal) {\r\n        return;\r\n      } else if (!this.diabetesChart.before) {\r\n        return;\r\n      } else if (!this.diabetesChart.after) {\r\n        return;\r\n      } else {\r\n        //var admission_id = JSON.parse(localStorage.getItem(\"admissionIdForDiabetesService\"));\r\n        //this.diabetesChart.aAdmissionServiceDetails.admission_id = String(admission_id);\r\n        var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n        this.diabetesChart.patient_id = String(patientId);\r\n        let result = await this.patientProfileService.diabetesChartSave(this.diabetesChart);\r\n        if (result.status === 201) {\r\n          this.getLatestHistoryByPatientIdForPrescription();\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Delete Diabetes Chart\r\n    async deleteDiabetesChart(data) {\r\n      let result = await this.patientProfileService.diabetesChartDelete(data);\r\n      if (result.status === 202) {\r\n        this.getLatestHistoryByPatientIdForPrescription();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Add Diet Chart\r\n    newDietChart() {\r\n      this.dietChartDialog = true;\r\n    },\r\n    getDietChartByTemplateId() {\r\n      if (!this.dietChart.diet_chart_template_id) {\r\n        return\r\n      } else {\r\n        this.dietChartSetupService\r\n          .getByDietChartTemplateId(this.dietChart.diet_chart_template_id)\r\n          .then((data) => (this.dietChartTempList = data.data));\r\n      }\r\n    },\r\n    async addDietChart() {\r\n      this.submitted = true;\r\n      if (this.dietChartTempList.length <= 0) {\r\n        return;\r\n      } else {\r\n        var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n        this.dietChartTempList.forEach(element => {\r\n          element.patient_id = patientId.toString()\r\n        });\r\n\r\n        let result = await this.patientProfileService.dietChartSave(this.dietChartTempList);\r\n        if (result.status === 201) {\r\n          this.getLatestHistoryByPatientIdForPrescription();\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Treatment\r\n    searchMedicine(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.medicineList];\r\n        }\r\n        else {\r\n          // start with\r\n          // this.filteredItems = this.medicineList.filter((item) => {\r\n          //     return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          // });\r\n\r\n          // contains\r\n          this.filteredItems = FilterService.filter(this.medicineList, ['text'], event.query.toLowerCase(), FilterMatchMode.CONTAINS).slice(0, 500);\r\n        }\r\n      }, 250);\r\n    },\r\n    getTreatment() {\r\n      this.treatmentAddDialog = true;\r\n      // this.headerName = \"Medicine\";\r\n      // this.filters['global'].value = \"\";\r\n      // this.isAdvice = false;\r\n      // this.tempData = [];\r\n      // this.prescriptionDataList.lstTreatment.forEach((element) => {\r\n      //   this.tempData.push({\r\n      //     _medicine_type_name: element._medicine_type_name,\r\n      //     _medicine_name: element._medicine_name,\r\n      //     name: element._medicine_type_name + \" \" + element._medicine_name + \" \" + element._treatment_dose_name + \" \" + element._treatment_rule_name + \" \" + element._treatment_duration_name,\r\n      //     id: element.medicine_id,\r\n      //     _treatment_dose_name: element._treatment_dose_name,\r\n      //     treatment_dose_id: element.treatment_dose_id,\r\n      //     _treatment_rule_name: element._treatment_rule_name,\r\n      //     treatment_rules_id: element.treatment_rules_id,\r\n      //     _treatment_duration_name: element._treatment_duration_name,\r\n      //     treatment_duration_id: element.treatment_duration_id,\r\n      //     description: element.description,\r\n      //   });\r\n      // });\r\n    },\r\n    // Start Treatment Rule\r\n    searchRule(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.treatmentRulesList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.treatmentRulesList.filter((item) => {\r\n            return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    async addRule() {\r\n      if (!this.treatmentSetup.ddltreatment_rules.value) {\r\n        var aRule =\r\n          this.treatmentRulesList.filter(\r\n            function (el) {\r\n              return el.text == this.treatmentSetup.ddltreatment_rules;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (aRule.length) {\r\n          this.rule = {\r\n            text: aRule.text,\r\n            value: aRule.value\r\n          }\r\n        }\r\n        else {\r\n          this.treatmentRuleSetup.treatment_rule_name = this.treatmentSetup.ddltreatment_rules;\r\n          var rule_id = await this.addNewRule();\r\n          this.rule = {\r\n            text: this.treatmentRuleSetup.treatment_rule_name,\r\n            value: rule_id.toString()\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.rule = {\r\n          text: this.treatmentSetup.ddltreatment_rules.text,\r\n          value: this.treatmentSetup.ddltreatment_rules.value\r\n        }\r\n      }\r\n    },\r\n\r\n    async addNewRule() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.treatmentRuleSetup.treatment_rule_name) {\r\n          return;\r\n        } else {\r\n          let result = await this.treatmentRulesSetupService.add(this.treatmentRuleSetup);\r\n          if (result.status === 200) {\r\n            this.getTreatmentRuleList();\r\n            return result.data;\r\n          }\r\n          else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    // Start Treatment Duration\r\n    searchDuration(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.treatmentDurationList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.treatmentDurationList.filter((item) => {\r\n            return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    async addDuration() {\r\n      if (!this.treatmentSetup.ddltreatment_duration.value) {\r\n        var aDuration =\r\n          this.treatmentDurationList.filter(\r\n            function (el) {\r\n              return el.text == this.treatmentSetup.ddltreatment_duration;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (aDuration.length) {\r\n          this.duration = {\r\n            text: aDuration.text,\r\n            value: aDuration.value\r\n          }\r\n        }\r\n        else {\r\n          this.treatmentDurationSetup.treatment_duration_name = this.treatmentSetup.ddltreatment_duration;\r\n          var duration_id = await this.addNewDuration();\r\n          this.duration = {\r\n            text: this.treatmentDurationSetup.treatment_duration_name,\r\n            value: duration_id.toString()\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.duration = {\r\n          text: this.treatmentSetup.ddltreatment_duration.text,\r\n          value: this.treatmentSetup.ddltreatment_duration.value\r\n        }\r\n      }\r\n    },\r\n\r\n    async addNewDuration() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.treatmentDurationSetup.treatment_duration_name) {\r\n          return;\r\n        } else {\r\n          let result = await this.treatmentDurationSetupService.add(this.treatmentDurationSetup);\r\n          if (result.status === 200) {\r\n            this.getTreatmentDurationList();\r\n            return result.data;\r\n          }\r\n          else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    // Start Treatment Dose\r\n    searchDose(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.treatmentDoseList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.treatmentDoseList.filter((item) => {\r\n            return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    async addDose() {\r\n      if (!this.treatmentSetup.ddltreatment_dose.value) {\r\n        var aDose =\r\n          this.treatmentDoseList.filter(\r\n            function (el) {\r\n              return el.text == this.treatmentSetup.ddltreatment_dose;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (aDose.length) {\r\n          this.dose = {\r\n            text: aDose.text,\r\n            value: aDose.value\r\n          }\r\n        }\r\n        else {\r\n          this.treatmentDoseSetup.treatment_dose_name = this.treatmentSetup.ddltreatment_dose;\r\n          var dose_id = await this.addNewDose();\r\n          this.dose = {\r\n            text: this.treatmentDoseSetup.treatment_dose_name,\r\n            value: dose_id.toString()\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.dose = {\r\n          text: this.treatmentSetup.ddltreatment_dose.text,\r\n          value: this.treatmentSetup.ddltreatment_dose.value\r\n        }\r\n      }\r\n    },\r\n\r\n    async addNewDose() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.treatmentDoseSetup.treatment_dose_name) {\r\n          return;\r\n        } else {\r\n          let result = await this.treatmentDoseSetupService.add(this.treatmentDoseSetup);\r\n          if (result.status === 200) {\r\n            this.getTreatmentDoseList();\r\n            return result.data;\r\n          }\r\n          else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    // End Treatment Dose\r\n    async saveTreatment() {\r\n      this.submitted = true;\r\n      if (!this.treatmentSetup.ddlmedicine) {\r\n        return;\r\n      } else if (!this.treatmentSetup.ddltreatment_rules) {\r\n        return;\r\n      } else if (!this.treatmentSetup.ddltreatment_duration) {\r\n        return;\r\n      } else if (!this.treatmentSetup.ddltreatment_dose) {\r\n        return;\r\n      } else {\r\n        var aMedicine =\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment.filter(\r\n            function (el) {\r\n              return el.medicine_id === this.treatmentSetup.ddlmedicine.value;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (!aMedicine.length) {\r\n          await this.addDose();\r\n          await this.addRule();\r\n          await this.addDuration();\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment.push({\r\n            name: this.treatmentSetup.ddlmedicine.text,\r\n            medicine_id: this.treatmentSetup.ddlmedicine.value,\r\n            _treatment_dose_name: this.dose.text,\r\n            treatment_dose_id: this.dose.value,\r\n            _treatment_rule_name: this.rule.text,\r\n            treatment_rules_id: this.rule.value,\r\n            _treatment_duration_name: this.duration.text,\r\n            treatment_duration_id: this.duration.value,\r\n            description: this.treatmentSetup.description,\r\n            is_baby: this.treatmentSetup.is_baby,\r\n          });\r\n        }\r\n        this.hideDialog();\r\n      }\r\n    },\r\n    // Edit Treatment\r\n    editTreatment(data, index) {\r\n      this.treatmentSetup.description = data.description;\r\n      this.treatmentSetup.is_baby = data.is_baby;\r\n      this.treatmentSetup.medicineName = data.name;\r\n      this.treatmentSetup.ddltreatment_rules = {\r\n        text: data._treatment_rule_name,\r\n        value: data.treatment_rules_id,\r\n        refid: null,\r\n      };\r\n      this.treatmentSetup.ddltreatment_duration = {\r\n        text: data._treatment_duration_name,\r\n        value: data.treatment_duration_id,\r\n        refid: null,\r\n      };\r\n      this.treatmentSetup.ddltreatment_dose = {\r\n        text: data._treatment_dose_name,\r\n        value: data.treatment_dose_id,\r\n        refid: null,\r\n      };\r\n      this.treatmentDialog = true;\r\n      this.treatmentIndex = index\r\n    },\r\n    treatmentEditSave() {\r\n      this.submitted = true;\r\n      if (!this.treatmentSetup.ddltreatment_rules) {\r\n        return;\r\n      } else if (!this.treatmentSetup.ddltreatment_duration) {\r\n        return;\r\n      } else if (!this.treatmentSetup.ddltreatment_dose) {\r\n        return;\r\n      } else {\r\n        //this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex].name = this.treatmentSetup.ddlmedicine.text;\r\n        //this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex].medicine_id = this.treatmentSetup.ddlmedicine.value;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex]._treatment_rule_name = this.treatmentSetup.ddltreatment_rules.text;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex].treatment_rules_id = this.treatmentSetup.ddltreatment_rules.value;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex]._treatment_duration_name = this.treatmentSetup.ddltreatment_duration.text;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex].treatment_duration_id = this.treatmentSetup.ddltreatment_duration.value;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex]._treatment_dose_name = this.treatmentSetup.ddltreatment_dose.text;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex].treatment_dose_id = this.treatmentSetup.ddltreatment_dose.value;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex].description = this.treatmentSetup.description;\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment[this.treatmentIndex].is_baby = this.treatmentSetup.is_baby;\r\n\r\n        this.treatmentDialog = false;\r\n        this.submitted = false;\r\n      }\r\n    },\r\n\r\n    // Investigation\r\n    getInvestigation() {\r\n      this.headerName = \"Investigation\";\r\n      this.filters['global'].value = \"\";\r\n      this.isAdvice = false;\r\n      this.tempData = [];\r\n      this.prescriptionDataList.lstInvestigation.forEach((element) => {\r\n        this.tempData.push({\r\n          name: element.investingation_name,\r\n          id: element.investigation_id,\r\n        });\r\n      });\r\n\r\n      this.SectionDialog = true;\r\n    },\r\n\r\n    // Advice\r\n    getAdvice() {\r\n      this.headerName = \"Advice\";\r\n      this.filters['global'].value = \"\";\r\n      this.isAdvice = true;\r\n      this.tempData = [];\r\n      this.prescriptionDataList.lstAdvices.forEach((element) => {\r\n        this.tempData.push({\r\n          name: element.advice_name,\r\n          id: element.advice_id,\r\n        });\r\n      });\r\n      this.SectionDialog = true;\r\n    },\r\n\r\n    // Add New Advice\r\n    newAdvice() {\r\n      this.SectionDialog = false;\r\n      this.newAdviceDialog = true;\r\n    },\r\n    async addAdvice() {\r\n      var isExist =\r\n        this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice.filter(\r\n          function (el) {\r\n            return el.name == this.adviceSetup.advice_name;\r\n          },\r\n          this\r\n        );\r\n\r\n      if (!isExist.length) {\r\n        var aAdvice =\r\n          this.prescriptionDataList.lstAdvices.filter(\r\n            function (el) {\r\n              return el.advice_name == this.adviceSetup.advice_name;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (aAdvice.length) {\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice.push({\r\n            name: aAdvice[0].advice_name,\r\n            advice_id: aAdvice[0].advice_id,\r\n          });\r\n\r\n          this.hideDialog();\r\n        }\r\n        else {\r\n          //this.adviceSetup.advice_group_id = \"\";\r\n          this.adviceSetup.consultancy_department_id = this.department_id;\r\n          var advice_id = await this.addNewAdvice();\r\n\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice.push({\r\n            name: this.adviceSetup.advice_name,\r\n            advice_id: advice_id.toString(),\r\n          });\r\n          this.hideDialog();\r\n        }\r\n      }\r\n      else {\r\n        this.hideDialog();\r\n      }\r\n    },\r\n\r\n    async addNewAdvice() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.adviceSetup.advice_name) {\r\n          return;\r\n        } else if (!this.adviceSetup.consultancy_department_id) {\r\n          return;\r\n        } else {\r\n          let result = await this.adviceSetupService.add(this.adviceSetup);\r\n          if (result.status === 200) {\r\n            this.getPrescriptionData();\r\n            return result.data;\r\n          }\r\n          else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Add all advice checkbox\r\n    addAllAdvice() {\r\n      if (!this.admissionPrescriptionInfo.allAdvice) {\r\n        this.tempData.forEach((element) => {\r\n          var aAdvice =\r\n            this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice.filter(\r\n              function (el) {\r\n                return el.advice_id === element.id;\r\n              },\r\n              this\r\n            );\r\n\r\n          if (!aAdvice.length) {\r\n            this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice.push({\r\n              name: element.name,\r\n              advice_id: element.id,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    // Add value \r\n    getValue(data) {\r\n      if (this.headerName == \"Investigation\") {\r\n        var aInvestigation =\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionInvestigation.filter(\r\n            function (el) {\r\n              return el.investigation_id === data.id;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (!aInvestigation.length) {\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionInvestigation.push(\r\n            {\r\n              name: data.name,\r\n              investigation_id: data.id,\r\n              is_baby: false,\r\n            }\r\n          );\r\n        }\r\n      } else if (this.headerName == \"Medicine\") {\r\n        var aMedicine =\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment.filter(\r\n            function (el) {\r\n              return el.medicine_id === data.id;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (!aMedicine.length) {\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment.push({\r\n            _medicine_type_name: data._medicine_type_name,\r\n            name: data._medicine_name,\r\n            medicine_id: data.id,\r\n            _treatment_dose_name: data._treatment_dose_name,\r\n            treatment_dose_id: data.treatment_dose_id,\r\n            _treatment_rule_name: data._treatment_rule_name,\r\n            treatment_rules_id: data.treatment_rules_id,\r\n            _treatment_duration_name: data._treatment_duration_name,\r\n            treatment_duration_id: data.treatment_duration_id,\r\n            description: data.description,\r\n          });\r\n        }\r\n      } else if (this.headerName == \"Advice\") {\r\n        var aAdvice =\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice.filter(\r\n            function (el) {\r\n              return el.advice_id === data.id;\r\n            },\r\n            this\r\n          );\r\n\r\n        if (!aAdvice.length) {\r\n          this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice.push({\r\n            name: data.name,\r\n            advice_id: data.id,\r\n            is_baby: false,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Delete from temp list\r\n    deleteItem(lst, data) {\r\n      lst.splice(\r\n        lst.findIndex((i) => i === data),\r\n        1\r\n      );\r\n    },\r\n\r\n    prescription(data) {\r\n      this.admissionPrescriptionInfo.prescription_on_discharge = data.prescription_on_discharge;\r\n      this.department_id = data.department_id;\r\n      this.admission_id = data.admission_id;\r\n      //this.admittedPatientInfo.admission_no = data.admission_no;\r\n      //localStorage.setItem('admissionIdForDiabetesService', data.admission_id);\r\n      this.admittedPatientInfo.patient_id = data.patient_id;\r\n      localStorage.setItem('patientIdForTreatment', data.patient_id);\r\n      // this.admittedPatientInfo.registration_no = data.registration_no;\r\n      // this.admittedPatientInfo.patient_name = data.patient_name;\r\n      // this.admittedPatientInfo.gender = data.gender;\r\n      // this.admittedPatientInfo.age_year = data.age_year;\r\n      // this.admittedPatientInfo.age_month = data.age_month;\r\n      // this.admittedPatientInfo.age_day = data.age_day;\r\n\r\n      this.getComplainsByPatientId(data.patient_id);\r\n      this.getLatestHistoryByPatientIdForPrescription();\r\n      this.getPastHistoryByPatientId(data.patient_id);\r\n      this.getMedicineHistoryByPatientId(data.patient_id);\r\n\r\n      // Use for Dialog //\r\n      this.getComplain();\r\n\r\n      this.getFood();\r\n\r\n      this.onExaminationSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.onExaminationList = data.data));\r\n\r\n      // this.diagnosisSetupService\r\n      //   .getAll()\r\n      //   .then((data) => (this.diagnosisList = data.data));\r\n\r\n      this.commonService\r\n        .GetAllAllergyType()\r\n        .then((data) => (this.allergyTypeList = data.data));\r\n\r\n      this.commonService\r\n        .GetAllDiabetesMeal()\r\n        .then((data) => (this.diabetesMealList = data.data));\r\n\r\n      this.dietChartTemplateSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.dietChartTemplateList = data.data));\r\n      // Use for Dialog //\r\n\r\n      this.admissionPrescriptionInfo.cdprescription_date = moment(String(new Date())).format(\"MM/DD/YYYY\");\r\n      if (this.globalSetting.setting_value == \"Yes\") {\r\n        if (data.admission_id) {\r\n          // Previous Prescription Data\r\n          this.admissionPrescriptionService\r\n            .getPreviousPrescriptionDataAdmissionId(data.admission_id)\r\n            .then((data) => this.previousPrescriptionDataFormatted(data.data));\r\n        } else if (!data.admission_id && data.patient_id) {\r\n          // Previous Prescription Data\r\n          this.admissionPrescriptionService\r\n            .getPreviousPrescriptionDataByPatientId(data.patient_id)\r\n            .then((data) => this.previousPrescriptionDataFormatted(data.data));\r\n        }\r\n      }\r\n\r\n      // Prescription Treatment\r\n      this.medicineSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.medicineList = data.data));\r\n\r\n      this.getTreatmentRuleList();\r\n      this.getTreatmentDurationList();\r\n      this.getTreatmentDoseList();\r\n\r\n      // Diagnosis\r\n      this.getDiagnosis();\r\n    },\r\n    getTreatmentRuleList() {\r\n      this.treatmentRulesSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentRulesList = data.data));\r\n    },\r\n    getTreatmentDurationList() {\r\n      this.treatmentDurationSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentDurationList = data.data));\r\n    },\r\n    getTreatmentDoseList() {\r\n      this.treatmentDoseSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentDoseList = data.data));\r\n    },\r\n    previousPrescriptionDataFormatted(data) {\r\n      //this.admissionPrescriptionInfo.cdprescription_date = moment(String(new Date())).format(\"MM/DD/YYYY\");\r\n\r\n      this.admissionPrescriptionInfo.lstAdmissionPrescriptionTreatment = data.lstAdmissionPrescriptionTreatment;\r\n      this.admissionPrescriptionInfo.lstAdmissionPrescriptionAdvice = data.lstAdmissionPrescriptionAdvice;\r\n      this.admissionPrescriptionInfo.lstAdmissionPrescriptionInvestigation = data.lstAdmissionPrescriptionInvestigation;\r\n    },\r\n\r\n    newPrescription() {\r\n      this.headerName = \"Sections\";\r\n      this.filters['global'].value = \"\";\r\n      this.tempData = [];\r\n\r\n      this.admissionPrescriptionInfo = {\r\n        cdprescription_date: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        allAdvice: false,\r\n\r\n        lstAdmissionPrescriptionInvestigation: [],\r\n        lstAdmissionPrescriptionTreatment: [],\r\n        lstAdmissionPrescriptionAdvice: [],\r\n      },\r\n\r\n        this.submitted = false;\r\n    },\r\n\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY\");\r\n    },\r\n    formatDateTime(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n\r\n    // Medical History\r\n    // Get, Add Diagnosis\r\n    getDiagnosis() {\r\n      this.diagnosisSetupService\r\n        .getAll()\r\n        .then((data) => (this.diagnosisList = data.data));\r\n    },\r\n    async addDiagnosis() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.diagnosisSetup.diagnosis_name) {\r\n          return;\r\n        } else {\r\n          let result = await this.diagnosisSetupService.add(this.diagnosisSetup);\r\n          if (result.status === 200) {\r\n            this.getDiagnosis();\r\n            return result.data;\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    // Get Previous Medical History\r\n    getPastHistoryByPatientId(patient_id) {\r\n      this.pastMedicalHistory.patient_id = patient_id;\r\n      this.patientProfileService.getPastHistoryByPatientId(patient_id).then((data) => (this.pastMedicalHistoryList = data.data));\r\n    },\r\n    // Add Medical History\r\n    searchDiagnosis(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.diagnosisList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.diagnosisList.filter((item) => {\r\n            return item.diagnosis_name.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    newPastMedicalHistory() {\r\n      this.pastMedicalHistoryDialog = true;\r\n    },\r\n    async addPastMedicalHistory() {\r\n      this.submitted = true;\r\n      this.pastMedicalHistory.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.pastMedicalHistory.ddldiagnosis) {\r\n        return;\r\n      } else if (!this.pastMedicalHistory.patient_id) {\r\n        return;\r\n      } else {\r\n        // if (!this.pastMedicalHistory.cdfrom_date) {\r\n        //   this.pastMedicalHistory.cdfrom_date = moment(String(new Date())).format(\"MM/DD/YYYY\");\r\n        // }\r\n        // this.pastMedicalHistory.from_date = moment(\r\n        //   String(this.pastMedicalHistory.cdfrom_date)\r\n        // ).format(\"YYYY-MM-DD\");\r\n        // diagnosis is exist check start\r\n        if (!this.pastMedicalHistory.ddldiagnosis.diagnosis_id) {\r\n          var isDiagnosisExist = this.diagnosisList.filter(function (el) {\r\n            return el.diagnosis_name == this.pastMedicalHistory.ddldiagnosis;\r\n          }, this);\r\n\r\n          if (isDiagnosisExist.length == 0) {\r\n            this.diagnosisSetup.diagnosis_name = this.pastMedicalHistory.ddldiagnosis;\r\n            var diagnosisId = await this.addDiagnosis();\r\n            this.pastMedicalHistory.ddldiagnosis = {\r\n              diagnosis_name: \"\",\r\n              diagnosis_id: \"\",\r\n            };\r\n            this.pastMedicalHistory.ddldiagnosis.diagnosis_id = diagnosisId.toString();\r\n          } else {\r\n            this.pastMedicalHistory.ddldiagnosis = {\r\n              diagnosis_name: \"\",\r\n              diagnosis_id: \"\",\r\n            };\r\n            this.pastMedicalHistory.ddldiagnosis.diagnosis_id = isDiagnosisExist[0].diagnosis_id;\r\n          }\r\n        }\r\n        // diagnosis is exist check end\r\n\r\n        var isDuplicate = this.pastMedicalHistoryList.filter(function (el) {\r\n          return el.diagnosis_id == this.pastMedicalHistory.ddldiagnosis.diagnosis_id;\r\n        }, this);\r\n        this.pastMedicalHistory.diagnosis_id = this.pastMedicalHistory.ddldiagnosis.diagnosis_id;\r\n        if (isDuplicate.length == 0) {\r\n          let result = await this.patientProfileService.pastHistorySave(this.pastMedicalHistory);\r\n          if (result.status === 201) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            this.getPastHistoryByPatientId(this.pastMedicalHistory.patient_id);\r\n            this.hideDialog();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        } else {\r\n          this.hideDialog();\r\n        }\r\n      }\r\n    },\r\n    confirmDeletePastMedicalHistory(data) {\r\n      this.$confirm.require({\r\n        message: 'Do you want to delete this record?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => {\r\n          this.deletePastMedicalHistory(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    async deletePastMedicalHistory(data) {\r\n      let result = await this.patientProfileService.pastHistoryDelete(data);\r\n      if (result.status === 202) {\r\n        this.getPastHistoryByPatientId(data.patient_id)\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Medicine History\r\n    // Get Previous Medicine History\r\n    getMedicineHistoryByPatientId(patient_id) {\r\n      this.currentMedications.patient_id = patient_id;\r\n      this.patientProfileService.getCurrentMedicationsByPatientId(patient_id).then((data) => (this.currentMedicationsList = data.data));\r\n    },\r\n    // Add Medicine History\r\n    newMedicineHistory() {\r\n      this.currentMedicationsDialog = true;\r\n    },\r\n    async addCurrentMedications() {\r\n      this.submitted = true;\r\n      if (this.treatmentSetup.type == 'Medicine History') {\r\n\r\n        if(this.treatmentSetup.ddltreatment_dose){\r\n          await this.addDose();\r\n          this.treatmentSetup.treatment_dose_id = this.dose.value;\r\n        }\r\n        if(this.treatmentSetup.ddltreatment_rules){\r\n          await this.addRule();\r\n          this.treatmentSetup.treatment_rules_id = this.rule.value;\r\n        }\r\n        if(this.treatmentSetup.ddltreatment_duration){\r\n          await this.addDuration();\r\n          this.treatmentSetup.treatment_duration_id = this.duration.value;\r\n        }\r\n\r\n        this.treatmentSetup.medicine_id = this.treatmentSetup.ddlmedicine.value;\r\n      }\r\n      this.treatmentSetup.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.treatmentSetup.ddlmedicine && this.treatmentSetup.type == 'Medicine History') {\r\n        return;\r\n      } else if (!this.treatmentSetup.description && this.treatmentSetup.type == 'Medical History') {\r\n        return;\r\n      } else if (!this.treatmentSetup.patient_id) {\r\n        return;\r\n      } else if (this.treatmentSetup.type == 'Medicine History' && this.validation.isIdExists(this.currentMedicationsList, 'medicine_id', this.treatmentSetup.medicine_id, 'patient_current_medications_id', this.treatmentSetup.patient_current_medications_id, this)) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.currentMedicationsSave(this.treatmentSetup);\r\n        if (result.status === 201) {\r\n          this.getMedicineHistoryByPatientId(this.treatmentSetup.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    confirmDeleteCurrentMedications(data) {\r\n      this.$confirm.require({\r\n        message: 'Do you want to delete this record?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => {\r\n          this.deleteCurrentMedications(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    async deleteCurrentMedications(data) {\r\n      let result = await this.patientProfileService.currentMedicationsDelete(data);\r\n      if (result.status === 202) {\r\n        this.getMedicineHistoryByPatientId(data.patient_id)\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n  },\r\n};"]}]}