{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\NurseDashboard.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\NurseDashboard.js","mtime":1673946128508},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\babel.config.js","mtime":1624271518206},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJGOi9TVk4gUFJPSkVDVFMvRVJQX0hvc3BpdGFsX0NsaWVudC90cnVuay9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCBEYXNoYm9hcmRTZXJ2aWNlIGZyb20gIi4uLy4uL3NlcnZpY2UvY29tcG9uZW50cy9EYXNoYm9hcmRTZXJ2aWNlIjsKaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvdGFsUmVnaXN0ZXJlZE51cnNlczogMCwKICAgICAgdG90YWxBY3RpdmVOdXJzZXM6IDAsCiAgICAgIHRvdGFsQXZhaWxhYmxlQmVkOiAwLAogICAgICB0b3RhbE9jY3VwaWVkQmVkOiAwLAogICAgICB0b2RheXNOdXJzZVJvc3RlcmluZ0xpc3Q6IFtdLAogICAgICB1cGNvbWluZ051cnNlUm9zdGVyaW5nTGlzdDogW10gLy8gY2hhcnQKICAgICAgLy8gY2hhcnREYXRhOiB7fSwKICAgICAgLy8gbGlnaHRPcHRpb25zOiB7fSwKICAgICAgLy8gZ2VuZGVyRGF0YToge30sCiAgICAgIC8vIGdlbmRlck9wdGlvbnM6IHt9LAogICAgICAvL3N1Ym1pdHRlZDogZmFsc2UsCgogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuZGFzaGJvYXJkU2VydmljZSA9IG5ldyBEYXNoYm9hcmRTZXJ2aWNlKCk7CiAgICB2YXIgZnJvbURhdGUgPSBtb21lbnQoU3RyaW5nKG5ldyBEYXRlKCkpKS5mb3JtYXQoIllZWVktTU0tREQiKTsKICAgIHZhciB1cGZyb21kYXRlID0gbW9tZW50KFN0cmluZyhuZXcgRGF0ZShuZXcgRGF0ZSgpLnNldERhdGUobmV3IERhdGUoKS5nZXREYXRlKCkgKyAxKSkpKS5mb3JtYXQoIllZWVktTU0tREQiKTsKICAgIHZhciB1cHRvZGF0ZSA9IG1vbWVudChTdHJpbmcobmV3IERhdGUobmV3IERhdGUoKS5zZXREYXRlKG5ldyBEYXRlKCkuZ2V0RGF0ZSgpICsgNjApKSkpLmZvcm1hdCgiWVlZWS1NTS1ERCIpOwogICAgdGhpcy5kYXNoYm9hcmRTZXJ2aWNlLm51cnNlR2V0QWxsQWRtaW4oZnJvbURhdGUsIGZyb21EYXRlLCB1cGZyb21kYXRlLCB1cHRvZGF0ZSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXR1cm4gX3RoaXMuZ2V0Rm9ybWF0dGVkT1REYXNoYm9hcmQoZGF0YS5kYXRhKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0Rm9ybWF0dGVkT1REYXNoYm9hcmQ6IGZ1bmN0aW9uIGdldEZvcm1hdHRlZE9URGFzaGJvYXJkKGRhdGEpIHsKICAgICAgdmFyIG51cnNlRGFzaGJvYXJkSW5mbyA9IEpTT04ucGFyc2UoZGF0YS5udXJzZURhc2hib2FyZEluZm8pOwogICAgICB0aGlzLnRvdGFsUmVnaXN0ZXJlZE51cnNlcyA9IG51cnNlRGFzaGJvYXJkSW5mb1swXS5udXJzZXM7CiAgICAgIHRoaXMudG90YWxBdmFpbGFibGVCZWQgPSBudXJzZURhc2hib2FyZEluZm9bMF0uYXZhaWxhYmxlYmVkOwogICAgICB0aGlzLnRvdGFsT2NjdXBpZWRCZWQgPSBudXJzZURhc2hib2FyZEluZm9bMF0ub2NjdXBpZWRiZWQ7CiAgICAgIHRoaXMudG9kYXlzTnVyc2VSb3N0ZXJpbmdMaXN0ID0gZGF0YS50b2RheXNEdXR5TGlzdDsKICAgICAgdGhpcy51cGNvbWluZ051cnNlUm9zdGVyaW5nTGlzdCA9IGRhdGEudXBjb21pbmdEdXR5TGlzdDsgLy8gZGlzdGluY3QgbnVyc2Vfbm8gLSBtdWx0aXBsZSBkdXR5IGF0IGEgdGltZSAKCiAgICAgIHZhciByb3N0ZXJpbmdMaXN0ID0gX3RvQ29uc3VtYWJsZUFycmF5KG5ldyBNYXAodGhpcy50b2RheXNOdXJzZVJvc3RlcmluZ0xpc3QubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIFtpdGVtWyJudXJzZV9ubyJdLCBpdGVtXTsKICAgICAgfSkpLnZhbHVlcygpKTsKCiAgICAgIHRoaXMudG90YWxBY3RpdmVOdXJzZXMgPSByb3N0ZXJpbmdMaXN0Lmxlbmd0aDsKICAgIH0sCiAgICAvLwogICAgZm9ybWF0RGF0ZVRpbWU6IGZ1bmN0aW9uIGZvcm1hdERhdGVUaW1lKHZhbHVlKSB7CiAgICAgIHJldHVybiBtb21lbnQoU3RyaW5nKHZhbHVlKSkuZm9ybWF0KCJNTS9ERC9ZWVlZIGg6bW06c3MgYSIpOwogICAgfSwKICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUodmFsdWUpIHsKICAgICAgcmV0dXJuIG1vbWVudChTdHJpbmcodmFsdWUpKS5mb3JtYXQoIk1NL0REL1lZWVkiKTsKICAgIH0gLy8gZ2VuZGVyV2lzZU9uVHJlYXRtZW50UGF0aWVudCgpIHsKICAgIC8vICAgICAvLyBjaGFydAogICAgLy8gICAgIHRoaXMuZ2VuZGVyRGF0YSA9IHJlZih7CiAgICAvLyAgICAgICAgIGxhYmVsczogWydNYWxlJywgJ0ZlbWFsZScsICdUaGlyZCddLAogICAgLy8gICAgICAgICBkYXRhc2V0czogWwogICAgLy8gICAgICAgICAgICAgewogICAgLy8gICAgICAgICAgICAgICAgIGRhdGE6IFt0aGlzLm1hbGVDb3VudCwgdGhpcy5mZW1hbGVDb3VudCwgdGhpcy50aGlyZENvdW50XSwKICAgIC8vICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsiIzM2QTJFQiIsICIjRkY2Mzg0IiwgIiNGRkNFNTYiXSwKICAgIC8vICAgICAgICAgICAgICAgICBob3ZlckJhY2tncm91bmRDb2xvcjogWyIjMzZBMkVCIiwgIiNGRjYzODQiLCAiI0ZGQ0U1NiJdCiAgICAvLyAgICAgICAgICAgICB9CiAgICAvLyAgICAgICAgIF0KICAgIC8vICAgICB9KTsKICAgIC8vICAgICB0aGlzLmdlbmRlck9wdGlvbnMgPSByZWYoewogICAgLy8gICAgICAgICBwbHVnaW5zOiB7CiAgICAvLyAgICAgICAgICAgICBsZWdlbmQ6IHsKICAgIC8vICAgICAgICAgICAgICAgICBsYWJlbHM6IHsKICAgIC8vICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjNDk1MDU3JwogICAgLy8gICAgICAgICAgICAgICAgIH0KICAgIC8vICAgICAgICAgICAgIH0KICAgIC8vICAgICAgICAgfQogICAgLy8gICAgIH0pOwogICAgLy8gfQoKICB9Cn07"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/nurse-panel/NurseDashboard.js"],"names":["DashboardService","moment","data","totalRegisteredNurses","totalActiveNurses","totalAvailableBed","totalOccupiedBed","todaysNurseRosteringList","upcomingNurseRosteringList","created","dashboardService","fromDate","String","Date","format","upfromdate","setDate","getDate","uptodate","nurseGetAllAdmin","then","getFormattedOTDashboard","methods","nurseDashboardInfo","JSON","parse","nurses","availablebed","occupiedbed","todaysDutyList","upcomingDutyList","rosteringList","Map","map","item","values","length","formatDateTime","value","formatDate"],"mappings":"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","sourcesContent":["import DashboardService from \"../../service/components/DashboardService\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            totalRegisteredNurses: 0,\r\n            totalActiveNurses: 0,\r\n            totalAvailableBed: 0,\r\n            totalOccupiedBed: 0,\r\n            todaysNurseRosteringList: [],\r\n            upcomingNurseRosteringList: [],\r\n\r\n            // chart\r\n            // chartData: {},\r\n            // lightOptions: {},\r\n            // genderData: {},\r\n            // genderOptions: {},\r\n            //submitted: false,\r\n        };\r\n    },\r\n    created() {\r\n        this.dashboardService = new DashboardService();\r\n\r\n        var fromDate = moment(String(new Date())).format(\"YYYY-MM-DD\");\r\n        var upfromdate = moment(String(new Date(new Date().setDate(new Date().getDate() + 1)))).format(\"YYYY-MM-DD\");\r\n        var uptodate = moment(String(new Date(new Date().setDate(new Date().getDate() + 60)))).format(\"YYYY-MM-DD\");\r\n\r\n        this.dashboardService\r\n            .nurseGetAllAdmin(\r\n                fromDate,\r\n                fromDate,\r\n                upfromdate,\r\n                uptodate\r\n            )\r\n            .then((data) => this.getFormattedOTDashboard(data.data));\r\n    },\r\n    methods: {\r\n        getFormattedOTDashboard(data) {\r\n            var nurseDashboardInfo = JSON.parse(data.nurseDashboardInfo)\r\n            this.totalRegisteredNurses = nurseDashboardInfo[0].nurses;\r\n            this.totalAvailableBed = nurseDashboardInfo[0].availablebed;\r\n            this.totalOccupiedBed = nurseDashboardInfo[0].occupiedbed;\r\n\r\n            this.todaysNurseRosteringList = data.todaysDutyList;\r\n            this.upcomingNurseRosteringList = data.upcomingDutyList;\r\n\r\n            // distinct nurse_no - multiple duty at a time \r\n            const rosteringList = [\r\n                ...new Map(this.todaysNurseRosteringList.map((item) => [item[\"nurse_no\"], item])).values(),\r\n            ];\r\n            \r\n            this.totalActiveNurses = rosteringList.length;\r\n        },\r\n\r\n        //\r\n        formatDateTime(value) {\r\n            return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n        },\r\n        formatDate(value) {\r\n            return moment(String(value)).format(\"MM/DD/YYYY\");\r\n        },\r\n\r\n        // genderWiseOnTreatmentPatient() {\r\n        //     // chart\r\n        //     this.genderData = ref({\r\n        //         labels: ['Male', 'Female', 'Third'],\r\n        //         datasets: [\r\n        //             {\r\n        //                 data: [this.maleCount, this.femaleCount, this.thirdCount],\r\n        //                 backgroundColor: [\"#36A2EB\", \"#FF6384\", \"#FFCE56\"],\r\n        //                 hoverBackgroundColor: [\"#36A2EB\", \"#FF6384\", \"#FFCE56\"]\r\n        //             }\r\n        //         ]\r\n        //     });\r\n\r\n        //     this.genderOptions = ref({\r\n        //         plugins: {\r\n        //             legend: {\r\n        //                 labels: {\r\n        //                     color: '#495057'\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     });\r\n        // }\r\n    },\r\n};"]}]}