{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\cash-counter\\AdmissionPayment.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\cash-counter\\AdmissionPayment.js","mtime":1663504853783},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\babel.config.js","mtime":1624271518206},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/cash-counter/AdmissionPayment.js"],"names":["PatientPaymentService","PaymentTypeSetupService","IPDReportService","CommonService","moment","FilterMatchMode","FilterOperator","data","isPayment","button","isCash","isCashPaid","paymentTypeList","totalPtyAmount","admission_no","patientPayment","cdpayment_date","String","Date","format","total_amount","ptypaid_amount","total_amount_inf","paymentTypeCash","invoice_id","aPatient","lstPatientPaymentDetails","discount_amount","discount_percent","refund_amount","isRefund","ipdServiceList","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","submitted","created","patientPaymentService","paymentTypeSetupService","iPDReportService","commonService","getAll","then","admission_id_for_payment","localStorage","getItem","findIPDPaymentInfo","admission_no_for_payment_from_admissionlist","methods","printAdmissionPayment","Id","GetAdmissionPayment","Downloadfile","printDischargeBillSummary","GetDischargeBillSummary","paymentReset","ddlPaymentType","reset","cash_paid_amount","removeItem","filterPaymentType","filter","el","payment_type_id","active","getFormatted","obj","JSON","parse","length","$toast","add","severity","summary","detail","life","admission_id","discharge_summary","isReadyForSettlement","reffered_by_id","patient_id","first_name","contact_no","bill_amount","due_amount","advance_amount","Math","abs","cdadmission_date","admission_date","serviceList","getIPDPableByadmission_no","paymentTypeIsExist","aPaymentType","addPaymentType","_payment_type_name","payment_type_name","paid_amount","parseInt","push","gridSum","deleteFromList","forEach","element","dueCalculate","withOutLineDiscountTotalServiceCost","withLineDiscountTotalServiceCost","charge","calculateChangeAmount","cash_amount","change_amount","getDiscountPercent","ceil","getDiscountAmount","getRefundAmt","isSettlement","payment_date","addIPD","result","status","$router","res","calculatePerInvestigationDiscountAmount","type","admission_bed_service_package_details_id","calculatePerInvestigationDiscountPercent"],"mappings":"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","sourcesContent":["import PatientPaymentService from \"../../service/cash-counter/PatientPaymentService\";\r\nimport PaymentTypeSetupService from \"../../service/setup/PaymentTypeSetupService\";\r\nimport IPDReportService from \"../../service/report/IPDReportService\";\r\nimport CommonService from \"../../service/CommonService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isPayment: true,\r\n      //addList: false,\r\n      button: false,\r\n      isCash: false,\r\n      //isPaid: \"\",\r\n      isCashPaid: \"\",\r\n      //isDueExist: \"\",\r\n      //isExist: \"\",\r\n      paymentTypeList: [],\r\n      totalPtyAmount: 0,\r\n      admission_no: \"\",\r\n      patientPayment: {\r\n        cdpayment_date: moment(String(new Date())).format(\r\n          \"MM/DD/YYYY\"\r\n        ),\r\n        total_amount: 0,\r\n        ptypaid_amount: 0,\r\n        total_amount_inf: 0,\r\n        paymentTypeCash: \"1\",\r\n        invoice_id: \"\",\r\n        aPatient: {},\r\n        lstPatientPaymentDetails: [],\r\n        discount_amount: 0,\r\n        discount_percent: 0,\r\n        refund_amount: 0,\r\n        isRefund: false,\r\n        ipdServiceList: [],\r\n      },\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n      submitted: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.patientPaymentService = new PatientPaymentService();\r\n    this.paymentTypeSetupService = new PaymentTypeSetupService();\r\n    this.iPDReportService = new IPDReportService();\r\n    this.commonService = new CommonService();\r\n\r\n    this.paymentTypeSetupService\r\n      .getAll()\r\n      .then((data) => (this.paymentTypeList = data.data));\r\n\r\n    var admission_id_for_payment = localStorage.getItem('admission_id_for_payment');\r\n    if (admission_id_for_payment) {\r\n\r\n      this.admission_no = admission_id_for_payment;\r\n      //localStorage.removeItem('admission_id_for_payment');\r\n      this.findIPDPaymentInfo();\r\n    }\r\n\r\n    var admission_no_for_payment_from_admissionlist = localStorage.getItem('admission_no_for_payment_from_admissionlist');\r\n    if (admission_no_for_payment_from_admissionlist) {\r\n      this.admission_no = admission_no_for_payment_from_admissionlist;\r\n      //localStorage.removeItem('admission_no_for_payment_from_admissionlist');\r\n      this.findIPDPaymentInfo();\r\n    }\r\n  },\r\n  methods: {\r\n    printAdmissionPayment(Id) {\r\n      this.iPDReportService.GetAdmissionPayment(Id, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n    },\r\n    printDischargeBillSummary(Id) {\r\n      this.iPDReportService.GetDischargeBillSummary(Id, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n    },\r\n    paymentReset() {\r\n      this.isPayment = true;\r\n      this.patientPayment.ddlPaymentType = \"\";\r\n      //this.isExist = \"\";\r\n    },\r\n    reset() {\r\n      this.isPayment = true;\r\n      //this.addList = false;\r\n      this.button = false;\r\n      this.isCash = false;\r\n      //this.isExist = \"\";\r\n      //this.isPaid = \"\";\r\n      this.isCashPaid = \"\";\r\n      this.totalPtyAmount = 0;\r\n      this.patientPayment = {\r\n        cdpayment_date: moment(String(new Date())).format(\r\n          \"MM/DD/YYYY\"\r\n        ),\r\n        total_amount: 0,\r\n        ptypaid_amount: 0,\r\n        total_amount_inf: 0,\r\n        paymentTypeCash: \"1\",\r\n        cash_paid_amount: 0,\r\n        invoice_id: \"\",\r\n        aPatient: {},\r\n        lstPatientPaymentDetails: [],\r\n        discount_amount: 0,\r\n        discount_percent: 0,\r\n        refund_amount: 0,\r\n        isRefund: false,\r\n        ipdServiceList: [],\r\n      };\r\n      this.submitted = false;\r\n      localStorage.removeItem('admission_no_for_payment_from_admissionlist');\r\n    },\r\n    filterPaymentType() {\r\n      return this.paymentTypeList.filter(function (el) {\r\n        return el.payment_type_id != 1 && el.active == true;\r\n      }, this);\r\n    },\r\n    getFormatted(obj) {\r\n      var data = JSON.parse(obj.data);\r\n      //this.reset();\r\n      if (data.length == 0) {\r\n        // this.isDueExist = \"Not due!\";\r\n        this.$toast.add({\r\n          severity: \"warn\",\r\n          summary: \"Warn Message\",\r\n          detail: \"Not due!\",\r\n          life: 10000,\r\n        });\r\n        this.patientPayment = {\r\n          cdpayment_date: moment(String(new Date())).format(\r\n            \"MM/DD/YYYY\"\r\n          ),\r\n          total_amount: 0,\r\n          paymentTypeCash: \"1\",\r\n          invoice_id: \"\",\r\n          aPatient: {},\r\n          lstPatientPaymentDetails: [],\r\n          refund_amount: 0,\r\n          isRefund: false,\r\n          ipdServiceList: [],\r\n        };\r\n      } else {\r\n        //this.isDueExist = \"\";\r\n        this.patientPayment.refund_amount = 0;\r\n        this.patientPayment.isRefund = false;\r\n        this.patientPayment.invoice_id = data[0].invoice_id;\r\n        this.patientPayment.admission_id = data[0].admission_id;\r\n        //this.patientPayment.discharge_summary = data[0].discharge_summary;\r\n        if (data[0].discharge_summary != null) {\r\n          this.patientPayment.isReadyForSettlement = true;\r\n        }\r\n        if (data[0].discharge_summary == null) {\r\n          this.patientPayment.isReadyForSettlement = false;\r\n        }\r\n        this.patientPayment.reffered_by_id = data[0].reffered_by_id;\r\n        this.patientPayment.aPatient.patient_id = data[0].patient_id;\r\n        this.patientPayment.aPatient.first_name = data[0].first_name;\r\n        this.patientPayment.aPatient.contact_no = data[0].contact_no;\r\n\r\n        this.patientPayment.bill_amount = data[0].total_amount;\r\n        this.patientPayment.total_amount = data[0].due_amount;\r\n        if (data[0].due_amount < 0) {\r\n          this.patientPayment.cash_paid_amount = 0;\r\n          this.patientPayment.ptypaid_amount = 0;\r\n          this.patientPayment.advance_amount = data[0].total_amount + Math.abs(data[0].due_amount);\r\n        } else {\r\n          this.patientPayment.cash_paid_amount = data[0].due_amount;\r\n          this.patientPayment.ptypaid_amount = data[0].due_amount;\r\n        }\r\n\r\n        this.patientPayment.cdadmission_date = moment(\r\n          String(data[0].admission_date)\r\n        ).format(\"YYYY-MM-DD\");\r\n\r\n        //\r\n        this.patientPayment.ipdServiceList = JSON.parse(obj.serviceList);\r\n      }\r\n    },\r\n    findIPDPaymentInfo() {\r\n      this.reset();\r\n      this.patientPaymentService\r\n        .getIPDPableByadmission_no(this.admission_no)\r\n        .then((data) => this.getFormatted(data.data));\r\n    },\r\n    paymentTypeIsExist() {\r\n      var aPaymentType = this.patientPayment.lstPatientPaymentDetails.filter(\r\n        function (el) {\r\n          return (\r\n            el.payment_type_id ===\r\n            this.patientPayment.ddlPaymentType.payment_type_id\r\n          );\r\n        },\r\n        this\r\n      );\r\n\r\n      if (aPaymentType.length) {\r\n        //this.isExist = \"This Payment Type already added\";\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Error Message\",\r\n          detail: \"This Payment Type already added\",\r\n          life: 10000,\r\n        });\r\n        this.isPayment = true;\r\n        return;\r\n      } else {\r\n        //this.isExist = \"\";\r\n        this.isPayment = false;\r\n      }\r\n    },\r\n    addPaymentType() {\r\n      this.submitted = true;\r\n      var aPaymentType = this.patientPayment.lstPatientPaymentDetails.filter(\r\n        function (el) {\r\n          return (\r\n            el.payment_type_id ===\r\n            this.patientPayment.ddlPaymentType.payment_type_id\r\n          );\r\n        },\r\n        this\r\n      );\r\n\r\n      if (aPaymentType.length) {\r\n        //this.isExist = \"This Payment Type already added\";\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Error Message\",\r\n          detail: \"This Payment Type already added\",\r\n          life: 10000,\r\n        });\r\n        //this.isPayment = true;\r\n        return;\r\n      } else {\r\n        if (!this.patientPayment.aPatient.first_name) {\r\n          return;\r\n        } else if (!this.patientPayment.cdpayment_date) {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error Message\",\r\n            detail: \"Payment Date is required\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (!this.patientPayment.ddlPaymentType) {\r\n          //this.isExist = \"Payment Type is required.\";\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error Message\",\r\n            detail: \"Payment Type is required\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (\r\n          this.patientPayment.ptypaid_amount <= 0 ||\r\n          !this.patientPayment.ptypaid_amount\r\n        ) {\r\n          //this.isPaid = \"Non-Cash Paid Amt is required\";\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error Message\",\r\n            detail: \"Non-Cash Paid Amt is required\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (this.patientPayment.refund_amount > 0) {\r\n          //this.isPaid = \"You have Refund Amt\";\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error Message\",\r\n            detail: \"You have Refund Amt\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (this.patientPayment.isReadyForSettlement && this.patientPayment.total_amount <= 0) {\r\n          //this.isPaid = \"You have Refund Amt\";\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error Message\",\r\n            detail: \"You have Refund Amt\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        }\r\n        // else if (\r\n        //   this.patientPayment.cash_paid_amount <= 0 ||\r\n        //   this.patientPayment.cash_paid_amount <\r\n        //   this.patientPayment.ptypaid_amount\r\n        // ) {\r\n        //   this.isPaid = \"Exceed amount!\";\r\n        //   return;\r\n        // } \r\n        else {\r\n          //this.isExist = \"\";\r\n          //this.isPaid = \"\";\r\n\r\n          var obj = {\r\n            payment_type_id: this.patientPayment.ddlPaymentType.payment_type_id,\r\n            _payment_type_name:\r\n              this.patientPayment.ddlPaymentType.payment_type_name,\r\n\r\n            paid_amount: parseInt(this.patientPayment.ptypaid_amount),\r\n          };\r\n\r\n          this.patientPayment.lstPatientPaymentDetails.push(obj);\r\n\r\n          // this.totalPtyAmount =\r\n          //   this.totalPtyAmount + parseInt(this.patientPayment.ptypaid_amount);\r\n\r\n          // this.patientPayment.cash_paid_amount =\r\n          //   this.patientPayment.total_amount - this.totalPtyAmount;\r\n          this.gridSum();\r\n        }\r\n      }\r\n\r\n      //this.addList = true;\r\n      this.button = true;\r\n    },\r\n\r\n    deleteFromList(data) {\r\n      this.patientPayment.lstPatientPaymentDetails =\r\n        this.patientPayment.lstPatientPaymentDetails.filter(function (el) {\r\n          return el.payment_type_id != data.payment_type_id;\r\n        }, this);\r\n\r\n      // this.patientPayment.cash_paid_amount =\r\n      //   this.patientPayment.cash_paid_amount + parseInt(data.paid_amount);\r\n\r\n      if (!this.patientPayment.lstPatientPaymentDetails.length) {\r\n        //this.addList = false;\r\n        this.button = false;\r\n      }\r\n      this.gridSum();\r\n    },\r\n    gridSum() {\r\n      this.patientPayment.total_amount_inf = 0;\r\n      this.patientPayment.lstPatientPaymentDetails.forEach((element) => {\r\n        this.patientPayment.total_amount_inf += element.paid_amount;\r\n      });\r\n      this.patientPayment.cash_paid_amount = 0;\r\n      //this.patientPayment.total_amount - this.patientPayment.total_amount_inf - this.patientPayment.discount_amount;\r\n      if (this.patientPayment.cash_paid_amount < 0) {\r\n        this.patientPayment.cash_paid_amount = 0;\r\n      }\r\n      this.dueCalculate();\r\n    },\r\n    dueCalculate() {\r\n      // Line Discount Start\r\n      var withOutLineDiscountTotalServiceCost = 0;\r\n      var withLineDiscountTotalServiceCost = 0;\r\n      this.patientPayment.ipdServiceList.forEach(\r\n        (element) => {\r\n          withOutLineDiscountTotalServiceCost = withOutLineDiscountTotalServiceCost + element.charge;\r\n          withLineDiscountTotalServiceCost = withLineDiscountTotalServiceCost + element.total_amount;\r\n        }\r\n      );\r\n      // Line Discount End\r\n\r\n      this.patientPayment.due_amount =\r\n        this.patientPayment.total_amount -\r\n        this.patientPayment.cash_paid_amount -\r\n        this.patientPayment.total_amount_inf -\r\n        this.patientPayment.discount_amount - withOutLineDiscountTotalServiceCost + withLineDiscountTotalServiceCost;\r\n\r\n      if (this.patientPayment.due_amount < 0) {\r\n        this.patientPayment.refund_amount = Math.abs(this.patientPayment.due_amount);\r\n      } else {\r\n        this.patientPayment.refund_amount = 0;\r\n      }\r\n      // if (\r\n      //   this.patientPayment.total_amount < this.patientPayment.cash_paid_amount\r\n      // ) {\r\n      //   this.isCashPaid = \"Exceed amount!\";\r\n      // } else {\r\n      //   this.isCashPaid = \"\";\r\n      // }\r\n    },\r\n    calculateChangeAmount() {\r\n      if (this.patientPayment.cash_amount.length) {\r\n        this.patientPayment.change_amount =\r\n          this.patientPayment.cash_amount -\r\n          this.patientPayment.cash_paid_amount;\r\n      } else {\r\n        this.patientPayment.change_amount = 0;\r\n      }\r\n    },\r\n    getDiscountPercent() {\r\n      this.patientPayment.discount_percent = Math.ceil(\r\n        (this.patientPayment.discount_amount /\r\n          this.patientPayment.bill_amount) *\r\n        100);\r\n\r\n      this.gridSum();\r\n    },\r\n    getDiscountAmount() {\r\n      this.patientPayment.discount_amount =\r\n        (this.patientPayment.bill_amount *\r\n          this.patientPayment.discount_percent) /\r\n        100;\r\n\r\n      this.gridSum();\r\n    },\r\n    getRefundAmt() {\r\n      this.gridSum();\r\n\r\n      if (!this.patientPayment.isSettlement && this.patientPayment.total_amount < 0) {\r\n        //this.patientPayment.refund_amount = Math.abs(this.patientPayment.total_amount);\r\n        this.patientPayment.isRefund = true;\r\n      } else {\r\n        this.patientPayment.refund_amount = 0;\r\n        this.patientPayment.isRefund = false;\r\n      }\r\n    },\r\n    async add() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.patientPayment.aPatient.first_name) {\r\n          return;\r\n        } else if (!this.patientPayment.cdpayment_date) {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error Message\",\r\n            detail: \"Payment Date is required\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (!this.patientPayment.invoice_id) {\r\n          return;\r\n        } else if (this.patientPayment.cash_paid_amount <= 0 && !this.patientPayment.isReadyForSettlement) {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error\",\r\n            detail: \"Enter amount!\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (this.patientPayment.isSettlement && this.patientPayment.due_amount > 0) {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error\",\r\n            detail: \"Cannot settlement with due amount!\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (this.isCashPaid) {\r\n          return;\r\n        } else if (this.patientPayment.isRefund && this.patientPayment.refund_amount > 0 && this.patientPayment.cash_paid_amount > 0) {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error\",\r\n            detail: \"You have Refund Amt\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else if (this.patientPayment.isReadyForSettlement && this.patientPayment.total_amount <= 0 && this.patientPayment.cash_paid_amount > 0) {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Error\",\r\n            detail: \"You have Refund Amt\",\r\n            life: 10000,\r\n          });\r\n          return;\r\n        } else {\r\n          this.patientPayment.payment_date = moment(\r\n            String(this.patientPayment.cdpayment_date)\r\n          ).format(\"YYYY-MM-DD\");\r\n\r\n          if (this.patientPayment.cash_paid_amount > 0 && !this.isCash) {\r\n            this.patientPayment.lstPatientPaymentDetails.push({\r\n              payment_type_id: this.patientPayment.paymentTypeCash,\r\n\r\n              paid_amount: this.patientPayment.cash_paid_amount,\r\n            });\r\n\r\n            this.isCash = true;\r\n          }\r\n          this.patientPayment.paid_amount =\r\n            parseInt(this.patientPayment.cash_paid_amount) +\r\n            parseInt(this.patientPayment.total_amount_inf);\r\n\r\n          let result = await this.patientPaymentService.addIPD(\r\n            this.patientPayment, this\r\n          );\r\n          if (result.status === 200) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            if (this.patientPayment.isSettlement) {\r\n              this.printDischargeBillSummary(result.data)\r\n            } else {\r\n              this.printAdmissionPayment(result.data);\r\n            }\r\n\r\n            var admission_no_for_payment_from_admissionlist = localStorage.getItem('admission_no_for_payment_from_admissionlist');\r\n            if (admission_no_for_payment_from_admissionlist) {\r\n              localStorage.removeItem('admission_no_for_payment_from_admissionlist');\r\n              this.$router.push(\"/patient-admission-list\");\r\n            }\r\n\r\n            var admission_id_for_payment = localStorage.getItem('admission_id_for_payment');\r\n            if (admission_id_for_payment) {\r\n              localStorage.removeItem('admission_id_for_payment');\r\n              this.$router.push(\"/patient-admission-form\");\r\n            }\r\n            this.reset();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n            this.reset();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      }\r\n    },\r\n\r\n    // line discount\r\n    calculatePerInvestigationDiscountAmount(data) {\r\n      this.patientPayment.ipdServiceList.forEach(\r\n        (element) => {\r\n          if (element.type == data.type && element.admission_bed_service_package_details_id == data.admission_bed_service_package_details_id) {\r\n            element.discount_amount = (element.charge * element.discount_percent) / 100;\r\n            element.total_amount = element.charge - element.discount_amount;\r\n          }\r\n        }\r\n      );\r\n      this.gridSum();\r\n    },\r\n    calculatePerInvestigationDiscountPercent(data) {\r\n      this.patientPayment.ipdServiceList.forEach(\r\n        (element) => {\r\n          if (element.type == data.type && element.admission_bed_service_package_details_id == data.admission_bed_service_package_details_id) {\r\n            element.discount_percent = (element.discount_amount / element.charge) * 100;\r\n            //var discount_amount = (element.charge * element.discount_percent) / 100;\r\n            element.total_amount = element.charge - element.discount_amount;\r\n          }\r\n        }\r\n      );\r\n      this.gridSum();\r\n    },\r\n  },\r\n};"]}]}