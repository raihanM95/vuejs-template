{"remainingRequest":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationSampleDiagnosis.js","dependencies":[{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationSampleDiagnosis.js","mtime":1638685310794},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/DiagnosticCenterManagement_Client/trunk/src/scripts/collection-zone/InvestigationSampleDiagnosis.js"],"names":["CommonService","TestParameterSetupService","InvestigationSampleDiagnosisService","moment","FilterMatchMode","FilterOperator","data","dataList","testParameterList","investigationSampleDiagnosisList","diagnosisInvestigationStatusList","investigationSampleDiagnosis","cdfromdate","String","Date","format","cdtodate","investigation_status","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","testParameterSetupService","investigationSampleDiagnosisService","commonService","GetDiagnosisInvestigationStatus","then","show","methods","reset","fromdate","todate","getDynamic","resultSubmitConfirm","$confirm","require","message","header","icon","accept","resultSubmit","reject","resultEditConfirm","sendToVerifyConfirm","sendToVerify","findBarcode","aDiagnosis","filter","el","barcode_or_level","barcode","result","current_sample_collection_id","sample_collection_id","getById","investigation_id","diagnosisName","_investingation_name","patientName","aPatient","first_name","last_name","patientContact","contact_no","patientRegistration","registration_no","resultEdit","getDiagnosisResultById","getParameterFormatted","result_entry_note","cancel","forEach","element","requred","actual_result_value","$toast","add","severity","summary","detail","life","saveDiagnosisResult","status","res","sendResultToVerify","formatDate"],"mappings":"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","sourcesContent":["import CommonService from \"../../service/CommonService\";\r\nimport TestParameterSetupService from \"../../service/setup/TestParameterSetupService\";\r\nimport InvestigationSampleDiagnosisService from \"../../service/collection-zone/InvestigationSampleDiagnosisService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataList: true,\r\n      testParameterList: [],\r\n      investigationSampleDiagnosisList: [],\r\n      diagnosisInvestigationStatusList: [],\r\n      investigationSampleDiagnosis: {\r\n        // cdfromdate: moment(\r\n        //   String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n        // ).format(\"MM/DD/YYYY\"),\r\n        cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        investigation_status: \"Waiting for Result\",\r\n      },\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.testParameterSetupService = new TestParameterSetupService();\r\n    this.investigationSampleDiagnosisService =\r\n      new InvestigationSampleDiagnosisService();\r\n    this.commonService = new CommonService();\r\n\r\n    this.commonService\r\n      .GetDiagnosisInvestigationStatus()\r\n      .then((data) => (this.diagnosisInvestigationStatusList = data.data));\r\n\r\n    this.show();\r\n  },\r\n  methods: {\r\n    reset() {\r\n      // this.investigationSampleDiagnosis = {\r\n      //   cdfromdate: moment(\r\n      //     String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n      //   ).format(\"MM/DD/YYYY\"),\r\n      //   cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n      //   investigation_status: \"Waiting for Result\",\r\n      // };\r\n      this.dataList = true;\r\n      this.submitted = false;\r\n\r\n      this.show();\r\n    },\r\n    show() {\r\n      this.submitted = true;\r\n      if (!this.investigationSampleDiagnosis.cdfromdate) {\r\n        return;\r\n      } else if (!this.investigationSampleDiagnosis.cdtodate) {\r\n        return;\r\n      } else if (!this.investigationSampleDiagnosis.investigation_status) {\r\n        return;\r\n      } else {\r\n        this.investigationSampleDiagnosis.fromdate = moment(\r\n          String(this.investigationSampleDiagnosis.cdfromdate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationSampleDiagnosis.todate = moment(\r\n          String(this.investigationSampleDiagnosis.cdtodate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationSampleDiagnosisService\r\n          .getDynamic(\r\n            this.investigationSampleDiagnosis.fromdate,\r\n            this.investigationSampleDiagnosis.todate,\r\n            this.investigationSampleDiagnosis.investigation_status\r\n          )\r\n          .then((data) => (this.investigationSampleDiagnosisList = data.data));\r\n      }\r\n\r\n      this.submitted = true;\r\n    },\r\n    resultSubmitConfirm() {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure submit result?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.resultSubmit();\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    resultEditConfirm() {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure edit result?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.resultSubmit();\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    sendToVerifyConfirm(data) {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure send to verify?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.sendToVerify(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    findBarcode(){\r\n       var aDiagnosis = this.investigationSampleDiagnosisList.filter(function (el) {\r\n        return el.barcode_or_level == this.investigationSampleDiagnosis.barcode;\r\n      }, this)[0];\r\n      if(aDiagnosis){\r\n        this.result(aDiagnosis);\r\n      }\r\n    },\r\n    result(data) {\r\n      this.current_sample_collection_id = data.sample_collection_id;\r\n      this.testParameterSetupService\r\n        .getById(data.investigation_id)\r\n        .then((data) => (this.testParameterList = data.data));\r\n\r\n      this.diagnosisName = data._investingation_name;\r\n      this.patientName = data.aPatient.first_name + \" \" + data.aPatient.last_name;\r\n      this.patientContact = data.aPatient.contact_no;\r\n      this.patientRegistration = data.aPatient.registration_no;\r\n      this.dataList = false;\r\n    },\r\n    resultEdit(data) {\r\n      this.investigationSampleDiagnosisService\r\n        .getDiagnosisResultById(data.sample_collection_id)\r\n        .then((data) => this.getParameterFormatted(data));\r\n        this.diagnosisName = data._investingation_name;\r\n        this.patientName = data.aPatient.first_name + data.aPatient.last_name;\r\n    },\r\n    getParameterFormatted(data) {\r\n      this.testParameterList = data.data;\r\n      this.investigationSampleDiagnosis.result_entry_note =\r\n        data.data[0].result_entry_note;\r\n        \r\n      this.dataList = false;\r\n    },\r\n    cancel() {\r\n      this.submitted = false;\r\n      this.dataList = true;\r\n    },\r\n    async resultSubmit() {\r\n      this.submitted = true;\r\n      if (this.current_sample_collection_id) {\r\n        this.testParameterList.forEach((element) => {\r\n          element.sample_collection_id = this.current_sample_collection_id;\r\n        });\r\n      }\r\n      this.requred = \"\";\r\n      this.testParameterList.forEach((element) => {\r\n        element.result_entry_note =\r\n          this.investigationSampleDiagnosis.result_entry_note;\r\n        if (!element.actual_result_value) {\r\n          this.requred = \"required\";\r\n        }\r\n      });\r\n\r\n      if (this.requred) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Required\",\r\n          detail: \"Please fill in the required fields\",\r\n          life: 10000,\r\n        });\r\n        return;\r\n      } else {\r\n        let result =\r\n          await this.investigationSampleDiagnosisService.saveDiagnosisResult(\r\n            this.testParameterList, this\r\n          );\r\n        if (result.status === 200) {\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Successfully Saved\",\r\n            life: 10000,\r\n          });\r\n          this.reset();\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Faild\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async sendToVerify(data) {\r\n      let result =\r\n        await this.investigationSampleDiagnosisService.sendResultToVerify(\r\n          data.sample_collection_id, this\r\n        );\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Send to Verify\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Faild\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}