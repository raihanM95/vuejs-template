{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\components\\PatientHistory.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\components\\PatientHistory.js","mtime":1666697129191},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/components/PatientHistory.js"],"names":["PatientProfileService","ComplaintSetupService","FoodService","OnExaminationSetupService","DietChartTemplateSetupService","DietChartSetupService","MedicineSetupService","TreatmentRulesSetupService","TreatmentDurationSetupService","TreatmentDoseSetupService","DiagnosisSetupService","CommonService","moment","Validation","FilterService","FilterMatchMode","FilterOperator","data","filteredItems","active","expandedRows","isFemale","complaintSetup","chiefComplainDialog","chiefComplain","chiefComplainList","compliantList","foodSetup","allergyDetailsDialog","allergyDetails","allergyDetailsList","foodList","allergyTypeList","onExaminationDialog","onExamination","patientOnExaminationList","onExaminationList","iOChartDialog","iOChart","iOChartList","diabetesChartDialog","diabetesChart","aAdmissionServiceDetails","diabetesChartList","diabetesMealList","dietChartDialog","dietChart","dietChartList","dietChartTemplateList","dietChartTempList","currentMedicationsDialog","currentMedications","currentMedicationsList","medicineList","treatmentRulesList","treatmentDurationList","treatmentDoseList","pastMedicalHistoryDialog","pastMedicalHistory","pastMedicalHistoryList","diagnosisList","patientHistory","lstPersonalHistory","lstFamilyHistory","lstSystemsReview","lstSubstanceUse","lstReproductiveHistory","consumedMedicineDialog","consumedMedicineList","consumedMedicine","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","patientProfileService","complaintSetupService","foodService","onExaminationSetupService","dietChartTemplateSetupService","dietChartSetupService","medicineSetupService","treatmentRulesSetupService","treatmentDurationSetupService","treatmentDoseSetupService","diagnosisSetupService","commonService","validation","methods","hideDialog","getComplainsByPatientId","patient_id","then","getComplain","getActiveCombo","addComplain","compilants_name","compliants_group_id","is_favourite","add","result","status","$toast","severity","summary","detail","res","life","searchComplain","event","setTimeout","query","trim","length","filter","item","text","toLowerCase","startsWith","newChiefComplain","addChiefComplain","JSON","parse","localStorage","getItem","toString","ddlcomplain","cdfrom_date","from_date","String","format","isComplainExist","el","complainId","isDuplicate","compilants_id","complainSave","patient_complain_id","complainUpdate","getAllergyDetailsByPatientId","getFood","addFood","food_name","searchFood","newAllergyDetails","addAllergyDetails","ddlfood","type","isFoodExist","foodId","food_id","allergyDetailsSave","patient_allergy_details_id","allergyDetailsUpdate","newOnExamination","getOnExaminationsPopup","addOnExamination","requred","popupOnExaminationsData","forEach","element","on_examination_result","onExaminationSave","patientId","getOnExaminationByPatientId","newIOChart","addIOChart","iOChartSave","getIOChartByPatientId","newDiabetesChart","addDiabetesChart","meal","before","after","diabetesChartSave","getDiabetesChartByPatientId","newDietChart","getDietChartByTemplateId","diet_chart_template_id","getByDietChartTemplateId","addDietChart","dietChartSave","getDietChartByPatientId","newCurrentMedications","searchMedicine","slice","addCurrentMedications","medicine_id","ddlmedicine","treatment_rules_id","treatment_duration_id","treatment_dose_id","isIdExists","patient_current_medications_id","currentMedicationsSave","getCurrentMedicationsByPatientId","confirmDeleteCurrentMedications","$confirm","require","message","header","icon","acceptClass","accept","deleteCurrentMedications","reject","currentMedicationsDelete","newConsumedMedicine","addConsumedMedicine","consumedMedicineSave","getConsumedMedicineByPatientId","newPastMedicalHistory","addPastMedicalHistory","diagnosis_id","patient_past_history_id","pastHistorySave","getPastHistoryByPatientId","confirmDeletePastMedicalHistory","deletePastMedicalHistory","pastHistoryDelete","patientHistorySave","hideHistory","historyCollection","gender","removeItem","setItem","getAll","GetAllAllergyType","GetAllDiabetesMeal","getSystemSubstance","formattedSystemSubstance","push","_on_examination_name","on_examination_id","onExaminationPopupDialog","$parent","formatDate","formatDateTime"],"mappings":"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","sourcesContent":["import PatientProfileService from \"../../service/profiles/PatientProfileService\";\r\nimport ComplaintSetupService from \"../../service/setup/ComplaintSetupService\";\r\nimport FoodService from \"../../service/setup/FoodService\";\r\nimport OnExaminationSetupService from \"../../service/setup/OnExaminationSetupService\";\r\nimport DietChartTemplateSetupService from \"../../service/setup/DietChartTemplateSetupService\";\r\nimport DietChartSetupService from \"../../service/setup/DietChartSetupService\";\r\nimport MedicineSetupService from \"../../service/setup/MedicineSetupService\";\r\nimport TreatmentRulesSetupService from \"../../service/setup/TreatmentRulesSetupService\";\r\nimport TreatmentDurationSetupService from \"../../service/setup/TreatmentDurationSetupService\";\r\nimport TreatmentDoseSetupService from \"../../service/setup/TreatmentDoseSetupService\";\r\nimport DiagnosisSetupService from \"../../service/setup/DiagnosisSetupService\";\r\nimport CommonService from \"../../service/CommonService\";\r\n\r\nimport moment from \"moment\";\r\nimport Validation from \"../../scripts/validation\";\r\nimport { FilterService, FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  //props: ['hideHistory'],\r\n  data() {\r\n    return {\r\n      filteredItems: null,\r\n      active: 0,\r\n      expandedRows: [],\r\n      isFemale: false,\r\n\r\n      complaintSetup: {},\r\n      chiefComplainDialog: false,\r\n      chiefComplain: {},\r\n      chiefComplainList: [],\r\n      compliantList: [],\r\n\r\n      foodSetup: {},\r\n      allergyDetailsDialog: false,\r\n      allergyDetails: {},\r\n      allergyDetailsList: [],\r\n      foodList: [],\r\n      allergyTypeList: [],\r\n\r\n      onExaminationDialog: false,\r\n      onExamination: {},\r\n      patientOnExaminationList: [],\r\n      onExaminationList: [],\r\n\r\n      iOChartDialog: false,\r\n      iOChart: {},\r\n      iOChartList: [],\r\n\r\n      diabetesChartDialog: false,\r\n      diabetesChart: {\r\n        aAdmissionServiceDetails: {}\r\n      },\r\n      diabetesChartList: [],\r\n      diabetesMealList: [],\r\n\r\n      dietChartDialog: false,\r\n      dietChart: {},\r\n      dietChartList: [],\r\n      dietChartTemplateList: [],\r\n      dietChartTempList: [],\r\n\r\n      currentMedicationsDialog: false,\r\n      currentMedications: {},\r\n      currentMedicationsList: [],\r\n      medicineList: [],\r\n      treatmentRulesList: [],\r\n      treatmentDurationList: [],\r\n      treatmentDoseList: [],\r\n\r\n      pastMedicalHistoryDialog: false,\r\n      pastMedicalHistory: {},\r\n      pastMedicalHistoryList: [],\r\n      diagnosisList: [],\r\n\r\n      patientHistory: {\r\n        lstPersonalHistory: [],\r\n        lstFamilyHistory: [],\r\n        lstSystemsReview: [],\r\n        lstSubstanceUse: [],\r\n        lstReproductiveHistory: [],\r\n      },\r\n\r\n      consumedMedicineDialog: false,\r\n      consumedMedicineList : [],\r\n      consumedMedicine: {},\r\n\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.patientProfileService = new PatientProfileService();\r\n    this.complaintSetupService = new ComplaintSetupService();\r\n    this.foodService = new FoodService();\r\n    this.onExaminationSetupService = new OnExaminationSetupService();\r\n    this.dietChartTemplateSetupService = new DietChartTemplateSetupService();\r\n    this.dietChartSetupService = new DietChartSetupService();\r\n    this.medicineSetupService = new MedicineSetupService();\r\n    this.treatmentRulesSetupService = new TreatmentRulesSetupService();\r\n    this.treatmentDurationSetupService = new TreatmentDurationSetupService();\r\n    this.treatmentDoseSetupService = new TreatmentDoseSetupService();\r\n    this.diagnosisSetupService = new DiagnosisSetupService();\r\n    this.commonService = new CommonService();\r\n    this.validation = new Validation();\r\n  },\r\n  methods: {\r\n    hideDialog() {\r\n      this.chiefComplainDialog = false;\r\n      this.chiefComplain = {};\r\n\r\n      this.foodSetup = {};\r\n      this.allergyDetailsDialog = false;\r\n      this.allergyDetails = {};\r\n\r\n      this.onExaminationDialog = false;\r\n      // this.onExamination = {};\r\n\r\n      this.iOChartDialog = false;\r\n      this.iOChart = {};\r\n\r\n      this.diabetesChartDialog = false;\r\n      this.diabetesChart = {\r\n        aAdmissionServiceDetails: {},\r\n      };\r\n\r\n      this.dietChartDialog = false;\r\n      this.dietChart = {};\r\n\r\n      this.currentMedicationsDialog = false;\r\n      this.currentMedications = {};\r\n\r\n      this.pastMedicalHistoryDialog = false;\r\n      this.pastMedicalHistory = {};\r\n\r\n      this.consumedMedicineDialog  = false;\r\n      this.consumedMedicine = {};\r\n\r\n      this.submitted = false;\r\n    },\r\n\r\n    // Get Previous Chief Complain\r\n    getComplainsByPatientId(patient_id) {\r\n      this.chiefComplain.patient_id = patient_id;\r\n      this.patientProfileService.getComplainsByPatientId(patient_id).then((data) => (this.chiefComplainList = data.data));\r\n    },\r\n    // Get, Add Complain\r\n    getComplain() {\r\n      this.complaintSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.compliantList = data.data));\r\n    },\r\n    async addComplain() {\r\n      this.submitted = true;\r\n      try {\r\n        if (!this.complaintSetup.compilants_name) {\r\n          return;\r\n        } else {\r\n          this.complaintSetup.compliants_group_id = \"1\"\r\n          this.complaintSetup.is_favourite = true;\r\n          let result = await this.complaintSetupService.add(this.complaintSetup);\r\n          if (result.status === 200) {\r\n            this.getComplain();\r\n            return result.data;\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Add Chief Complain\r\n    searchComplain(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.compliantList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.compliantList.filter((item) => {\r\n            return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    newChiefComplain() {\r\n      this.chiefComplainDialog = true;\r\n    },\r\n    async addChiefComplain() {\r\n      this.submitted = true;\r\n      this.chiefComplain.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.chiefComplain.ddlcomplain) {\r\n        return;\r\n      } else if (!this.chiefComplain.patient_id) {\r\n        return;\r\n      } else if (!this.chiefComplain.cdfrom_date) {\r\n        return;\r\n      } else {\r\n        this.chiefComplain.from_date = moment(\r\n          String(this.chiefComplain.cdfrom_date)\r\n        ).format(\"YYYY-MM-DD\");\r\n        // complain is exist check start\r\n        if (!this.chiefComplain.ddlcomplain.value) {\r\n          var isComplainExist = this.compliantList.filter(function (el) {\r\n            return el.text == this.chiefComplain.ddlcomplain;\r\n          }, this);\r\n\r\n          if (isComplainExist.length == 0) {\r\n            this.complaintSetup.compilants_name = this.chiefComplain.ddlcomplain;\r\n            var complainId = await this.addComplain();\r\n            this.chiefComplain.ddlcomplain = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.chiefComplain.ddlcomplain.value = complainId.toString();\r\n          } else {\r\n            this.chiefComplain.ddlcomplain = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.chiefComplain.ddlcomplain.value = isComplainExist[0].value;\r\n          }\r\n        }\r\n        // complain is exist check end\r\n\r\n        var isDuplicate = this.chiefComplainList.filter(function (el) {\r\n          return el.compilants_id == this.chiefComplain.ddlcomplain.value;\r\n        }, this);\r\n        this.chiefComplain.compilants_id = this.chiefComplain.ddlcomplain.value;\r\n        if (isDuplicate.length == 0) {\r\n          let result = await this.patientProfileService.complainSave(this.chiefComplain);\r\n          if (result.status === 201) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n            this.hideDialog();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        } else {\r\n          this.chiefComplain.patient_complain_id = isDuplicate[0].patient_complain_id;\r\n          let result = await this.patientProfileService.complainUpdate(this.chiefComplain);\r\n          if (result.status === 202) {\r\n            this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n            this.hideDialog();\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Updated Successfully\",\r\n              life: 10000,\r\n            });\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // Get Previous Allergy Details\r\n    getAllergyDetailsByPatientId(patient_id) {\r\n      this.allergyDetails.patient_id = patient_id;\r\n      this.patientProfileService.getAllergyDetailsByPatientId(patient_id).then((data) => (this.allergyDetailsList = data.data));\r\n    },\r\n    // Get, Add Food\r\n    getFood() {\r\n      this.foodService\r\n        .getActiveCombo()\r\n        .then((data) => (this.foodList = data.data));\r\n    },\r\n    async addFood() {\r\n      try {\r\n        if (!this.foodSetup.food_name) {\r\n          return;\r\n        } else {\r\n          this.foodSetup.active = true;\r\n          let result = await this.foodService.add(this.foodSetup);\r\n          if (result.status === 200) {\r\n            this.getFood();\r\n            return result.data;\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: error,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Add Allergy Details\r\n    searchFood(event) {\r\n      setTimeout(() => {\r\n        if (!event.query.trim().length) {\r\n          this.filteredItems = [...this.foodList];\r\n        }\r\n        else {\r\n          //start with\r\n          this.filteredItems = this.foodList.filter((item) => {\r\n            return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n          });\r\n        }\r\n      }, 250);\r\n    },\r\n    newAllergyDetails() {\r\n      this.allergyDetailsDialog = true;\r\n    },\r\n    async addAllergyDetails() {\r\n      this.submitted = true;\r\n      this.allergyDetails.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.allergyDetails.ddlfood) {\r\n        return;\r\n      } else if (!this.allergyDetails.patient_id) {\r\n        return;\r\n      } else if (!this.allergyDetails.type) {\r\n        return;\r\n      } else if (!this.allergyDetails.cdfrom_date) {\r\n        return;\r\n      } else {\r\n        this.allergyDetails.from_date = moment(\r\n          String(this.allergyDetails.cdfrom_date)\r\n        ).format(\"YYYY-MM-DD\");\r\n        // food is exist check start\r\n        if (!this.allergyDetails.ddlfood.value) {\r\n          var isFoodExist = this.foodList.filter(function (el) {\r\n            return el.text == this.allergyDetails.ddlfood;\r\n          }, this);\r\n\r\n          if (isFoodExist.length == 0) {\r\n            this.foodSetup.food_name = this.allergyDetails.ddlfood;\r\n            var foodId = await this.addFood();\r\n            this.allergyDetails.ddlfood = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.allergyDetails.ddlfood.value = foodId.toString();\r\n          } else {\r\n            this.allergyDetails.ddlfood = {\r\n              text: \"\",\r\n              value: \"\",\r\n            };\r\n            this.allergyDetails.ddlfood.value = isFoodExist[0].value;\r\n          }\r\n        }\r\n        // food is exist check end\r\n\r\n        var isDuplicate = this.allergyDetailsList.filter(function (el) {\r\n          return el.food_id == this.allergyDetails.ddlfood.value;\r\n        }, this);\r\n        this.allergyDetails.food_id = this.allergyDetails.ddlfood.value;\r\n        if (isDuplicate.length == 0) {\r\n          let result = await this.patientProfileService.allergyDetailsSave(this.allergyDetails);\r\n          if (result.status === 201) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            this.getAllergyDetailsByPatientId(this.allergyDetails.patient_id);\r\n            this.hideDialog();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        } else {\r\n          this.allergyDetails.patient_allergy_details_id = isDuplicate[0].patient_allergy_details_id;\r\n          let result = await this.patientProfileService.allergyDetailsUpdate(this.allergyDetails);\r\n          if (result.status === 202) {\r\n            this.getAllergyDetailsByPatientId(this.allergyDetails.patient_id);\r\n            this.hideDialog();\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Updated Successfully\",\r\n              life: 10000,\r\n            });\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // Add On Examination\r\n    newOnExamination() {\r\n      this.getOnExaminationsPopup();\r\n      this.onExaminationDialog = true;\r\n    },\r\n    async addOnExamination() {\r\n      this.submitted = true;\r\n      this.requred = \"\";\r\n      this.popupOnExaminationsData.forEach((element) => {\r\n        if (!element.on_examination_result) {\r\n          this.requred = \"required\";\r\n        }\r\n      });\r\n\r\n      if (this.requred) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Required\",\r\n          detail: \"Please fill in the required fields\",\r\n          life: 10000,\r\n        });\r\n        return;\r\n      }\r\n      if (this.requred) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.onExaminationSave(this.popupOnExaminationsData);\r\n        if (result.status === 201) {\r\n          var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n          this.getOnExaminationByPatientId(patientId);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Add I/O Chart\r\n    newIOChart() {\r\n      this.iOChartDialog = true;\r\n    },\r\n    async addIOChart() {\r\n      this.submitted = true;\r\n      this.iOChart.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.iOChart.patient_id) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.iOChartSave(this.iOChart);\r\n        if (result.status === 201) {\r\n          this.getIOChartByPatientId(this.iOChart.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Diabetes Chart\r\n    newDiabetesChart() {\r\n      this.diabetesChartDialog = true;\r\n    },\r\n    async addDiabetesChart() {\r\n      this.submitted = true;\r\n      this.diabetesChart.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.diabetesChart.meal) {\r\n        return;\r\n      } else if (!this.diabetesChart.before) {\r\n        return;\r\n      } else if (!this.diabetesChart.after) {\r\n        return;\r\n      } else if (!this.diabetesChart.patient_id) {\r\n        return;\r\n      } else {\r\n        //var admission_id = JSON.parse(localStorage.getItem(\"admissionIdForDiabetesService\"));\r\n        //this.diabetesChart.aAdmissionServiceDetails.admission_id = String(admission_id);\r\n        let result = await this.patientProfileService.diabetesChartSave(this.diabetesChart);\r\n        if (result.status === 201) {\r\n          this.getDiabetesChartByPatientId(this.diabetesChart.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Add Diet Chart\r\n    newDietChart() {\r\n      this.dietChartDialog = true;\r\n    },\r\n    getDietChartByTemplateId() {\r\n      if (!this.dietChart.diet_chart_template_id) {\r\n        return\r\n      } else {\r\n        this.dietChartSetupService\r\n          .getByDietChartTemplateId(this.dietChart.diet_chart_template_id)\r\n          .then((data) => (this.dietChartTempList = data.data));\r\n      }\r\n    },\r\n    async addDietChart() {\r\n      this.submitted = true;\r\n      if (this.dietChartTempList.length <= 0) {\r\n        return;\r\n      } else {\r\n        var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n        this.dietChartTempList.forEach(element => {\r\n          element.patient_id = patientId.toString()\r\n        });\r\n\r\n        let result = await this.patientProfileService.dietChartSave(this.dietChartTempList);\r\n        if (result.status === 201) {\r\n          //var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n          this.getDietChartByPatientId(patientId);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Add Current Medications\r\n    newCurrentMedications() {\r\n      this.currentMedicationsDialog = true;\r\n    },\r\n    searchMedicine(event) {\r\n      setTimeout(() => {\r\n          if (!event.query.trim().length) {\r\n              this.filteredItems = [...this.medicineList];\r\n          }\r\n          else {\r\n              // start with\r\n              // this.filteredItems = this.medicineList.filter((item) => {\r\n              //     return item.text.toLowerCase().startsWith(event.query.toLowerCase());\r\n              // });\r\n\r\n              // contains\r\n              this.filteredItems = FilterService.filter(this.medicineList, ['text'], event.query.toLowerCase(), FilterMatchMode.CONTAINS).slice(0, 10);\r\n          }\r\n      }, 250);\r\n  },\r\n    async addCurrentMedications() {\r\n      this.submitted = true;\r\n      this.currentMedications.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      this.currentMedications.medicine_id = this.currentMedications.ddlmedicine.value;\r\n      if (!this.currentMedications.ddlmedicine) {\r\n        return;\r\n      } else if (!this.currentMedications.treatment_rules_id) {\r\n        return;\r\n      } else if (!this.currentMedications.treatment_duration_id) {\r\n        return;\r\n      } else if (!this.currentMedications.treatment_dose_id) {\r\n        return;\r\n      } else if (!this.currentMedications.patient_id) {\r\n        return;\r\n      } else if (this.validation.isIdExists(this.currentMedicationsList, 'medicine_id', this.currentMedications.medicine_id, 'patient_current_medications_id', this.currentMedications.patient_current_medications_id, this)) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.currentMedicationsSave(this.currentMedications);\r\n        if (result.status === 201) {\r\n          this.getCurrentMedicationsByPatientId(this.currentMedications.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    confirmDeleteCurrentMedications(data) {\r\n      this.$confirm.require({\r\n        message: 'Do you want to delete this record?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => {\r\n          this.deleteCurrentMedications(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    async deleteCurrentMedications(data) {\r\n      let result = await this.patientProfileService.currentMedicationsDelete(data);\r\n      if (result.status === 202) {\r\n        this.getCurrentMedicationsByPatientId(data.patient_id)\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    // Consumed Medicine\r\n    newConsumedMedicine() {\r\n      this.consumedMedicineDialog = true;\r\n    },\r\n    async addConsumedMedicine() {\r\n      this.submitted = true;\r\n      this.consumedMedicine.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      this.consumedMedicine.medicine_id = this.consumedMedicine.ddlmedicine.value;\r\n      if (!this.consumedMedicine.ddlmedicine) {\r\n        return;\r\n      } else if (!this.consumedMedicine.treatment_dose_id) {\r\n        return;\r\n      } else if (!this.consumedMedicine.patient_id) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.consumedMedicineSave(this.consumedMedicine);\r\n        if (result.status === 201) {\r\n          this.getConsumedMedicineByPatientId(this.consumedMedicine.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // Past Medical History\r\n    newPastMedicalHistory() {\r\n      this.pastMedicalHistoryDialog = true;\r\n    },\r\n    async addPastMedicalHistory() {\r\n      this.submitted = true;\r\n      this.pastMedicalHistory.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      if (!this.pastMedicalHistory.diagnosis_id) {\r\n        return;\r\n      } else if (!this.pastMedicalHistory.patient_id) {\r\n        return;\r\n      } else if (this.validation.isIdExists(this.pastMedicalHistoryList, 'diagnosis_id', this.pastMedicalHistory.diagnosis_id, 'patient_past_history_id', this.pastMedicalHistory.patient_past_history_id, this)) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.pastHistorySave(this.pastMedicalHistory);\r\n        if (result.status === 201) {\r\n          this.getPastHistoryByPatientId(this.pastMedicalHistory.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    confirmDeletePastMedicalHistory(data) {\r\n      this.$confirm.require({\r\n        message: 'Do you want to delete this record?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => {\r\n          this.deletePastMedicalHistory(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    async deletePastMedicalHistory(data) {\r\n      let result = await this.patientProfileService.pastHistoryDelete(data);\r\n      if (result.status === 202) {\r\n        this.getPastHistoryByPatientId(data.patient_id)\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    async patientHistorySave() {\r\n      this.patientHistory.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      //this.submitted = true;\r\n      if (!this.patientHistory.patient_id) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.patientHistorySave(this.patientHistory, this);\r\n        if (result.status === 201) {\r\n          this.hideHistory();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // collect history\r\n    historyCollection(data) {\r\n      if (data.gender == \"Female\") {\r\n        this.isFemale = true;\r\n      } else {\r\n        this.isFemale = false;\r\n      }\r\n\r\n      //localStorage.setItem('admissionIdForDiabetesService', data.admission_id);\r\n\r\n      localStorage.removeItem('patientIdForTreatment');\r\n      localStorage.setItem('patientIdForTreatment', data.patient_id);\r\n\r\n      // use for Dialog //\r\n      this.getComplain();\r\n\r\n      this.getFood();\r\n\r\n      this.onExaminationSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.onExaminationList = data.data));\r\n\r\n      this.medicineSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.medicineList = data.data));\r\n\r\n      this.treatmentRulesSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentRulesList = data.data));\r\n\r\n      this.treatmentDurationSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentDurationList = data.data));\r\n\r\n      this.treatmentDoseSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentDoseList = data.data));\r\n\r\n      this.diagnosisSetupService\r\n        .getAll()\r\n        .then((data) => (this.diagnosisList = data.data));\r\n\r\n      this.commonService\r\n        .GetAllAllergyType()\r\n        .then((data) => (this.allergyTypeList = data.data));\r\n\r\n      this.commonService\r\n        .GetAllDiabetesMeal()\r\n        .then((data) => (this.diabetesMealList = data.data));\r\n\r\n      this.dietChartTemplateSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.dietChartTemplateList = data.data));\r\n      // use for Dialog //\r\n\r\n      // collect history patient wise //\r\n      this.getComplainsByPatientId(data.patient_id);\r\n\r\n      this.getAllergyDetailsByPatientId(data.patient_id);\r\n\r\n      this.getOnExaminationByPatientId(data.patient_id);\r\n\r\n      this.getIOChartByPatientId(data.patient_id);\r\n\r\n      this.getDiabetesChartByPatientId(data.patient_id);\r\n\r\n      this.getDietChartByPatientId(data.patient_id);\r\n\r\n      this.getCurrentMedicationsByPatientId(data.patient_id);\r\n\r\n      this.getPastHistoryByPatientId(data.patient_id);\r\n\r\n      this.patientProfileService.getSystemSubstance(data.patient_id).then((data) => this.formattedSystemSubstance(data.data));\r\n\r\n      this.getConsumedMedicineByPatientId(data.patient_id);\r\n      // collect history patient wise //\r\n    },\r\n\r\n    getOnExaminationsPopup() {\r\n      var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n\r\n      this.popupOnExaminationsData = [];\r\n      this.onExaminationList.forEach((element) => {\r\n        this.popupOnExaminationsData.push({\r\n          _on_examination_name: element.text,\r\n          on_examination_id: element.value,\r\n          on_examination_result: String(1),\r\n          patient_id: patientId.toString()\r\n        });\r\n      });\r\n\r\n      this.onExaminationPopupDialog = true;\r\n    },\r\n\r\n    getOnExaminationByPatientId(patient_id) {\r\n      this.onExamination.patient_id = patient_id;\r\n      this.patientProfileService.getOnExaminationByPatientId(patient_id).then((data) => (this.patientOnExaminationList = data.data));\r\n    },\r\n\r\n    getIOChartByPatientId(patient_id) {\r\n      this.iOChart.patient_id = patient_id;\r\n      this.patientProfileService.getIOChartByPatientId(patient_id).then((data) => (this.iOChartList = data.data));\r\n    },\r\n\r\n    getDiabetesChartByPatientId(patient_id) {\r\n      this.diabetesChart.patient_id = patient_id;\r\n      this.patientProfileService.getDiabetesChartByPatientId(patient_id).then((data) => (this.diabetesChartList = data.data));\r\n    },\r\n\r\n    getDietChartByPatientId(patient_id) {\r\n      this.dietChart.patient_id = patient_id;\r\n      this.patientProfileService.getDietChartByPatientId(patient_id).then((data) => (this.dietChartList = data.data));\r\n    },\r\n\r\n    getCurrentMedicationsByPatientId(patient_id) {\r\n      this.currentMedications.patient_id = patient_id;\r\n      this.patientProfileService.getCurrentMedicationsByPatientId(patient_id).then((data) => (this.currentMedicationsList = data.data));\r\n    },\r\n\r\n    getPastHistoryByPatientId(patient_id) {\r\n      this.pastMedicalHistory.patient_id = patient_id;\r\n      this.patientProfileService.getPastHistoryByPatientId(patient_id).then((data) => (this.pastMedicalHistoryList = data.data));\r\n    },\r\n\r\n    formattedSystemSubstance(data) {\r\n      //this.patientHistory.patient_id = patient_id;\r\n      this.patientHistory.lstPersonalHistory = data.lstPersonalHistory;\r\n      this.patientHistory.lstFamilyHistory = data.lstFamilyHistory;\r\n      this.patientHistory.lstSystemsReview = data.lstSystemsReview;\r\n      this.patientHistory.lstSubstanceUse = data.lstSubstanceUse;\r\n      this.patientHistory.lstReproductiveHistory = data.lstReproductiveHistory;\r\n    },\r\n\r\n    getConsumedMedicineByPatientId(patient_id) {\r\n      this.consumedMedicine.patient_id = patient_id;\r\n      this.patientProfileService.getConsumedMedicineByPatientId(patient_id).then((data) => (this.consumedMedicineList = data.data));\r\n    },\r\n\r\n    hideHistory() {\r\n      //this.$emit('hideHistory')\r\n      this.$parent.hideHistory()\r\n      localStorage.removeItem('patientIdForTreatment');\r\n    },\r\n\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY\");\r\n    },\r\n    formatDateTime(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}