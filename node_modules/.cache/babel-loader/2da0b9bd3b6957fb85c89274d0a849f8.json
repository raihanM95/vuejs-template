{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationResultDispatch.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\collection-zone\\InvestigationResultDispatch.js","mtime":1640498582584},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/collection-zone/InvestigationResultDispatch.js"],"names":["CommonService","PatientInvestigationRequestService","InvestigationResultDispatchService","moment","FilterMatchMode","FilterOperator","data","testParameterList","investigationResultDispatchList","diagnosisInvestigationStatusList","investigationResultDispatch","cdfromdate","String","Date","format","cdtodate","investigation_status","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","investigationResultDispatchService","patientInvestigationRequestService","commonService","GetDeliveryInvestigationStatus","then","show","methods","reset","fromdate","todate","getDynamic","confirmPay","invData","$confirm","require","message","inv_due_amount","header","icon","accept","localStorage","setItem","investigation_request_no","$router","push","reject","$toast","add","severity","summary","detail","life","findInvestigation","deliveryData","getById","investigation_request_id","getFormatted","sendToDelivery","reportDelivery","sample_collection_id","result","status","res","formatDate"],"mappings":"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","sourcesContent":["import CommonService from \"../../service/CommonService\";\r\nimport PatientInvestigationRequestService from \"../../service/front-desk/PatientInvestigationRequestService\";\r\nimport InvestigationResultDispatchService from \"../../service/collection-zone/InvestigationResultDispatchService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      testParameterList: [],\r\n      investigationResultDispatchList: [],\r\n      diagnosisInvestigationStatusList: [],\r\n      investigationResultDispatch: {\r\n        // cdfromdate: moment(\r\n        //   String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n        // ).format(\"MM/DD/YYYY\"),\r\n        cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        investigation_status: \"Ready To Delivery\",\r\n      },\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.investigationResultDispatchService =\r\n      new InvestigationResultDispatchService();\r\n    this.patientInvestigationRequestService =\r\n      new PatientInvestigationRequestService();\r\n    this.commonService = new CommonService();\r\n\r\n    this.commonService\r\n      .GetDeliveryInvestigationStatus()\r\n      .then((data) => (this.diagnosisInvestigationStatusList = data.data));\r\n\r\n    this.show();\r\n  },\r\n  methods: {\r\n    reset() {\r\n      // this.investigationResultDispatch = {\r\n      //   cdfromdate: moment(\r\n      //     String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n      //   ).format(\"MM/DD/YYYY\"),\r\n      //   cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n      //   investigation_status: \"Ready To Delivery\",\r\n      // };\r\n      this.submitted = false;\r\n\r\n      this.show();\r\n    },\r\n    show() {\r\n      this.submitted = true;\r\n      if (!this.investigationResultDispatch.cdfromdate) {\r\n        return;\r\n      } else if (!this.investigationResultDispatch.cdtodate) {\r\n        return;\r\n      } else if (!this.investigationResultDispatch.investigation_status) {\r\n        return;\r\n      } else {\r\n        this.investigationResultDispatch.fromdate = moment(\r\n          String(this.investigationResultDispatch.cdfromdate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationResultDispatch.todate = moment(\r\n          String(this.investigationResultDispatch.cdtodate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.investigationResultDispatchService\r\n          .getDynamic(\r\n            this.investigationResultDispatch.fromdate,\r\n            this.investigationResultDispatch.todate,\r\n            this.investigationResultDispatch.investigation_status\r\n          )\r\n          .then((data) => (this.investigationResultDispatchList = data.data));\r\n      }\r\n\r\n      this.submitted = true;\r\n    },\r\n    // sendToDeliveryConfirm(data) {\r\n    //   this.$confirm.require({\r\n    //     message: \"Are you want to sure delivery?\",\r\n    //     header: \"Confirmation\",\r\n    //     icon: \"pi pi-exclamation-triangle\",\r\n    //     accept: () => {\r\n    //       this.findInvestigation(data);\r\n    //     },\r\n    //     reject: () => {\r\n    //       return;\r\n    //     },\r\n    //   });\r\n    // },\r\n    confirmPay(invData) {\r\n      this.$confirm.require({\r\n        message: \"Your due amount \" + invData.inv_due_amount + \" TK! Are you sure you want to pay now?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          localStorage.setItem('inv_request_no', invData.investigation_request_no);\r\n          this.$router.push(\"/investigation-payment-collection\");\r\n        },\r\n        reject: () => {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Cannot delivery!\",\r\n            detail: \"Your due amount \" + invData.inv_due_amount + \" TK\",\r\n            life: 10000,\r\n          });\r\n        },\r\n      });\r\n    },\r\n    findInvestigation(deliveryData) {\r\n      this.patientInvestigationRequestService\r\n        .getById(deliveryData.investigation_request_id)\r\n        .then((data) => this.getFormatted(data.data, deliveryData));\r\n    },\r\n    getFormatted(invData, deliveryData) {\r\n      if (invData.inv_due_amount == 0) {\r\n        this.sendToDelivery(deliveryData);\r\n      } else {\r\n        // this.$toast.add({\r\n        //   severity: \"error\",\r\n        //   summary: \"Canot delivery!\",\r\n        //   detail: \"Your due amount \" + invData.inv_due_amount + \" TK\",\r\n        //   life: 10000,\r\n        // });\r\n        this.confirmPay(invData);\r\n      }\r\n    },\r\n    async sendToDelivery(data) {\r\n      let result = await this.investigationResultDispatchService.reportDelivery(\r\n        data.sample_collection_id, this\r\n      );\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Delivered\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}