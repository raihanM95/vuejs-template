{"remainingRequest":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\AdmittedPatientList.js","dependencies":[{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\src\\scripts\\nurse-panel\\AdmittedPatientList.js","mtime":1653210014729},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\ERP_Hospital_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/ERP_Hospital_Client/trunk/src/scripts/nurse-panel/AdmittedPatientList.js"],"names":["AdmissionService","PatientProfileService","ComplaintSetupService","FoodService","OnExaminationSetupService","DietChartTemplateSetupService","DietChartSetupService","MedicineSetupService","TreatmentRulesSetupService","TreatmentDurationSetupService","TreatmentDoseSetupService","DiagnosisSetupService","CommonService","moment","Validation","FilterMatchMode","FilterOperator","data","dataList","isNurse","isHistory","active","expandedRows","isFemale","admittedPatientList","admittedPatient","cdfromdate","String","Date","format","cdtodate","chiefComplainDialog","chiefComplain","chiefComplainList","compliantList","foodDialog","foodSetup","allergyDetailsDialog","allergyDetails","allergyDetailsList","foodList","allergyTypeList","onExaminationDialog","onExamination","patientOnExaminationList","onExaminationList","iOChartDialog","iOChart","iOChartList","diabetesChartDialog","diabetesChart","aAdmissionServiceDetails","diabetesChartList","diabetesMealList","dietChartDialog","dietChart","dietChartList","dietChartTemplateList","dietChartTempList","currentMedicationsDialog","currentMedications","currentMedicationsList","medicineList","treatmentRulesList","treatmentDurationList","treatmentDoseList","pastMedicalHistoryDialog","pastMedicalHistory","pastMedicalHistoryList","diagnosisList","patientHistory","lstPersonalHistory","lstFamilyHistory","lstSystemsReview","lstSubstanceUse","lstReproductiveHistory","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","admissionService","patientProfileService","complaintSetupService","foodService","onExaminationSetupService","dietChartTemplateSetupService","dietChartSetupService","medicineSetupService","treatmentRulesSetupService","treatmentDurationSetupService","treatmentDoseSetupService","diagnosisSetupService","commonService","validation","userInfo","JSON","parse","localStorage","getItem","show","nurse_id","methods","fromdate","todate","admittedPatientListForHistoryByNurseId","then","hideDialog","patientId","toString","patient_id","newChiefComplain","addChiefComplain","compilants_id","cdfrom_date","isIdExists","patient_complain_id","from_date","complainSave","result","status","$toast","add","severity","summary","detail","life","getComplainsByPatientId","res","complainUpdate","editChiefComplain","Object","assign","getFood","getActiveCombo","foodFormatted","newFood","addFood","food_name","isNameExists","food_id","newAllergyDetails","addAllergyDetails","type","patient_allergy_details_id","allergyDetailsSave","getAllergyDetailsByPatientId","allergyDetailsUpdate","editAllergyDetails","newOnExamination","getOnExaminationsPopup","addOnExamination","requred","popupOnExaminationsData","forEach","element","on_examination_result","onExaminationSave","getOnExaminationByPatientId","newIOChart","addIOChart","iOChartSave","getIOChartByPatientId","newDiabetesChart","addDiabetesChart","meal","before","after","admission_id","diabetesChartSave","getDiabetesChartByPatientId","newDietChart","getDietChartByTemplateId","diet_chart_template_id","getByDietChartTemplateId","addDietChart","length","dietChartSave","getDietChartByPatientId","newCurrentMedications","addCurrentMedications","medicine_id","treatment_rules_id","treatment_duration_id","treatment_dose_id","patient_current_medications_id","currentMedicationsSave","getCurrentMedicationsByPatientId","confirmDeleteCurrentMedications","$confirm","require","message","header","icon","acceptClass","accept","deleteCurrentMedications","reject","currentMedicationsDelete","newPastMedicalHistory","addPastMedicalHistory","diagnosis_id","patient_past_history_id","pastHistorySave","getPastHistoryByPatientId","confirmDeletePastMedicalHistory","deletePastMedicalHistory","pastHistoryDelete","patientHistorySave","hideHistory","historyCollection","gender","setItem","removeItem","getAll","GetAllAllergyType","GetAllDiabetesMeal","getSystemSubstance","formattedSystemSubstance","push","_on_examination_name","text","on_examination_id","onExaminationPopupDialog","formatDate","formatDateTime"],"mappings":"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","sourcesContent":["import AdmissionService from \"../../service/front-desk/AdmissionService\";\r\nimport PatientProfileService from \"../../service/profiles/PatientProfileService\";\r\n//import WordCabinSetupService from \"../../service/setup/WordCabinSetupService\";\r\n\r\nimport ComplaintSetupService from \"../../service/setup/ComplaintSetupService\";\r\nimport FoodService from \"../../service/setup/FoodService\";\r\nimport OnExaminationSetupService from \"../../service/setup/OnExaminationSetupService\";\r\nimport DietChartTemplateSetupService from \"../../service/setup/DietChartTemplateSetupService\";\r\nimport DietChartSetupService from \"../../service/setup/DietChartSetupService\";\r\n\r\nimport MedicineSetupService from \"../../service/setup/MedicineSetupService\";\r\nimport TreatmentRulesSetupService from \"../../service/setup/TreatmentRulesSetupService\";\r\nimport TreatmentDurationSetupService from \"../../service/setup/TreatmentDurationSetupService\";\r\nimport TreatmentDoseSetupService from \"../../service/setup/TreatmentDoseSetupService\";\r\nimport DiagnosisSetupService from \"../../service/setup/DiagnosisSetupService\";\r\nimport CommonService from \"../../service/CommonService\";\r\n\r\nimport moment from \"moment\";\r\nimport Validation from \"../../scripts/validation\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataList: true,\r\n      isNurse: false,\r\n      isHistory: false,\r\n      active: 0,\r\n      expandedRows: [],\r\n      isFemale: false,\r\n      //button: true,\r\n      //wordCabinList: [],\r\n      admittedPatientList: [],\r\n      admittedPatient: {\r\n        cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        // cdtodate: moment(\r\n        //     String(new Date(new Date().setDate(new Date().getDate() + 7)))\r\n        // ).format(\"MM/DD/YYYY\"),\r\n      },\r\n      //\r\n      chiefComplainDialog: false,\r\n      chiefComplain: {},\r\n      chiefComplainList: [],\r\n      compliantList: [],\r\n\r\n      foodDialog: false,\r\n      foodSetup: {},\r\n      allergyDetailsDialog: false,\r\n      allergyDetails: {},\r\n      allergyDetailsList: [],\r\n      foodList: [],\r\n      allergyTypeList: [],\r\n\r\n      onExaminationDialog: false,\r\n      onExamination: {},\r\n      patientOnExaminationList: [],\r\n      onExaminationList: [],\r\n\r\n      iOChartDialog: false,\r\n      iOChart: {},\r\n      iOChartList: [],\r\n\r\n      diabetesChartDialog: false,\r\n      diabetesChart: {\r\n        aAdmissionServiceDetails: {}\r\n      },\r\n      diabetesChartList: [],\r\n      diabetesMealList: [],\r\n\r\n      dietChartDialog: false,\r\n      dietChart: {},\r\n      dietChartList: [],\r\n      dietChartTemplateList: [],\r\n      dietChartTempList: [],\r\n\r\n      currentMedicationsDialog: false,\r\n      currentMedications: {},\r\n      currentMedicationsList: [],\r\n      medicineList: [],\r\n      treatmentRulesList: [],\r\n      treatmentDurationList: [],\r\n      treatmentDoseList: [],\r\n\r\n      pastMedicalHistoryDialog: false,\r\n      pastMedicalHistory: {},\r\n      pastMedicalHistoryList: [],\r\n      diagnosisList: [],\r\n\r\n      patientHistory: {\r\n        lstPersonalHistory: [],\r\n        lstFamilyHistory: [],\r\n        lstSystemsReview: [],\r\n        lstSubstanceUse: [],\r\n        lstReproductiveHistory: [],\r\n      },\r\n\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    //this.wordCabinSetupService = new WordCabinSetupService();\r\n    this.admissionService = new AdmissionService();\r\n    this.patientProfileService = new PatientProfileService();\r\n\r\n    this.complaintSetupService = new ComplaintSetupService();\r\n    this.foodService = new FoodService();\r\n    this.onExaminationSetupService = new OnExaminationSetupService();\r\n    this.dietChartTemplateSetupService = new DietChartTemplateSetupService();\r\n    this.dietChartSetupService = new DietChartSetupService();\r\n\r\n    this.medicineSetupService = new MedicineSetupService();\r\n    this.treatmentRulesSetupService = new TreatmentRulesSetupService();\r\n    this.treatmentDurationSetupService = new TreatmentDurationSetupService();\r\n    this.treatmentDoseSetupService = new TreatmentDoseSetupService();\r\n    this.diagnosisSetupService = new DiagnosisSetupService();\r\n    this.commonService = new CommonService();\r\n    this.validation = new Validation();\r\n\r\n    // this.wordCabinSetupService\r\n    //     .getAll()\r\n    //     .then((data) => (this.wordCabinList = data.data));\r\n\r\n    this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    this.show();\r\n    \r\n    if (this.userInfo.nurse_id) {\r\n      this.isNurse = true;\r\n    } else if (!this.userInfo.nurse_id) {\r\n      this.isNurse = false;\r\n    }\r\n  },\r\n  methods: {\r\n    show() {\r\n      this.submitted = true;\r\n      if (!this.admittedPatient.cdfromdate) {\r\n        return;\r\n      } else if (!this.admittedPatient.cdtodate) {\r\n        return;\r\n      } else {\r\n        this.admittedPatient.fromdate = moment(\r\n          String(this.admittedPatient.cdfromdate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.admittedPatient.todate = moment(\r\n          String(this.admittedPatient.cdtodate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        this.admissionService\r\n          .admittedPatientListForHistoryByNurseId(this.admittedPatient.fromdate, this.admittedPatient.todate, this.userInfo.nurse_id)\r\n          .then((data) => (this.admittedPatientList = data.data));\r\n      }\r\n      this.dataList = true;\r\n      this.submitted = true;\r\n    },\r\n    hideDialog() {\r\n      var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n\r\n      this.chiefComplainDialog = false;\r\n      this.chiefComplain = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.foodDialog = false;\r\n      this.foodSetup = {};\r\n      this.allergyDetailsDialog = false;\r\n      this.allergyDetails = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.onExaminationDialog = false;\r\n      // this.onExamination = {\r\n      //   patient_id: patientId\r\n      // };\r\n\r\n      this.iOChartDialog = false;\r\n      this.iOChart = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.diabetesChartDialog = false;\r\n      this.diabetesChart = {\r\n        aAdmissionServiceDetails: {},\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.dietChartDialog = false;\r\n      this.dietChart = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.currentMedicationsDialog = false;\r\n      this.currentMedications = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.pastMedicalHistoryDialog = false;\r\n      this.pastMedicalHistory = {\r\n        patient_id: patientId\r\n      };\r\n\r\n      this.submitted = false;\r\n    },\r\n\r\n    newChiefComplain() {\r\n      this.chiefComplainDialog = true;\r\n    },\r\n    async addChiefComplain() {\r\n      this.submitted = true;\r\n      if (!this.chiefComplain.compilants_id) {\r\n        return;\r\n      } else if (!this.chiefComplain.patient_id) {\r\n        return;\r\n      } else if (!this.chiefComplain.cdfrom_date) {\r\n        return;\r\n      } else if (this.validation.isIdExists(this.chiefComplainList, 'compilants_id', this.chiefComplain.compilants_id, 'patient_complain_id', this.chiefComplain.patient_complain_id, this)) {\r\n        return;\r\n      } else {\r\n        this.chiefComplain.from_date = moment(\r\n          String(this.chiefComplain.cdfrom_date)\r\n        ).format(\"YYYY-MM-DD\");\r\n        if (!this.chiefComplain.patient_complain_id) {\r\n          let result = await this.patientProfileService.complainSave(this.chiefComplain);\r\n          if (result.status === 201) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n            this.hideDialog();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        } else {\r\n          let result = await this.patientProfileService.complainUpdate(this.chiefComplain);\r\n          if (result.status === 202) {\r\n            this.getComplainsByPatientId(this.chiefComplain.patient_id);\r\n            this.hideDialog();\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Updated Successfully\",\r\n              life: 10000,\r\n            });\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    editChiefComplain(data) {\r\n      this.chiefComplain = Object.assign({}, data);\r\n      this.chiefComplain.cdfrom_date = moment(\r\n        String(this.chiefComplain.from_date)\r\n      ).format(\"MM/DD/YYYY\");\r\n      this.chiefComplainDialog = true;\r\n    },\r\n\r\n    getFood() {\r\n      this.foodService\r\n        .getActiveCombo()\r\n        .then((data) => this.foodFormatted(data.data));\r\n    },\r\n    foodFormatted(data) {\r\n      this.submitted = false;\r\n      this.foodSetup = {};\r\n      this.foodList = data;\r\n      this.foodDialog = false;\r\n      this.allergyDetailsDialog = true;\r\n    },\r\n    newFood() {\r\n      this.allergyDetailsDialog = false;\r\n      this.foodDialog = true;\r\n    },\r\n    async addFood() {\r\n      this.submitted = true;\r\n      if (!this.foodSetup.food_name) {\r\n        return;\r\n      } else if (this.validation.isNameExists(this.foodList, 'text', this.foodSetup.food_name, 'value', this.foodSetup.food_id, this)) {\r\n        return;\r\n      } else {\r\n        this.foodSetup.active = true;\r\n        let result = await this.foodService.add(this.foodSetup);\r\n        if (result.status === 201) {\r\n          this.getFood();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    newAllergyDetails() {\r\n      this.allergyDetailsDialog = true;\r\n    },\r\n    async addAllergyDetails() {\r\n      this.submitted = true;\r\n      if (!this.allergyDetails.food_id) {\r\n        return;\r\n      } else if (!this.allergyDetails.patient_id) {\r\n        return;\r\n      } else if (!this.allergyDetails.type) {\r\n        return;\r\n      } else if (!this.allergyDetails.cdfrom_date) {\r\n        return;\r\n      } else if (this.validation.isIdExists(this.allergyDetailsList, 'food_id', this.allergyDetails.food_id, 'patient_allergy_details_id', this.allergyDetails.patient_allergy_details_id, this)) {\r\n        return;\r\n      } else {\r\n        this.allergyDetails.from_date = moment(\r\n          String(this.allergyDetails.cdfrom_date)\r\n        ).format(\"YYYY-MM-DD\");\r\n        if (!this.allergyDetails.patient_allergy_details_id) {\r\n          let result = await this.patientProfileService.allergyDetailsSave(this.allergyDetails);\r\n          if (result.status === 201) {\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Saved Successfully\",\r\n              life: 10000,\r\n            });\r\n            this.getAllergyDetailsByPatientId(this.allergyDetails.patient_id);\r\n            this.hideDialog();\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        } else {\r\n          let result = await this.patientProfileService.allergyDetailsUpdate(this.allergyDetails);\r\n          if (result.status === 202) {\r\n            this.getAllergyDetailsByPatientId(this.allergyDetails.patient_id);\r\n            this.hideDialog();\r\n            this.$toast.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"Updated Successfully\",\r\n              life: 10000,\r\n            });\r\n          } else if (result.status === 401) {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: result.data,\r\n              life: 10000,\r\n            });\r\n          } else {\r\n            this.$toast.add({\r\n              severity: \"error\",\r\n              summary: \"Failed\",\r\n              detail: result.res,\r\n              life: 10000,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    editAllergyDetails(data) {\r\n      this.allergyDetails = Object.assign({}, data);\r\n      this.allergyDetails.cdfrom_date = moment(\r\n        String(this.allergyDetails.from_date)\r\n      ).format(\"MM/DD/YYYY\");\r\n      this.allergyDetailsDialog = true;\r\n    },\r\n\r\n    newOnExamination() {\r\n      this.getOnExaminationsPopup();\r\n      this.onExaminationDialog = true;\r\n    },\r\n    async addOnExamination() {\r\n      this.submitted = true;\r\n      this.requred = \"\";\r\n      this.popupOnExaminationsData.forEach((element) => {\r\n        if (!element.on_examination_result) {\r\n          this.requred = \"required\";\r\n        }\r\n      });\r\n\r\n      if (this.requred) {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Required\",\r\n          detail: \"Please fill in the required fields\",\r\n          life: 10000,\r\n        });\r\n        return;\r\n      }\r\n      if (this.requred) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.onExaminationSave(this.popupOnExaminationsData);\r\n        if (result.status === 201) {\r\n          var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n          this.getOnExaminationByPatientId(patientId);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    newIOChart() {\r\n      this.iOChartDialog = true;\r\n    },\r\n    async addIOChart() {\r\n      this.submitted = true;\r\n      if (!this.iOChart.patient_id) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.iOChartSave(this.iOChart);\r\n        if (result.status === 201) {\r\n          var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n          this.getIOChartByPatientId(patientId);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    newDiabetesChart() {\r\n      this.diabetesChartDialog = true;\r\n    },\r\n    async addDiabetesChart() {\r\n      this.submitted = true;\r\n      if (!this.diabetesChart.meal) {\r\n        return;\r\n      } else if (!this.diabetesChart.before) {\r\n        return;\r\n      } else if (!this.diabetesChart.after) {\r\n        return;\r\n      } else {\r\n        var admission_id = JSON.parse(localStorage.getItem(\"admissionIdForDiabetesService\"));\r\n        this.diabetesChart.aAdmissionServiceDetails.admission_id = String(admission_id);\r\n        let result = await this.patientProfileService.diabetesChartSave(this.diabetesChart);\r\n        if (result.status === 201) {\r\n          var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n          this.getDiabetesChartByPatientId(patientId);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    newDietChart() {\r\n      this.dietChartDialog = true;\r\n    },\r\n    getDietChartByTemplateId() {\r\n      if (!this.dietChart.diet_chart_template_id) {\r\n        return\r\n      } else {\r\n        this.dietChartSetupService\r\n          .getByDietChartTemplateId(this.dietChart.diet_chart_template_id)\r\n          .then((data) => (this.dietChartTempList = data.data));\r\n      }\r\n    },\r\n    async addDietChart() {\r\n      this.submitted = true;\r\n      if (this.dietChartTempList.length <= 0) {\r\n        return;\r\n      } else {\r\n        var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n        this.dietChartTempList.forEach(element => {\r\n          element.patient_id = patientId.toString()\r\n        });\r\n\r\n        let result = await this.patientProfileService.dietChartSave(this.dietChartTempList);\r\n        if (result.status === 201) {\r\n          //var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n          this.getDietChartByPatientId(patientId);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    newCurrentMedications() {\r\n      this.currentMedicationsDialog = true;\r\n    },\r\n    async addCurrentMedications() {\r\n      this.submitted = true;\r\n      if (!this.currentMedications.medicine_id) {\r\n        return;\r\n      } else if (!this.currentMedications.treatment_rules_id) {\r\n        return;\r\n      } else if (!this.currentMedications.treatment_duration_id) {\r\n        return;\r\n      } else if (!this.currentMedications.treatment_dose_id) {\r\n        return;\r\n      } else if (!this.currentMedications.patient_id) {\r\n        return;\r\n      } else if (this.validation.isIdExists(this.currentMedicationsList, 'medicine_id', this.currentMedications.medicine_id, 'patient_current_medications_id', this.currentMedications.patient_current_medications_id, this)) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.currentMedicationsSave(this.currentMedications);\r\n        if (result.status === 201) {\r\n          this.getCurrentMedicationsByPatientId(this.currentMedications.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    confirmDeleteCurrentMedications(data) {\r\n      this.$confirm.require({\r\n        message: 'Do you want to delete this record?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => {\r\n          this.deleteCurrentMedications(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    async deleteCurrentMedications(data) {\r\n      let result = await this.patientProfileService.currentMedicationsDelete(data);\r\n      if (result.status === 202) {\r\n        this.getCurrentMedicationsByPatientId(data.patient_id)\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    newPastMedicalHistory() {\r\n      this.pastMedicalHistoryDialog = true;\r\n    },\r\n    async addPastMedicalHistory() {\r\n      this.submitted = true;\r\n      if (!this.pastMedicalHistory.diagnosis_id) {\r\n        return;\r\n      } else if (!this.pastMedicalHistory.patient_id) {\r\n        return;\r\n      } else if (this.validation.isIdExists(this.pastMedicalHistoryList, 'diagnosis_id', this.pastMedicalHistory.diagnosis_id, 'patient_past_history_id', this.pastMedicalHistory.patient_past_history_id, this)) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.pastHistorySave(this.pastMedicalHistory);\r\n        if (result.status === 201) {\r\n          this.getPastHistoryByPatientId(this.pastMedicalHistory.patient_id);\r\n          this.hideDialog();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n    confirmDeletePastMedicalHistory(data) {\r\n      this.$confirm.require({\r\n        message: 'Do you want to delete this record?',\r\n        header: 'Delete Confirmation',\r\n        icon: 'pi pi-info-circle',\r\n        acceptClass: 'p-button-danger',\r\n        accept: () => {\r\n          this.deletePastMedicalHistory(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    async deletePastMedicalHistory(data) {\r\n      let result = await this.patientProfileService.pastHistoryDelete(data);\r\n      if (result.status === 202) {\r\n        this.getPastHistoryByPatientId(data.patient_id)\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n\r\n    async patientHistorySave() {\r\n      this.patientHistory.patient_id = JSON.parse(localStorage.getItem(\"patientIdForTreatment\")).toString();\r\n      //this.submitted = true;\r\n      if (!this.patientHistory.patient_id) {\r\n        return;\r\n      } else {\r\n        let result = await this.patientProfileService.patientHistorySave(this.patientHistory, this);\r\n        if (result.status === 201) {\r\n          this.hideHistory();\r\n          this.$toast.add({\r\n            severity: \"success\",\r\n            summary: \"Success\",\r\n            detail: \"Saved Successfully\",\r\n            life: 10000,\r\n          });\r\n        } else {\r\n          this.$toast.add({\r\n            severity: \"error\",\r\n            summary: \"Failed\",\r\n            detail: result.res,\r\n            life: 10000,\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    // collect history\r\n    historyCollection(data) {\r\n      if (data.gender == \"Female\") {\r\n        this.isFemale = true;\r\n      } else {\r\n        this.isFemale = false;\r\n      }\r\n\r\n      localStorage.setItem('admissionIdForDiabetesService', data.admission_id);\r\n\r\n      var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n      if (patientId) {\r\n        localStorage.removeItem('patientIdForTreatment');\r\n        localStorage.setItem('patientIdForTreatment', data.patient_id);\r\n      } else {\r\n        localStorage.setItem('patientIdForTreatment', data.patient_id);\r\n      }\r\n\r\n      // use for Dialog //\r\n      this.complaintSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.compliantList = data.data));\r\n\r\n      this.foodService\r\n        .getActiveCombo()\r\n        .then((data) => (this.foodList = data.data));\r\n\r\n      this.onExaminationSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.onExaminationList = data.data));\r\n\r\n      this.medicineSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.medicineList = data.data));\r\n\r\n      this.treatmentRulesSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentRulesList = data.data));\r\n\r\n      this.treatmentDurationSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentDurationList = data.data));\r\n\r\n      this.treatmentDoseSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.treatmentDoseList = data.data));\r\n\r\n      this.diagnosisSetupService\r\n        .getAll()\r\n        .then((data) => (this.diagnosisList = data.data));\r\n\r\n      this.commonService\r\n        .GetAllAllergyType()\r\n        .then((data) => (this.allergyTypeList = data.data));\r\n\r\n      this.commonService\r\n        .GetAllDiabetesMeal()\r\n        .then((data) => (this.diabetesMealList = data.data));\r\n\r\n      this.dietChartTemplateSetupService\r\n        .getActiveCombo()\r\n        .then((data) => (this.dietChartTemplateList = data.data));\r\n      // use for Dialog //\r\n\r\n      // collect history patient wise //\r\n      this.getComplainsByPatientId(data.patient_id);\r\n\r\n      this.getAllergyDetailsByPatientId(data.patient_id);\r\n\r\n      this.getOnExaminationByPatientId(data.patient_id);\r\n\r\n      this.getIOChartByPatientId(data.patient_id);\r\n\r\n      this.getDiabetesChartByPatientId(data.patient_id);\r\n\r\n      this.getDietChartByPatientId(data.patient_id);\r\n\r\n      this.getCurrentMedicationsByPatientId(data.patient_id);\r\n\r\n      this.getPastHistoryByPatientId(data.patient_id);\r\n\r\n      this.patientProfileService.getSystemSubstance(data.patient_id).then((data) => this.formattedSystemSubstance(data.data));\r\n\r\n      this.isHistory = true;\r\n      this.dataList = false;\r\n      // collect history patient wise //\r\n    },\r\n\r\n    getComplainsByPatientId(patient_id) {\r\n      this.chiefComplain.patient_id = patient_id;\r\n      this.patientProfileService.getComplainsByPatientId(patient_id).then((data) => (this.chiefComplainList = data.data));\r\n    },\r\n\r\n    getAllergyDetailsByPatientId(patient_id) {\r\n      this.allergyDetails.patient_id = patient_id;\r\n      this.patientProfileService.getAllergyDetailsByPatientId(patient_id).then((data) => (this.allergyDetailsList = data.data));\r\n    },\r\n\r\n    getOnExaminationsPopup() {\r\n      var patientId = JSON.parse(localStorage.getItem(\"patientIdForTreatment\"));\r\n\r\n      this.popupOnExaminationsData = [];\r\n      this.onExaminationList.forEach((element) => {\r\n        this.popupOnExaminationsData.push({\r\n          _on_examination_name: element.text,\r\n          on_examination_id: element.value,\r\n          on_examination_result: String(1),\r\n          patient_id: patientId.toString()\r\n        });\r\n      });\r\n\r\n      this.onExaminationPopupDialog = true;\r\n    },\r\n\r\n    getOnExaminationByPatientId(patient_id) {\r\n      this.onExamination.patient_id = patient_id;\r\n      this.patientProfileService.getOnExaminationByPatientId(patient_id).then((data) => (this.patientOnExaminationList = data.data));\r\n    },\r\n\r\n    getIOChartByPatientId(patient_id) {\r\n      this.iOChart.patient_id = patient_id;\r\n      this.patientProfileService.getIOChartByPatientId(patient_id).then((data) => (this.iOChartList = data.data));\r\n    },\r\n\r\n    getDiabetesChartByPatientId(patient_id) {\r\n      this.diabetesChart.patient_id = patient_id;\r\n      this.patientProfileService.getDiabetesChartByPatientId(patient_id).then((data) => (this.diabetesChartList = data.data));\r\n    },\r\n\r\n    getDietChartByPatientId(patient_id) {\r\n      this.dietChart.patient_id = patient_id;\r\n      this.patientProfileService.getDietChartByPatientId(patient_id).then((data) => (this.dietChartList = data.data));\r\n    },\r\n\r\n    getCurrentMedicationsByPatientId(patient_id) {\r\n      this.currentMedications.patient_id = patient_id;\r\n      this.patientProfileService.getCurrentMedicationsByPatientId(patient_id).then((data) => (this.currentMedicationsList = data.data));\r\n    },\r\n\r\n    getPastHistoryByPatientId(patient_id) {\r\n      this.pastMedicalHistory.patient_id = patient_id;\r\n      this.patientProfileService.getPastHistoryByPatientId(patient_id).then((data) => (this.pastMedicalHistoryList = data.data));\r\n    },\r\n\r\n    formattedSystemSubstance(data) {\r\n      //this.patientHistory.patient_id = patient_id;\r\n      this.patientHistory.lstPersonalHistory = data.lstPersonalHistory;\r\n      this.patientHistory.lstFamilyHistory = data.lstFamilyHistory;\r\n      this.patientHistory.lstSystemsReview = data.lstSystemsReview;\r\n      this.patientHistory.lstSubstanceUse = data.lstSubstanceUse;\r\n      this.patientHistory.lstReproductiveHistory = data.lstReproductiveHistory;\r\n    },\r\n\r\n    hideHistory() {\r\n      this.isHistory = false;\r\n      this.dataList = true;\r\n      localStorage.removeItem('patientIdForTreatment');\r\n    },\r\n\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY\");\r\n    },\r\n    formatDateTime(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}