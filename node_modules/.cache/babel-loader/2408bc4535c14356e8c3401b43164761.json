{"remainingRequest":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\collection-zone\\PendingSampleCollection.js","dependencies":[{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\src\\scripts\\collection-zone\\PendingSampleCollection.js","mtime":1640498582584},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\SVN PROJECTS\\DiagnosticCenterManagement_Client\\trunk\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/SVN PROJECTS/DiagnosticCenterManagement_Client/trunk/src/scripts/collection-zone/PendingSampleCollection.js"],"names":["CommonService","PendingSampleCollectionService","DiagnosisReportService","moment","FilterMatchMode","FilterOperator","data","dataList","pendingSampleCollectionList","investigationStatusList","pendingSampleCollection","cdfromdate","String","Date","format","cdtodate","investigation_status","submitted","filters","global","value","matchMode","CONTAINS","name","STARTS_WITH","initFilters","operator","AND","constraints","created","pendingSampleCollectionService","diagnosisReportService","commonService","GetAllInvestigationStatus","then","show","methods","reset","fromdate","todate","getDynamic","print","info","GetBarcodeLabel","barcode_or_level","Downloadfile","sampleConfirm","$confirm","require","message","header","icon","accept","sample","reject","diagnosisConfirm","diagnosis","saveSampleCollection","result","status","$toast","add","severity","summary","detail","life","res","sendToDiagnosis","formatDate"],"mappings":"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","sourcesContent":["import CommonService from \"../../service/CommonService\";\r\nimport PendingSampleCollectionService from \"../../service/collection-zone/PendingSampleCollectionService\";\r\nimport DiagnosisReportService from \"../../service/report/DiagnosisReportService\";\r\nimport moment from \"moment\";\r\nimport { FilterMatchMode, FilterOperator } from \"primevue/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataList: false,\r\n      pendingSampleCollectionList: [],\r\n      investigationStatusList: [],\r\n      pendingSampleCollection: {\r\n        // cdfromdate: moment(\r\n        //   String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n        // ).format(\"MM/DD/YYYY\"),\r\n        cdfromdate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n        investigation_status: \"Waiting For Sample\",\r\n      },\r\n      submitted: false,\r\n      filters: {\r\n        global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n        name: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n      },\r\n      initFilters() {\r\n        this.filters = {\r\n          global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n          name: {\r\n            operator: FilterOperator.AND,\r\n            constraints: [\r\n              { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.pendingSampleCollectionService = new PendingSampleCollectionService();\r\n    this.diagnosisReportService = new DiagnosisReportService();\r\n    this.commonService = new CommonService();\r\n\r\n    this.commonService\r\n      .GetAllInvestigationStatus()\r\n      .then((data) => (this.investigationStatusList = data.data));\r\n\r\n    this.show();\r\n  },\r\n  methods: {\r\n    reset() {\r\n      // this.pendingSampleCollection = {\r\n      //   cdfromdate: moment(\r\n      //     String(new Date(new Date().setDate(new Date().getDate() - 7)))\r\n      //   ).format(\"MM/DD/YYYY\"),\r\n      //   cdtodate: moment(String(new Date())).format(\"MM/DD/YYYY\"),\r\n      //   investigation_status: \"Waiting For Sample\",\r\n      // };\r\n      this.dataList = false;\r\n      this.submitted = false;\r\n      this.show();\r\n    },\r\n    show() {\r\n      this.submitted = true;\r\n      if (!this.pendingSampleCollection.cdfromdate) {\r\n        return;\r\n      } else if (!this.pendingSampleCollection.cdtodate) {\r\n        return;\r\n      } else if (!this.pendingSampleCollection.investigation_status) {\r\n        return;\r\n      } else {\r\n        this.pendingSampleCollection.fromdate = moment(\r\n          String(this.pendingSampleCollection.cdfromdate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.pendingSampleCollection.todate = moment(\r\n          String(this.pendingSampleCollection.cdtodate)\r\n        ).format(\"YYYY-MM-DD\");\r\n        this.pendingSampleCollectionService\r\n          .getDynamic(\r\n            this.pendingSampleCollection.fromdate,\r\n            this.pendingSampleCollection.todate,\r\n            this.pendingSampleCollection.investigation_status\r\n          )\r\n          .then((data) => (this.pendingSampleCollectionList = data.data));\r\n      }\r\n      this.dataList = true;\r\n      this.submitted = true;\r\n    },\r\n    // getBarcodeImage(bCode, data) {\r\n    //   // var printContents = document.getElementById(\"printableArea\").innerHTML;\r\n    //   //var a = window.open('', '', 'height=500, width=500');\r\n    //   var name = data.aPatient.first_name + data.aPatient.last_name;\r\n    //   var reg_no = data.aPatient.registration_no;\r\n    //   var barcode = data.barcode_or_level;\r\n    //   var barcodeImg = \"data:image/png;base64,\" + bCode.data;\r\n    //   var a = window.open(\"\", \"\", \"\");\r\n    //   a.document.write(\"<html><body>\");\r\n    //   a.document.write(\"<h4>\" + name + \"; Reg No: \" + reg_no + \"<h4>\");\r\n    //   a.document.write(\r\n    //     \"<img src='\" +\r\n    //       barcodeImg +\r\n    //       \"'/><figcaption>\" +\r\n    //       barcode +\r\n    //       \"</figcaption>\"\r\n    //   );\r\n    //   //a.document.write(printContents);\r\n    //   a.document.write(\"</body></html>\");\r\n    //   a.document.close();\r\n    //   a.print();\r\n    //   location.reload();\r\n    // },\r\n    print(info) {\r\n      this.diagnosisReportService.GetBarcodeLabel(info.barcode_or_level, this).then((data) => (this.commonService.Downloadfile(data.data)));\r\n\r\n      // this.commonService\r\n      //   .GetBarcodeImage(info.barcode_or_level)\r\n      //   .then((data) => this.getBarcodeImage(data, info));\r\n    },\r\n    sampleConfirm(data) {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure sample collected?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.sample(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    diagnosisConfirm(data) {\r\n      this.$confirm.require({\r\n        message: \"Are you want to sure send to diagnosis?\",\r\n        header: \"Confirmation\",\r\n        icon: \"pi pi-exclamation-triangle\",\r\n        accept: () => {\r\n          this.diagnosis(data);\r\n        },\r\n        reject: () => {\r\n          return;\r\n        },\r\n      });\r\n    },\r\n    async sample(data) {\r\n      let result =\r\n        await this.pendingSampleCollectionService.saveSampleCollection(data, this);\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Successfully Saved\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    async diagnosis(data) {\r\n      let result = await this.pendingSampleCollectionService.sendToDiagnosis(\r\n        data, this\r\n      );\r\n      if (result.status === 200) {\r\n        this.$toast.add({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Send to Diagnosis\",\r\n          life: 10000,\r\n        });\r\n        this.reset();\r\n      } else {\r\n        this.$toast.add({\r\n          severity: \"error\",\r\n          summary: \"Failed\",\r\n          detail: result.res,\r\n          life: 10000,\r\n        });\r\n      }\r\n    },\r\n    formatDate(value) {\r\n      return moment(String(value)).format(\"MM/DD/YYYY h:mm:ss a\");\r\n    },\r\n  },\r\n};"]}]}